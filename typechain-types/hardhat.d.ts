/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IAddressResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAddressResolver__factory>;
    getContractFactory(
      name: "ICollateralShort",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICollateralShort__factory>;
    getContractFactory(
      name: "ICurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurve__factory>;
    getContractFactory(
      name: "IDelegateApprovals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelegateApprovals__factory>;
    getContractFactory(
      name: "IExchanger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchanger__factory>;
    getContractFactory(
      name: "IExchangeRates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchangeRates__factory>;
    getContractFactory(
      name: "IFeeCounter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeCounter__factory>;
    getContractFactory(
      name: "IGWAVOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGWAVOracle__factory>;
    getContractFactory(
      name: "ILiquidityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityPool__factory>;
    getContractFactory(
      name: "ILiquidityTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityTracker__factory>;
    getContractFactory(
      name: "ILyraRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILyraRegistry__factory>;
    getContractFactory(
      name: "IOptionGreekCache",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOptionGreekCache__factory>;
    getContractFactory(
      name: "IOptionMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOptionMarket__factory>;
    getContractFactory(
      name: "IOptionMarketPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOptionMarketPricer__factory>;
    getContractFactory(
      name: "IOptionToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOptionToken__factory>;
    getContractFactory(
      name: "IShortCollateral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShortCollateral__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "ISynthetix",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthetix__factory>;
    getContractFactory(
      name: "ISynthetixAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthetixAdapter__factory>;
    getContractFactory(
      name: "BlackScholes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlackScholes__factory>;
    getContractFactory(
      name: "FixedPointMathLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedPointMathLib__factory>;
    getContractFactory(
      name: "GWAV",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GWAV__factory>;
    getContractFactory(
      name: "PoolHedger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolHedger__factory>;
    getContractFactory(
      name: "SimpleInitializeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleInitializeable__factory>;
    getContractFactory(
      name: "LiquidityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityPool__factory>;
    getContractFactory(
      name: "LiquidityToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityToken__factory>;
    getContractFactory(
      name: "OptionGreekCache",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionGreekCache__factory>;
    getContractFactory(
      name: "OptionMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionMarket__factory>;
    getContractFactory(
      name: "OptionMarketPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionMarketPricer__factory>;
    getContractFactory(
      name: "OptionToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionToken__factory>;
    getContractFactory(
      name: "BasicFeeCounter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicFeeCounter__factory>;
    getContractFactory(
      name: "BasicLiquidityCounter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicLiquidityCounter__factory>;
    getContractFactory(
      name: "GWAVOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GWAVOracle__factory>;
    getContractFactory(
      name: "KeeperHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KeeperHelper__factory>;
    getContractFactory(
      name: "LyraAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LyraAdapter__factory>;
    getContractFactory(
      name: "LyraRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LyraRegistry__factory>;
    getContractFactory(
      name: "MultistepSwapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultistepSwapper__factory>;
    getContractFactory(
      name: "OptionMarketViewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionMarketViewer__factory>;
    getContractFactory(
      name: "BasicOptionMarketWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicOptionMarketWrapper__factory>;
    getContractFactory(
      name: "OptionMarketWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionMarketWrapper__factory>;
    getContractFactory(
      name: "OptionMarketWrapperWithSwaps",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionMarketWrapperWithSwaps__factory>;
    getContractFactory(
      name: "ShortCollateral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortCollateral__factory>;
    getContractFactory(
      name: "ShortPoolHedger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortPoolHedger__factory>;
    getContractFactory(
      name: "AbstractOwned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractOwned__factory>;
    getContractFactory(
      name: "DecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecimalMath__factory>;
    getContractFactory(
      name: "Owned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Owned__factory>;
    getContractFactory(
      name: "OwnedUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnedUpgradeable__factory>;
    getContractFactory(
      name: "SignedDecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignedDecimalMath__factory>;
    getContractFactory(
      name: "SynthetixAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SynthetixAdapter__factory>;
    getContractFactory(
      name: "ITestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITestERC20__factory>;
    getContractFactory(
      name: "MathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MathTest__factory>;
    getContractFactory(
      name: "AggregatorV2V3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV2V3Interface__factory>;
    getContractFactory(
      name: "MockAggregatorV2V3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAggregatorV2V3__factory>;
    getContractFactory(
      name: "TestAddressResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestAddressResolver__factory>;
    getContractFactory(
      name: "TestCollateralShort",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCollateralShort__factory>;
    getContractFactory(
      name: "TestCurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCurve__factory>;
    getContractFactory(
      name: "TestDelegateApprovals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDelegateApprovals__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "TestERC20Fail",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20Fail__factory>;
    getContractFactory(
      name: "TestERC20SetDecimals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20SetDecimals__factory>;
    getContractFactory(
      name: "TestExchanger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExchanger__factory>;
    getContractFactory(
      name: "TestExchangeRates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExchangeRates__factory>;
    getContractFactory(
      name: "TestFaucet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFaucet__factory>;
    getContractFactory(
      name: "TestSwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestSwapRouter__factory>;
    getContractFactory(
      name: "TestSynthetix",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestSynthetix__factory>;
    getContractFactory(
      name: "TestSynthetixReturnZero",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestSynthetixReturnZero__factory>;
    getContractFactory(
      name: "LyraTrading",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LyraTrading__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;

    getContractAt(
      name: "IAddressResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAddressResolver>;
    getContractAt(
      name: "ICollateralShort",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICollateralShort>;
    getContractAt(
      name: "ICurve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICurve>;
    getContractAt(
      name: "IDelegateApprovals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelegateApprovals>;
    getContractAt(
      name: "IExchanger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExchanger>;
    getContractAt(
      name: "IExchangeRates",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExchangeRates>;
    getContractAt(
      name: "IFeeCounter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeCounter>;
    getContractAt(
      name: "IGWAVOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGWAVOracle>;
    getContractAt(
      name: "ILiquidityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidityPool>;
    getContractAt(
      name: "ILiquidityTracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidityTracker>;
    getContractAt(
      name: "ILyraRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILyraRegistry>;
    getContractAt(
      name: "IOptionGreekCache",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOptionGreekCache>;
    getContractAt(
      name: "IOptionMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOptionMarket>;
    getContractAt(
      name: "IOptionMarketPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOptionMarketPricer>;
    getContractAt(
      name: "IOptionToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOptionToken>;
    getContractAt(
      name: "IShortCollateral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IShortCollateral>;
    getContractAt(
      name: "ISwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "ISynthetix",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISynthetix>;
    getContractAt(
      name: "ISynthetixAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISynthetixAdapter>;
    getContractAt(
      name: "BlackScholes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlackScholes>;
    getContractAt(
      name: "FixedPointMathLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixedPointMathLib>;
    getContractAt(
      name: "GWAV",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GWAV>;
    getContractAt(
      name: "PoolHedger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolHedger>;
    getContractAt(
      name: "SimpleInitializeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleInitializeable>;
    getContractAt(
      name: "LiquidityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityPool>;
    getContractAt(
      name: "LiquidityToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityToken>;
    getContractAt(
      name: "OptionGreekCache",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionGreekCache>;
    getContractAt(
      name: "OptionMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionMarket>;
    getContractAt(
      name: "OptionMarketPricer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionMarketPricer>;
    getContractAt(
      name: "OptionToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionToken>;
    getContractAt(
      name: "BasicFeeCounter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicFeeCounter>;
    getContractAt(
      name: "BasicLiquidityCounter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicLiquidityCounter>;
    getContractAt(
      name: "GWAVOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GWAVOracle>;
    getContractAt(
      name: "KeeperHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KeeperHelper>;
    getContractAt(
      name: "LyraAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LyraAdapter>;
    getContractAt(
      name: "LyraRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LyraRegistry>;
    getContractAt(
      name: "MultistepSwapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultistepSwapper>;
    getContractAt(
      name: "OptionMarketViewer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionMarketViewer>;
    getContractAt(
      name: "BasicOptionMarketWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicOptionMarketWrapper>;
    getContractAt(
      name: "OptionMarketWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionMarketWrapper>;
    getContractAt(
      name: "OptionMarketWrapperWithSwaps",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionMarketWrapperWithSwaps>;
    getContractAt(
      name: "ShortCollateral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortCollateral>;
    getContractAt(
      name: "ShortPoolHedger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortPoolHedger>;
    getContractAt(
      name: "AbstractOwned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractOwned>;
    getContractAt(
      name: "DecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecimalMath>;
    getContractAt(
      name: "Owned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Owned>;
    getContractAt(
      name: "OwnedUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnedUpgradeable>;
    getContractAt(
      name: "SignedDecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SignedDecimalMath>;
    getContractAt(
      name: "SynthetixAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SynthetixAdapter>;
    getContractAt(
      name: "ITestERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITestERC20>;
    getContractAt(
      name: "MathTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MathTest>;
    getContractAt(
      name: "AggregatorV2V3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV2V3Interface>;
    getContractAt(
      name: "MockAggregatorV2V3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAggregatorV2V3>;
    getContractAt(
      name: "TestAddressResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestAddressResolver>;
    getContractAt(
      name: "TestCollateralShort",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCollateralShort>;
    getContractAt(
      name: "TestCurve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCurve>;
    getContractAt(
      name: "TestDelegateApprovals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDelegateApprovals>;
    getContractAt(
      name: "TestERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20>;
    getContractAt(
      name: "TestERC20Fail",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20Fail>;
    getContractAt(
      name: "TestERC20SetDecimals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20SetDecimals>;
    getContractAt(
      name: "TestExchanger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExchanger>;
    getContractAt(
      name: "TestExchangeRates",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExchangeRates>;
    getContractAt(
      name: "TestFaucet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFaucet>;
    getContractAt(
      name: "TestSwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestSwapRouter>;
    getContractAt(
      name: "TestSynthetix",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestSynthetix>;
    getContractAt(
      name: "TestSynthetixReturnZero",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestSynthetixReturnZero>;
    getContractAt(
      name: "LyraTrading",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LyraTrading>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
