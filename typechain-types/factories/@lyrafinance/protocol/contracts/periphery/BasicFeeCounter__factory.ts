/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BasicFeeCounter,
  BasicFeeCounterInterface,
} from "../../../../../@lyrafinance/protocol/contracts/periphery/BasicFeeCounter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "counter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isTrusted",
        type: "bool",
      },
    ],
    name: "setTrustedCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalFeesPerMarket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
    ],
    name: "trackFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "trustedCounter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a16106678061006e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b1461012d578063a3dd45791461014d578063a4ed578114610180578063e6a1292b1461019357600080fd5b80631627540c1461008d57806353a47bb7146100a257806379ba5097146100ec5780637e673ead146100f4575b600080fd5b6100a061009b366004610514565b6101a6565b005b6001546100c29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100a0610227565b61011f610102366004610536565b600360209081526000928352604080842090915290825290205481565b6040519081526020016100e3565b6000546100c29073ffffffffffffffffffffffffffffffffffffffff1681565b61017061015b366004610514565b60026020526000908152604090205460ff1681565b60405190151581526020016100e3565b6100a061018e366004610569565b610349565b6100a06101a13660046105b6565b610412565b6101ae610470565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102a5576001546040517f96cf9ed800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff90911660448201526064015b60405180910390fd5b6000546001546040805173ffffffffffffffffffffffffffffffffffffffff93841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b3360009081526002602052604090205460ff166103c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6e6f74207472757374656420636f756e74657200000000000000000000000000604482015260640161029c565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152600360209081526040808320938816835292905290812080548392906104069084906105f2565b90915550505050505050565b61041a610470565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104e9576000546040517f1abc2f9800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff909116604482015260640161029c565b565b803573ffffffffffffffffffffffffffffffffffffffff8116811461050f57600080fd5b919050565b60006020828403121561052657600080fd5b61052f826104eb565b9392505050565b6000806040838503121561054957600080fd5b610552836104eb565b9150610560602084016104eb565b90509250929050565b600080600080600060a0868803121561058157600080fd5b61058a866104eb565b9450610598602087016104eb565b94979496505050506040830135926060810135926080909101359150565b600080604083850312156105c957600080fd5b6105d2836104eb565b9150602083013580151581146105e757600080fd5b809150509250929050565b6000821982111561062c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea26469706673582212209d3bb734bb6edc1dd5083532afe599bf27e2fe0fd146fb2c78c0ca28913e7f8864736f6c63430008090033";

type BasicFeeCounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicFeeCounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicFeeCounter__factory extends ContractFactory {
  constructor(...args: BasicFeeCounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicFeeCounter> {
    return super.deploy(overrides || {}) as Promise<BasicFeeCounter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BasicFeeCounter {
    return super.attach(address) as BasicFeeCounter;
  }
  override connect(signer: Signer): BasicFeeCounter__factory {
    return super.connect(signer) as BasicFeeCounter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicFeeCounterInterface {
    return new utils.Interface(_abi) as BasicFeeCounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicFeeCounter {
    return new Contract(address, _abi, signerOrProvider) as BasicFeeCounter;
  }
}
