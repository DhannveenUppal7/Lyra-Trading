/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultistepSwapper,
  MultistepSwapperInterface,
} from "../../../../../@lyrafinance/protocol/contracts/periphery/MultistepSwapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract ISynthetix",
        name: "_synthetix",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenInCurrencyKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum MultistepSwapper.SwapType",
            name: "swapType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "tokenOutCurrencyKey",
            type: "bytes32",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct MultistepSwapper.Swap[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff60a01b1916905534801561001d57600080fd5b506001600055610e24806100326000396000f3fe6080604052600436106100295760003560e01c80639e3c5bc31461002e578063f09a401614610053575b600080fd5b61004161003c366004610a35565b610075565b60405190815260200160405180910390f35b34801561005f57600080fd5b5061007361006e366004610ad9565b610902565b005b6000600260005414156100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260005582610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f30206c656e67746820737761707300000000000000000000000000000000000060448201526064016100e0565b73ffffffffffffffffffffffffffffffffffffffff871660009081526003602052604090205460ff1661029d576001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201529088169063095ea7b390604401602060405180830381600087803b15801561021557600080fd5b505af1158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d9190610b12565b5073ffffffffffffffffffffffffffffffffffffffff8716600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905273ffffffffffffffffffffffffffffffffffffffff8816906323b872dd90606401602060405180830381600087803b15801561031157600080fd5b505af1158015610325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103499190610b12565b5050604080516020810190915260008082528591905b848110156107e057600186868381811061037b5761037b610b6a565b6103919260206080909202019081019150610b99565b60018111156103a2576103a2610b3b565b111561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f496e76616c69642073776170747970650000000000000000000000000000000060448201526064016100e0565b600086868381811061041e5761041e610b6a565b6104349260206080909202019081019150610b99565b600181111561044557610445610b3b565b141561050f5760025473ffffffffffffffffffffffffffffffffffffffff1663ee52a2f3898589898681811061047d5761047d610b6a565b905060800201604001356040518463ffffffff1660e01b81526004016104b6939291909283526020830191909152604082015260600190565b602060405180830381600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105089190610bba565b9250610785565b600186868381811061052357610523610b6a565b6105399260206080909202019081019150610b99565b600181111561054a5761054a610b3b565b141561078557815161059a576040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060608b901b16602082015260340160405160208183030381529060405291505b818686838181106105ad576105ad610b6a565b90506080020160600160208101906105c59190610bd3565b8787848181106105d7576105d7610b6a565b90506080020160200160208101906105ef9190610bf8565b60405160200161060193929190610c45565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052915061063c600186610ceb565b8114806106a0575061064f600186610ceb565b811080156106a0575060018686610667846001610d02565b81811061067657610676610b6a565b61068c9260206080909202019081019150610b99565b600181111561069d5761069d610b3b565b14155b15610785576001546040805160a0810182528481523060208201524281830152606081018690526000608082015290517fc04b8d5900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163c04b8d599161071e91600401610d1a565b602060405180830381600087803b15801561073857600080fd5b505af115801561074c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107709190610bba565b92506040518060200160405280600081525091505b85858281811061079757610797610b6a565b90506080020160200160208101906107af9190610bf8565b98508585828181106107c3576107c3610b6a565b905060800201604001359750806107d990610db5565b905061035f565b508282101561084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f616d6f756e744f7574206c6f776572207468616e206d696e696d756d0000000060448201526064016100e0565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff89169063a9059cbb90604401602060405180830381600087803b1580156108b957600080fd5b505af11580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190610b12565b505060016000559695505050505050565b60025474010000000000000000000000000000000000000000900460ff1615610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f616c726561647920696e697469616c697a65640000000000000000000000000060448201526064016100e0565b6001805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055600280547fffffffffffffffffffffff00000000000000000000000000000000000000000016919092161774010000000000000000000000000000000000000000179055565b73ffffffffffffffffffffffffffffffffffffffff81168114610a3257600080fd5b50565b60008060008060008060a08789031215610a4e57600080fd5b8635610a5981610a10565b95506020870135945060408701359350606087013567ffffffffffffffff80821115610a8457600080fd5b818901915089601f830112610a9857600080fd5b813581811115610aa757600080fd5b8a60208260071b8501011115610abc57600080fd5b602083019550809450505050608087013590509295509295509295565b60008060408385031215610aec57600080fd5b8235610af781610a10565b91506020830135610b0781610a10565b809150509250929050565b600060208284031215610b2457600080fd5b81518015158114610b3457600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610bab57600080fd5b813560028110610b3457600080fd5b600060208284031215610bcc57600080fd5b5051919050565b600060208284031215610be557600080fd5b813562ffffff81168114610b3457600080fd5b600060208284031215610c0a57600080fd5b8135610b3481610a10565b60005b83811015610c30578181015183820152602001610c18565b83811115610c3f576000848401525b50505050565b60008451610c57818460208901610c15565b60e89490941b7fffffff0000000000000000000000000000000000000000000000000000000000169190930190815260609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016600382015260170192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610cfd57610cfd610cbc565b500390565b60008219821115610d1557610d15610cbc565b500190565b602081526000825160a0602084015280518060c0850152610d428160e0860160208501610c15565b73ffffffffffffffffffffffffffffffffffffffff60208601511660408501526040850151606085015260608501516080850152608085015160a085015260e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610de757610de7610cbc565b506001019056fea26469706673582212208ffca03c4c06b3e4ad89286973f41c53c054a44e0a6a7ca2070e7507c5f73dab64736f6c63430008090033";

type MultistepSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultistepSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultistepSwapper__factory extends ContractFactory {
  constructor(...args: MultistepSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultistepSwapper> {
    return super.deploy(overrides || {}) as Promise<MultistepSwapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultistepSwapper {
    return super.attach(address) as MultistepSwapper;
  }
  override connect(signer: Signer): MultistepSwapper__factory {
    return super.connect(signer) as MultistepSwapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultistepSwapperInterface {
    return new utils.Interface(_abi) as MultistepSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultistepSwapper {
    return new Contract(address, _abi, signerOrProvider) as MultistepSwapper;
  }
}
