/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BasicLiquidityCounter,
  BasicLiquidityCounterInterface,
} from "../../../../../@lyrafinance/protocol/contracts/periphery/BasicLiquidityCounter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "setLiquidityToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a16106eb8061006e6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80636039fbdb116100765780638da5cb5b1161005b5780638da5cb5b14610155578063ba4c28c314610175578063fee778f9146101a357600080fd5b80636039fbdb1461013a57806379ba50971461014d57600080fd5b80631627540c146100a85780631e10eeaf146100bd57806343cd8f7e146100d057806353a47bb71461011a575b600080fd5b6100bb6100b636600461060b565b6101b6565b005b6100bb6100cb36600461062d565b610237565b6002546100f09073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6001546100f09073ffffffffffffffffffffffffffffffffffffffff1681565b6100bb61014836600461062d565b610320565b6100bb6103fb565b6000546100f09073ffffffffffffffffffffffffffffffffffffffff1681565b61019561018336600461060b565b60036020526000908152604090205481565b604051908152602001610111565b6100bb6101b136600461060b565b610518565b6101be610567565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b60025473ffffffffffffffffffffffffffffffffffffffff1633146102e2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f63616e206f6e6c792062652063616c6c6564206279204c69717569646974795460448201527f6f6b656e0000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290610317908490610686565b90915550505050565b60025473ffffffffffffffffffffffffffffffffffffffff1633146103c6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f63616e206f6e6c792062652063616c6c6564206279204c69717569646974795460448201527f6f6b656e0000000000000000000000000000000000000000000000000000000060648201526084016102d9565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120805483929061031790849061069d565b60015473ffffffffffffffffffffffffffffffffffffffff163314610474576001546040517f96cf9ed800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff90911660448201526064016102d9565b6000546001546040805173ffffffffffffffffffffffffffffffffffffffff93841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b610520610567565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105e0576000546040517f1abc2f9800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff90911660448201526064016102d9565b565b803573ffffffffffffffffffffffffffffffffffffffff8116811461060657600080fd5b919050565b60006020828403121561061d57600080fd5b610626826105e2565b9392505050565b6000806040838503121561064057600080fd5b610649836105e2565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561069857610698610657565b500390565b600082198211156106b0576106b0610657565b50019056fea2646970667358221220163afe0e4f9c3566b2996a06f23b477abdcdc063708c60f3e9f3df3ed917c0ba64736f6c63430008090033";

type BasicLiquidityCounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicLiquidityCounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicLiquidityCounter__factory extends ContractFactory {
  constructor(...args: BasicLiquidityCounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicLiquidityCounter> {
    return super.deploy(overrides || {}) as Promise<BasicLiquidityCounter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BasicLiquidityCounter {
    return super.attach(address) as BasicLiquidityCounter;
  }
  override connect(signer: Signer): BasicLiquidityCounter__factory {
    return super.connect(signer) as BasicLiquidityCounter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicLiquidityCounterInterface {
    return new utils.Interface(_abi) as BasicLiquidityCounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicLiquidityCounter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BasicLiquidityCounter;
  }
}
