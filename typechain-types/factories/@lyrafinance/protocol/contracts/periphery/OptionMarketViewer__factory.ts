/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptionMarketViewer,
  OptionMarketViewerInterface,
} from "../../../../../@lyrafinance/protocol/contracts/periphery/OptionMarketViewer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "RemovingInvalidMarket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarketViewer.OptionMarketAddresses",
        name: "market",
        type: "tuple",
      },
    ],
    name: "MarketAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "MarketRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketViewer.OptionMarketAddresses",
        name: "newMarketAddresses",
        type: "tuple",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoard",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAtExpiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "forceCloseGwavIV",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "netGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceCloseSkew",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "callDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "putDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "stdVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.StrikeGreeks",
                name: "cachedGreeks",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "baseReturnedRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longCallOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longPutOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallBaseOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallQuoteOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortPutOpenInterest",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketViewer.StrikeView[]",
            name: "strikes",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.BoardView",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoardForBaseKey",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAtExpiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "forceCloseGwavIV",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "netGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceCloseSkew",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "callDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "putDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "stdVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.StrikeGreeks",
                name: "cachedGreeks",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "baseReturnedRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longCallOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longPutOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallBaseOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallQuoteOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortPutOpenInterest",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketViewer.StrikeView[]",
            name: "strikes",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.BoardView",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getBoardForStrikeId",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAtExpiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "forceCloseGwavIV",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "netGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceCloseSkew",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "callDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "putDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "stdVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.StrikeGreeks",
                name: "cachedGreeks",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "baseReturnedRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longCallOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longPutOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallBaseOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallQuoteOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortPutOpenInterest",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketViewer.StrikeView[]",
            name: "strikes",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.BoardView",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket[]",
        name: "markets",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getLiquidityBalancesAndAllowances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType:
          "struct OptionMarketViewer.LiquidityBalanceAndAllowance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "getLiveBoards",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAtExpiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "forceCloseGwavIV",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "netGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceCloseSkew",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "callDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "putDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "stdVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.StrikeGreeks",
                name: "cachedGreeks",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "baseReturnedRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longCallOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longPutOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallBaseOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallQuoteOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortPutOpenInterest",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketViewer.StrikeView[]",
            name: "strikes",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.BoardView[]",
        name: "marketBoards",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalQueuedDeposits",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalQueuedWithdrawals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenPrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "contract LiquidityPool",
                name: "liquidityPool",
                type: "address",
              },
              {
                internalType: "contract LiquidityToken",
                name: "liquidityToken",
                type: "address",
              },
              {
                internalType: "contract OptionGreekCache",
                name: "greekCache",
                type: "address",
              },
              {
                internalType: "contract OptionMarket",
                name: "optionMarket",
                type: "address",
              },
              {
                internalType: "contract OptionMarketPricer",
                name: "optionMarketPricer",
                type: "address",
              },
              {
                internalType: "contract OptionToken",
                name: "optionToken",
                type: "address",
              },
              {
                internalType: "contract ShortCollateral",
                name: "shortCollateral",
                type: "address",
              },
              {
                internalType: "contract PoolHedger",
                name: "poolHedger",
                type: "address",
              },
              {
                internalType: "contract IERC20",
                name: "quoteAsset",
                type: "address",
              },
              {
                internalType: "contract IERC20",
                name: "baseAsset",
                type: "address",
              },
            ],
            internalType: "struct OptionMarketViewer.OptionMarketAddresses",
            name: "marketAddresses",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maxBoardExpiry",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "securityModule",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "feePortionReserved",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staticBaseSettlementFee",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarket.OptionMarketParameters",
                name: "optionMarketParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minDepositWithdraw",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "depositDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidityCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidityCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewVarianceCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewVarianceCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "guardianMultisig",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "guardianDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "boardSettlementCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxFeePaid",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityPool.LiquidityPoolParameters",
                name: "lpParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maxStrikesPerBoard",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptableSpotPricePercentMove",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staleUpdateDuration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "varianceIvGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "varianceSkewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionValueIvGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionValueSkewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "gwavSkewFloor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "gwavSkewCap",
                    type: "uint256",
                  },
                  {
                    internalType: "int256",
                    name: "rateAndCarry",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.GreekCacheParameters",
                name: "greekCacheParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "ivGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortPostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longPostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidateVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidatePostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortSpotMin",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidateSpotMin",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.ForceCloseParameters",
                name: "forceCloseParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minStaticQuoteCollateral",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minStaticBaseCollateral",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolPointA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolPointB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callSpotPriceShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putSpotPriceShock",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.MinCollateralParameters",
                name: "minCollatParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "optionPriceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionPriceFee1xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionPriceFee2xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFee1xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFee2xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "vegaFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "standardSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewAdjustmentFactor",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketPricer.PricingParameters",
                name: "pricingParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "minDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "minForceCloseDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "tradingCutoff",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minBaseIV",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxBaseIV",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minVol",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxVol",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "absMinSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "absMaxSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "capSkewsToAbs",
                    type: "bool",
                  },
                ],
                internalType: "struct OptionMarketPricer.TradeLimitParameters",
                name: "tradeLimitParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "defaultVarianceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "forceCloseVarianceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewAdjustmentCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "referenceSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticSkewAdjustment",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "vegaCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticIvVariance",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketPricer.VarianceFeeParameters",
                name: "varianceFeeParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "penaltyRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidatorFeeRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "smFeeRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minLiquidationFee",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionToken.PartialCollateralParameters",
                name: "partialCollatParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "interactionDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "hedgeCap",
                    type: "uint256",
                  },
                ],
                internalType: "struct PoolHedger.PoolHedgerParameters",
                name: "poolHedgerParams",
                type: "tuple",
              },
            ],
            internalType: "struct OptionMarketViewer.MarketParameters",
            name: "marketParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "globalNetGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseIv",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceAtExpiry",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "forceCloseGwavIV",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "netDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netStdVega",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netOptionValue",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.NetGreeks",
                name: "netGreeks",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "strikeId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "boardId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "strikePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "forceCloseSkew",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "int256",
                        name: "callDelta",
                        type: "int256",
                      },
                      {
                        internalType: "int256",
                        name: "putDelta",
                        type: "int256",
                      },
                      {
                        internalType: "uint256",
                        name: "stdVega",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "callPrice",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "putPrice",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct OptionGreekCache.StrikeGreeks",
                    name: "cachedGreeks",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "baseReturnedRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longCallOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longPutOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortCallBaseOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortCallQuoteOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortPutOpenInterest",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketViewer.StrikeView[]",
                name: "strikes",
                type: "tuple[]",
              },
            ],
            internalType: "struct OptionMarketViewer.BoardView[]",
            name: "liveBoards",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct SynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct OptionMarketViewer.MarketViewWithBoards",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketAddresses",
    outputs: [
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketViewer.OptionMarketAddresses[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
    ],
    name: "getMarketForBaseKey",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalQueuedDeposits",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalQueuedWithdrawals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenPrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "contract LiquidityPool",
                name: "liquidityPool",
                type: "address",
              },
              {
                internalType: "contract LiquidityToken",
                name: "liquidityToken",
                type: "address",
              },
              {
                internalType: "contract OptionGreekCache",
                name: "greekCache",
                type: "address",
              },
              {
                internalType: "contract OptionMarket",
                name: "optionMarket",
                type: "address",
              },
              {
                internalType: "contract OptionMarketPricer",
                name: "optionMarketPricer",
                type: "address",
              },
              {
                internalType: "contract OptionToken",
                name: "optionToken",
                type: "address",
              },
              {
                internalType: "contract ShortCollateral",
                name: "shortCollateral",
                type: "address",
              },
              {
                internalType: "contract PoolHedger",
                name: "poolHedger",
                type: "address",
              },
              {
                internalType: "contract IERC20",
                name: "quoteAsset",
                type: "address",
              },
              {
                internalType: "contract IERC20",
                name: "baseAsset",
                type: "address",
              },
            ],
            internalType: "struct OptionMarketViewer.OptionMarketAddresses",
            name: "marketAddresses",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maxBoardExpiry",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "securityModule",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "feePortionReserved",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staticBaseSettlementFee",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarket.OptionMarketParameters",
                name: "optionMarketParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minDepositWithdraw",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "depositDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidityCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidityCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewVarianceCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewVarianceCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "guardianMultisig",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "guardianDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "boardSettlementCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxFeePaid",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityPool.LiquidityPoolParameters",
                name: "lpParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maxStrikesPerBoard",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptableSpotPricePercentMove",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staleUpdateDuration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "varianceIvGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "varianceSkewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionValueIvGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionValueSkewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "gwavSkewFloor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "gwavSkewCap",
                    type: "uint256",
                  },
                  {
                    internalType: "int256",
                    name: "rateAndCarry",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.GreekCacheParameters",
                name: "greekCacheParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "ivGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortPostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longPostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidateVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidatePostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortSpotMin",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidateSpotMin",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.ForceCloseParameters",
                name: "forceCloseParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minStaticQuoteCollateral",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minStaticBaseCollateral",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolPointA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolPointB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callSpotPriceShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putSpotPriceShock",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.MinCollateralParameters",
                name: "minCollatParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "optionPriceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionPriceFee1xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionPriceFee2xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFee1xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFee2xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "vegaFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "standardSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewAdjustmentFactor",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketPricer.PricingParameters",
                name: "pricingParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "minDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "minForceCloseDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "tradingCutoff",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minBaseIV",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxBaseIV",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minVol",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxVol",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "absMinSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "absMaxSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "capSkewsToAbs",
                    type: "bool",
                  },
                ],
                internalType: "struct OptionMarketPricer.TradeLimitParameters",
                name: "tradeLimitParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "defaultVarianceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "forceCloseVarianceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewAdjustmentCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "referenceSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticSkewAdjustment",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "vegaCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticIvVariance",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketPricer.VarianceFeeParameters",
                name: "varianceFeeParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "penaltyRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidatorFeeRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "smFeeRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minLiquidationFee",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionToken.PartialCollateralParameters",
                name: "partialCollatParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "interactionDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "hedgeCap",
                    type: "uint256",
                  },
                ],
                internalType: "struct PoolHedger.PoolHedgerParameters",
                name: "poolHedgerParams",
                type: "tuple",
              },
            ],
            internalType: "struct OptionMarketViewer.MarketParameters",
            name: "marketParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "globalNetGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseIv",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceAtExpiry",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "forceCloseGwavIV",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "netDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netStdVega",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netOptionValue",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.NetGreeks",
                name: "netGreeks",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "strikeId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "boardId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "strikePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "forceCloseSkew",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "int256",
                        name: "callDelta",
                        type: "int256",
                      },
                      {
                        internalType: "int256",
                        name: "putDelta",
                        type: "int256",
                      },
                      {
                        internalType: "uint256",
                        name: "stdVega",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "callPrice",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "putPrice",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct OptionGreekCache.StrikeGreeks",
                    name: "cachedGreeks",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "baseReturnedRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longCallOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longPutOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortCallBaseOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortCallQuoteOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortPutOpenInterest",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketViewer.StrikeView[]",
                name: "strikes",
                type: "tuple[]",
              },
            ],
            internalType: "struct OptionMarketViewer.BoardView[]",
            name: "liveBoards",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct SynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct OptionMarketViewer.MarketViewWithBoards",
        name: "market",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "getMarkets",
    outputs: [
      {
        components: [
          {
            internalType: "contract IAddressResolver",
            name: "addressResolver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "totalQueuedDeposits",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalQueuedWithdrawals",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenPrice",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "contract LiquidityPool",
                    name: "liquidityPool",
                    type: "address",
                  },
                  {
                    internalType: "contract LiquidityToken",
                    name: "liquidityToken",
                    type: "address",
                  },
                  {
                    internalType: "contract OptionGreekCache",
                    name: "greekCache",
                    type: "address",
                  },
                  {
                    internalType: "contract OptionMarket",
                    name: "optionMarket",
                    type: "address",
                  },
                  {
                    internalType: "contract OptionMarketPricer",
                    name: "optionMarketPricer",
                    type: "address",
                  },
                  {
                    internalType: "contract OptionToken",
                    name: "optionToken",
                    type: "address",
                  },
                  {
                    internalType: "contract ShortCollateral",
                    name: "shortCollateral",
                    type: "address",
                  },
                  {
                    internalType: "contract PoolHedger",
                    name: "poolHedger",
                    type: "address",
                  },
                  {
                    internalType: "contract IERC20",
                    name: "quoteAsset",
                    type: "address",
                  },
                  {
                    internalType: "contract IERC20",
                    name: "baseAsset",
                    type: "address",
                  },
                ],
                internalType: "struct OptionMarketViewer.OptionMarketAddresses",
                name: "marketAddresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "maxBoardExpiry",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "securityModule",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "feePortionReserved",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "staticBaseSettlementFee",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct OptionMarket.OptionMarketParameters",
                    name: "optionMarketParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "minDepositWithdraw",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "depositDelay",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "withdrawalDelay",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "withdrawalFee",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidityCBThreshold",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidityCBTimeout",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "ivVarianceCBThreshold",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewVarianceCBThreshold",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "ivVarianceCBTimeout",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewVarianceCBTimeout",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "guardianMultisig",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "guardianDelay",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "boardSettlementCBTimeout",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "maxFeePaid",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct LiquidityPool.LiquidityPoolParameters",
                    name: "lpParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "maxStrikesPerBoard",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "acceptableSpotPricePercentMove",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "staleUpdateDuration",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "varianceIvGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "varianceSkewGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "optionValueIvGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "optionValueSkewGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "gwavSkewFloor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "gwavSkewCap",
                        type: "uint256",
                      },
                      {
                        internalType: "int256",
                        name: "rateAndCarry",
                        type: "int256",
                      },
                    ],
                    internalType:
                      "struct OptionGreekCache.GreekCacheParameters",
                    name: "greekCacheParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "ivGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortPostCutoffVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "longVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "longPostCutoffVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidateVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidatePostCutoffVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortSpotMin",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidateSpotMin",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct OptionGreekCache.ForceCloseParameters",
                    name: "forceCloseParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "minStaticQuoteCollateral",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minStaticBaseCollateral",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shockVolA",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shockVolPointA",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shockVolB",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shockVolPointB",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "callSpotPriceShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "putSpotPriceShock",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct OptionGreekCache.MinCollateralParameters",
                    name: "minCollatParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "optionPriceFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "optionPriceFee1xPoint",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "optionPriceFee2xPoint",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "spotPriceFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "spotPriceFee1xPoint",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "spotPriceFee2xPoint",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "vegaFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "standardSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewAdjustmentFactor",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct OptionMarketPricer.PricingParameters",
                    name: "pricingParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "int256",
                        name: "minDelta",
                        type: "int256",
                      },
                      {
                        internalType: "int256",
                        name: "minForceCloseDelta",
                        type: "int256",
                      },
                      {
                        internalType: "uint256",
                        name: "tradingCutoff",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minBaseIV",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "maxBaseIV",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "maxSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minVol",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "maxVol",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "absMinSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "absMaxSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "bool",
                        name: "capSkewsToAbs",
                        type: "bool",
                      },
                    ],
                    internalType:
                      "struct OptionMarketPricer.TradeLimitParameters",
                    name: "tradeLimitParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "defaultVarianceFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "forceCloseVarianceFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewAdjustmentCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "referenceSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minimumStaticSkewAdjustment",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "vegaCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minimumStaticVega",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "ivVarianceCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minimumStaticIvVariance",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct OptionMarketPricer.VarianceFeeParameters",
                    name: "varianceFeeParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "penaltyRatio",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidatorFeeRatio",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "smFeeRatio",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minLiquidationFee",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct OptionToken.PartialCollateralParameters",
                    name: "partialCollatParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "interactionDelay",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "hedgeCap",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct PoolHedger.PoolHedgerParameters",
                    name: "poolHedgerParams",
                    type: "tuple",
                  },
                ],
                internalType: "struct OptionMarketViewer.MarketParameters",
                name: "marketParameters",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "freeLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "burnableLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "usedCollatLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "pendingDeltaLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "usedDeltaLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "NAV",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityPool.Liquidity",
                name: "liquidity",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "netDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netStdVega",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netOptionValue",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.NetGreeks",
                name: "globalNetGreeks",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "spotPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "quoteKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "baseKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "quoteBaseFeeRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "baseQuoteFeeRate",
                    type: "uint256",
                  },
                ],
                internalType: "struct SynthetixAdapter.ExchangeParams",
                name: "exchangeParams",
                type: "tuple",
              },
            ],
            internalType: "struct OptionMarketViewer.MarketView[]",
            name: "markets",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.MarketsView",
        name: "marketsView",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getOwnerPositions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "positionId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "enum OptionMarket.OptionType",
                name: "optionType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateral",
                type: "uint256",
              },
              {
                internalType: "enum OptionToken.PositionState",
                name: "state",
                type: "uint8",
              },
            ],
            internalType: "struct OptionToken.OptionPosition[]",
            name: "positions",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.MarketOptionPositions[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getOwnerPositionsInRange",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    name: "marketAddresses",
    outputs: [
      {
        internalType: "contract LiquidityPool",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "contract LiquidityToken",
        name: "liquidityToken",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "greekCache",
        type: "address",
      },
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "contract OptionMarketPricer",
        name: "optionMarketPricer",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "optionToken",
        type: "address",
      },
      {
        internalType: "contract ShortCollateral",
        name: "shortCollateral",
        type: "address",
      },
      {
        internalType: "contract PoolHedger",
        name: "poolHedger",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "baseAsset",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "optionMarkets",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetixAdapter",
    outputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff60a01b1916905534801561001d57600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a16151b78061007b6000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063845e1259116100d8578063ac6e227b1161008c578063d2f5a5bb11610066578063d2f5a5bb14610455578063d4dfadbf14610468578063db9132361461047b57600080fd5b8063ac6e227b14610341578063b0862c0e14610354578063c71b7e531461037457600080fd5b806397ce0d31116100bd57806397ce0d31146102f95780639cdaffe21461030e578063a9306dba1461032e57600080fd5b8063845e1259146102c65780638da5cb5b146102e657600080fd5b8063256465451161013a5780636cc9023f116101145780636cc9023f1461028b57806379ba5097146102ab5780637f68720f146102b357600080fd5b8063256465451461023857806353a47bb7146102585780635d033f7f1461026b57600080fd5b80631627540c1161016b5780631627540c146101e557806319ab453c146101fa5780631cb668451461020d57600080fd5b80631139e3f114610187578063158ef93e146101b0575b600080fd5b61019a6101953660046138ea565b61048e565b6040516101a79190613dd4565b60405180910390f35b6002546101d59074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016101a7565b6101f86101f3366004613f2c565b61074b565b005b6101f8610208366004613f2c565b6107c0565b61022061021b366004613f50565b61089a565b6040516001600160a01b0390911681526020016101a7565b61024b610246366004613f69565b6108c4565b6040516101a79190613fbb565b600154610220906001600160a01b031681565b61027e61027936600461401d565b610bcb565b6040516101a791906141c4565b61029e610299366004613f50565b610c84565b6040516101a7919061421f565b6101f8610ea0565b6101f86102c136600461433e565b610f89565b6102d96102d4366004613f2c565b611114565b6040516101a791906144b9565b600054610220906001600160a01b031681565b61030161136d565b6040516101a79190614554565b61032161031c3660046145a3565b611534565b6040516101a791906145e9565b61027e61033c3660046145fc565b61184a565b61027e61034f36600461401d565b61186d565b610367610362366004613f2c565b6119b2565b6040516101a7919061461e565b6103f2610382366004613f2c565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006860154600787015460088801546009909801546001600160a01b03978816999688169895881697968716969485169593851694928316939183169291821691168a565b604080516001600160a01b039b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c0850152841660e08401528316610100830152909116610120820152610140016101a7565b600254610220906001600160a01b031681565b61029e610476366004613f2c565b611bb7565b6101f8610489366004613f2c565b611d6f565b60408051606080820183526000808352602083015291810191909152815160008167ffffffffffffffff8111156104c7576104c76136ad565b60405190808252806020026020018201604052801561050057816020015b6104ed612fa5565b8152602001906001900390816104e55790505b5090506000600260009054906101000a90046001600160a01b03166001600160a01b031663b714fa3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055357600080fd5b505afa158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b9190614641565b905060005b83811015610696576000600460008884815181106105b0576105b061465c565b6020908102919091018101516001600160a01b039081168352828201939093526040918201600020825161014081018452815485168152600182015485169281019290925260028101548416928201929092526003820154831660608201526004820154831660808201526005820154831660a08201526006820154831660c08201526007820154831660e08201526008820154831661010082015260099091015490911661012082015290506106678184611fe8565b8483815181106106795761067961465c565b6020026020010181905250508061068f906146ba565b9050610590565b506040518060600160405280600260009054906101000a90046001600160a01b03166001600160a01b03166305a2ee2a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106f057600080fd5b505afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072891906146f3565b6001600160a01b0316815291151560208301526040909101919091529392505050565b6107536125e8565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b60025474010000000000000000000000000000000000000000900460ff161561084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f616c726561647920696e697469616c697a65640000000000000000000000000060448201526064015b60405180910390fd5b600280547fffffffffffffffffffffff000000000000000000000000000000000000000000166001600160a01b039092169190911774010000000000000000000000000000000000000000179055565b600381815481106108aa57600080fd5b6000918252602090912001546001600160a01b0316905081565b815160609060008167ffffffffffffffff8111156108e4576108e46136ad565b60405190808252806020026020018201604052801561094257816020015b61092f604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816109025790505b50905060005b82811015610bc0576000600460008884815181106109685761096861465c565b6020908102919091018101516001600160a01b039081168352828201939093526040918201600020825161014081018452815485168152600182015485169281018390526002820154851681850152600382015485166060820152600480830154861660808301526005830154861660a08301526006830154861660c08301526007830154861660e083015260088301548616610100830152600990920154851661012082015292517f70a08231000000000000000000000000000000000000000000000000000000008152938a16908401529092509081906370a082319060240160206040518083038186803b158015610a6257600080fd5b505afa158015610a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9a9190614710565b848481518110610aac57610aac61465c565b602090810291909101810151015261010082015182516040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152918216602482015291169063dd62ed3e9060440160206040518083038186803b158015610b2457600080fd5b505afa158015610b38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5c9190614710565b848481518110610b6e57610b6e61465c565b602002602001015160400181815250508160000151848481518110610b9557610b9561465c565b60209081029190910101516001600160a01b03909116905250610bb99050816146ba565b9050610948565b509150505b92915050565b610bd36130c3565b6001600160a01b038084166000908152600460208181526040928390208351610140810185528154861681526001820154861692810192909252600281015485169382019390935260038301548416606082015290820154831660808201526005820154831660a08201526006820154831660c08201526007820154831660e082015260088201548316610100820152600990910154909116610120820152610c7c8184612649565b949350505050565b610c8c61313c565b60035460005b81811015610e215760006004600060038481548110610cb357610cb361465c565b6000918252602080832091909101546001600160a01b039081168452838201949094526040928301822083516101408101855281548616815260018201548616928101929092526002808201548616838601526003820154861660608401819052600480840154881660808601526005840154881660a08601526006840154881660c08601526007840154881660e0860152600884015488166101008601526009909301548716610120850152905494517fcc8e05c2000000000000000000000000000000000000000000000000000000008152918201529094509092919091169063cc8e05c29060240160206040518083038186803b158015610db657600080fd5b505afa158015610dca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dee9190614710565b905085811415610e0e57610e058260600151611bb7565b94505050610e21565b505080610e1a906146ba565b9050610c92565b506080820151606001516001600160a01b0316610e9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f206d61726b657420666f722062617365206b6579000000000000000000006044820152606401610841565b50919050565b6001546001600160a01b03163314610eff576001546040517f96cf9ed80000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b039091166044820152606401610841565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b03841617909155169055565b610f916125e8565b606081018051600380546001808201835560008381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90920180547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b039687161790915585518516835260046020818152604094859020895181548516908916178155908901519381018054841694881694909417909355838801516002840180548416918816919091179055955193820180548216948616949094179093556080860151948101805484169585169590951790945560a0850151600585018054841691851691909117905560c0850151600685018054841691851691909117905560e085015160078501805484169185169190911790556101008501516008850180548416918516919091179055610120850151600990940180549092169390921692909217909155517fd3777d9870fa8e7682a422021d48549c180f7b06a647478f5211caef6b6a4ee8906107b5908390614729565b60035460609060008167ffffffffffffffff811115611135576111356136ad565b60405190808252806020026020018201604052801561117b57816020015b6040805180820190915260008152606060208201528152602001906001900390816111535790505b50905060005b8281101561136557600060046000600384815481106111a2576111a261465c565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154851692810192909252600281015484169282019290925260038201548316606082018190526004830154841660808301526005830154841660a08301526006830154841660c08301526007830154841660e0830152600883015484166101008301526009909201549092166101208301528451919250908490849081106112695761126961465c565b60209081029190910101516001600160a01b03918216905260a08201516040517f845e1259000000000000000000000000000000000000000000000000000000008152888316600482015291169063845e12599060240160006040518083038186803b1580156112d857600080fd5b505afa1580156112ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261133291908101906147ac565b8383815181106113445761134461465c565b602002602001015160200181905250508061135e906146ba565b9050611181565b509392505050565b60035460609060008167ffffffffffffffff81111561138e5761138e6136ad565b60405190808252806020026020018201604052801561142b57816020015b604080516101408101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816113ac5790505b50905060005b8281101561152d5760046000600383815481106114505761145061465c565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825161014081018452815485168152600182015485169281019290925260028101548416928201929092526003820154831660608201526004820154831660808201526005820154831660a08201526006820154831660c08201526007820154831660e08201526008820154831661010082015260099091015490911661012082015282518390839081106115115761151161465c565b602002602001018190525080611526906146ba565b9050611431565b5092915050565b6001600160a01b038481166000908152600460208181526040808420815161014081018352815487168152600182015487169381019390935260028101548616838301526003810154861660608085019190915281850154871660808501526005820154871660a085018190526006830154881660c08601526007830154881660e086015260088301548816610100860152600990920154871661012085015291517f70a082310000000000000000000000000000000000000000000000000000000081529589169386019390935293909291906370a082319060240160206040518083038186803b15801561162957600080fd5b505afa15801561163d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116619190614710565b9050600061166f8683614846565b851161167b5784611685565b6116858683614846565b905060008167ffffffffffffffff8111156116a2576116a26136ad565b6040519080825280602002602001820160405280156116db57816020015b6116c8613267565b8152602001906001900390816116c05790505b50905060005b8281101561183d5760a08501516001600160a01b03166313ddc40181632f745c598c61170d868e61485d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b15801561176957600080fd5b505afa15801561177d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a19190614710565b6040518263ffffffff1660e01b81526004016117bf91815260200190565b60c06040518083038186803b1580156117d757600080fd5b505afa1580156117eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180f9190614875565b8282815181106118215761182161465c565b602002602001018190525080611836906146ba565b90506116e1565b5098975050505050505050565b6118526130c3565b600061185d84610c84565b9050610c7c816080015184612649565b6118756130c3565b6001600160a01b03838116600090815260046020818152604080842081516101408101835281548716815260018201548716938101939093526002810154861683830152600381015486166060840181905281850154871660808501526005820154871660a08501526006820154871660c08501526007820154871660e085015260088201548716610100850152600990910154909516610120830152517fa6063c05000000000000000000000000000000000000000000000000000000008152918201869052929063a6063c05906024016101206040518083038186803b15801561196057600080fd5b505afa158015611974573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611998919061490a565b90506119a982826101000151612649565b95945050505050565b6001600160a01b0380821660009081526004602081815260408084208151610140810183528154871681526001820154871693810193909352600281015486168383015260038101548616606084810182905282860154881660808601526005830154881660a08601526006830154881660c08601526007830154881660e08601526008830154881661010086015260099092015490961661012084015281517f7e7088eb00000000000000000000000000000000000000000000000000000000815291519095929493637e7088eb928082019286929091829003018186803b158015611a9e57600080fd5b505afa158015611ab2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611af89190810190614982565b80519091508067ffffffffffffffff811115611b1657611b166136ad565b604051908082528060200260200182016040528015611b4f57816020015b611b3c6130c3565b815260200190600190039081611b345790505b50935060005b81811015611bae57611b8084848381518110611b7357611b7361465c565b6020026020010151612649565b858281518110611b9257611b9261465c565b602002602001018190525080611ba7906146ba565b9050611b55565b50505050919050565b611bbf61313c565b6001600160a01b038083166000908152600460208181526040808420815161014081018352815487168152600182015487168185015260028083015488168285015260038301548816606083015282860154881660808301526005830154881660a08301526006830154881660c08301526007830154881660e0830152600883015488166101008301526009909201548716610120820152905482517fb714fa3e00000000000000000000000000000000000000000000000000000000815292519196611ceb958895929091169363b714fa3e9381830193929091829003018186803b158015611cae57600080fd5b505afa158015611cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce69190614641565b611fe8565b9050604051806101400160405280826000015115158152602001826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015181526020018260e001518152602001611d5884606001516119b2565b815260200182610100015181525092505050919050565b611d776125e8565b6003546000908190815b81811015611ddd57846001600160a01b031660038281548110611da657611da661465c565b6000918252602090912001546001600160a01b03161415611dcd5780935060019250611ddd565b611dd6816146ba565b9050611d81565b5081611e26576040517ff3aface40000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0385166024820152604401610841565b60038054611e3690600190614846565b81548110611e4657611e4661465c565b600091825260209091200154600380546001600160a01b039092169185908110611e7257611e7261465c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506003805480611eb157611eb16149b7565b60008281526020908190207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908301810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559091019091556040516001600160a01b03861681527f59d7b1e52008dc342c9421dadfc773114b914a65682a4e4b53cf60a970df0d77910160405180910390a15050506001600160a01b0316600090815260046020819052604090912080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180548216905560028201805482169055600382018054821690559181018054831690556005810180548316905560068101805483169055600781018054831690556008810180548316905560090180549091169055565b611ff0612fa5565b600083604001516001600160a01b0316636461a97b6040518163ffffffff1660e01b81526004016101006040518083038186803b15801561203057600080fd5b505afa158015612044573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120689190614a42565b9050600061207585612834565b60025460608701516040517fcf7fb2640000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015292935060009291169063cf7fb2649060240160206040518083038186803b1580156120dd57600080fd5b505afa1580156120f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121159190614641565b905080158015612123575084155b156123fb5760025460608701516040517fcfbe7f440000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600092919091169063cfbe7f449060240160a06040518083038186803b15801561218f57600080fd5b505afa1580156121a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c79190614aa2565b9050604051806101200160405280831515815260200188600001516001600160a01b03166358f67c0b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561221a57600080fd5b505afa15801561222e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122529190614710565b815260200188600001516001600160a01b031663481bf0b86040518163ffffffff1660e01b815260040160206040518083038186803b15801561229457600080fd5b505afa1580156122a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122cc9190614710565b815260200188600001516001600160a01b0316634b94f50e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561230e57600080fd5b505afa158015612322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123469190614710565b815260200188815260200184815260200188600001516001600160a01b031663951583c384600001516040518263ffffffff1660e01b815260040161238d91815260200190565b60c06040518083038186803b1580156123a557600080fd5b505afa1580156123b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123dd9190614b12565b81526020018560a00151815260200182815250945050505050610bc5565b60405180610120016040528082151581526020016000815260200160008152602001600081526020018781526020018381526020016040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525081526020018460a0015181526020016040518060a0016040528060008152602001600260009054906101000a90046001600160a01b03166001600160a01b03166327a008c18b606001516040518263ffffffff1660e01b81526004016124d891906001600160a01b0391909116815260200190565b60206040518083038186803b1580156124f057600080fd5b505afa158015612504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125289190614710565b815260025460608b01516040517fcc8e05c20000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260209093019291169063cc8e05c29060240160206040518083038186803b15801561259257600080fd5b505afa1580156125a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ca9190614710565b81526020016000815260200160008152508152509350505050610bc5565b6000546001600160a01b03163314612647576000546040517f1abc2f980000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b039091166044820152606401610841565b565b6126516130c3565b60008060008086606001516001600160a01b0316631f18a342876040518263ffffffff1660e01b815260040161268991815260200190565b60006040518083038186803b1580156126a157600080fd5b505afa1580156126b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526126fb9190810190614bfd565b935093509350935061270b6132b9565b816127b75787604001516001600160a01b031663254297b9886040518263ffffffff1660e01b815260040161274291815260200190565b60006040518083038186803b15801561275a57600080fd5b505afa15801561276e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526127b49190810190614ceb565b90505b60405180610120016040528089606001516001600160a01b03168152602001866000015181526020018660200151815260200186604001518152602001838152602001866060015115158152602001826020015181526020018260000151815260200161282686848787612d15565b905298975050505050505050565b61283c613303565b60405180610140016040528083606001516001600160a01b0316633105dd9c6040518163ffffffff1660e01b815260040160806040518083038186803b15801561288557600080fd5b505afa158015612899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128bd9190614e37565b815260200183600001516001600160a01b0316635181d38f6040518163ffffffff1660e01b81526004016101c06040518083038186803b15801561290057600080fd5b505afa158015612914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129389190614e85565b815260200183604001516001600160a01b031663f369f2ac6040518163ffffffff1660e01b81526004016101406040518083038186803b15801561297b57600080fd5b505afa15801561298f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b39190614f3e565b815260200183604001516001600160a01b031663569466876040518163ffffffff1660e01b81526004016101406040518083038186803b1580156129f657600080fd5b505afa158015612a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2e9190614f3e565b815260200183604001516001600160a01b031663e81284406040518163ffffffff1660e01b81526004016101006040518083038186803b158015612a7157600080fd5b505afa158015612a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aa99190614fc5565b815260200183608001516001600160a01b031663da5376316040518163ffffffff1660e01b81526004016101206040518083038186803b158015612aec57600080fd5b505afa158015612b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b24919061490a565b815260200183608001516001600160a01b031663ffae4b366040518163ffffffff1660e01b81526004016101806040518083038186803b158015612b6757600080fd5b505afa158015612b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9f9190615055565b815260200183608001516001600160a01b0316639757b2fa6040518163ffffffff1660e01b81526004016101206040518083038186803b158015612be257600080fd5b505afa158015612bf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1a919061490a565b81526020018360a001516001600160a01b03166352f11fbf6040518163ffffffff1660e01b815260040160806040518083038186803b158015612c5c57600080fd5b505afa158015612c70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c9491906150ec565b81526020018360e001516001600160a01b03166310147a9b6040518163ffffffff1660e01b8152600401604080518083038186803b158015612cd557600080fd5b505afa158015612ce9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d0d9190615132565b905292915050565b83516060908067ffffffffffffffff811115612d3357612d336136ad565b604051908082528060200260200182016040528015612d6c57816020015b612d5961361c565b815260200190600190039081612d515790505b50915060005b81811015612f9b57604051806101800160405280888381518110612d9857612d9861465c565b6020026020010151600001518152602001888381518110612dbb57612dbb61465c565b602002602001015161010001518152602001888381518110612ddf57612ddf61465c565b6020026020010151602001518152602001888381518110612e0257612e0261465c565b602002602001015160400151815260200185600014612e22576000612e41565b87606001518381518110612e3857612e3861465c565b60200260200101515b81526020018515612e7d576040518060a00160405280600081526020016000815260200160008152602001600081526020016000815250612e9c565b87604001518381518110612e9357612e9361465c565b60200260200101515b8152602001868381518110612eb357612eb361465c565b60200260200101518152602001888381518110612ed257612ed261465c565b6020026020010151606001518152602001888381518110612ef557612ef561465c565b602002602001015160c001518152602001888381518110612f1857612f1861465c565b6020026020010151608001518152602001888381518110612f3b57612f3b61465c565b602002602001015160a001518152602001888381518110612f5e57612f5e61465c565b602002602001015160e00151815250838281518110612f7f57612f7f61465c565b602002602001018190525080612f94906146ba565b9050612d72565b5050949350505050565b604080516101208082018352600080835260208084018290528385018290526060808501839052855161014081018752838152918201839052948101829052938401819052608084810182905260a0850182905260c0850182905260e085018290526101008501829052918401529091908201908152602001613026613303565b81526020016130646040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161308d60405180606001604052806000815260200160008152602001600081525090565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b905290565b60405180610120016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200161312f60405180606001604052806000815260200160008152602001600081525090565b8152602001606081525090565b60408051610140808201835260008083526020808401829052838501829052606080850183905285519384018652828452908301829052938201819052928101839052608080820184905260a080830185905260c0830185905260e0830185905261010083018590526101208301949094528201529081016131bc613303565b81526020016131fa6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161322360405180606001604052806000815260200160008152602001600081525090565b8152602001606081526020016130be6040518060a0016040528060008152602001600080191681526020016000801916815260200160008152602001600081525090565b6040518060c0016040528060008152602001600081526020016000600481111561329357613293614406565b81526020016000815260200160008152602001600060058111156130be576130be614406565b60405180608001604052806132e860405180606001604052806000815260200160008152602001600081525090565b81526020016000815260200160608152602001606081525090565b604080516101c0810190915260006101408201818152610160830182905261018083018290526101a0830191909152819081526020016133b4604051806101c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b815260200161340f604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161346a604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016134b760405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161350b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161357660405180610180016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b81526020016135ca6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016135fa6040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020016130be604051806040016040528060008152602001600081525090565b604051806101800160405280600081526020016000815260200160008152602001600081526020016000815260200161367d6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715613700576137006136ad565b60405290565b60405160c0810167ffffffffffffffff81118282101715613700576137006136ad565b604051610120810167ffffffffffffffff81118282101715613700576137006136ad565b60405160a0810167ffffffffffffffff81118282101715613700576137006136ad565b6040516080810167ffffffffffffffff81118282101715613700576137006136ad565b6040516101c0810167ffffffffffffffff81118282101715613700576137006136ad565b604051610180810167ffffffffffffffff81118282101715613700576137006136ad565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613822576138226136ad565b604052919050565b600067ffffffffffffffff821115613844576138446136ad565b5060051b60200190565b6001600160a01b038116811461386357600080fd5b50565b80356138718161384e565b919050565b600082601f83011261388757600080fd5b8135602061389c6138978361382a565b6137db565b82815260059290921b840181019181810190868411156138bb57600080fd5b8286015b848110156138df5780356138d28161384e565b83529183019183016138bf565b509695505050505050565b6000602082840312156138fc57600080fd5b813567ffffffffffffffff81111561391357600080fd5b610c7c84828501613876565b80516001600160a01b03168252602081015161394660208401826001600160a01b03169052565b50604081015161396160408401826001600160a01b03169052565b50606081015161397c60608401826001600160a01b03169052565b50608081015161399760808401826001600160a01b03169052565b5060a08101516139b260a08401826001600160a01b03169052565b5060c08101516139cd60c08401826001600160a01b03169052565b5060e08101516139e860e08401826001600160a01b03169052565b50610100818101516001600160a01b038116848301525050610120818101516001600160a01b038116848301525b50505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151818401525061014080820151613a99828501826001600160a01b03169052565b5050610160818101519083015261018080820151908301526101a090810151910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151818401525061014080820151818401525061016080820151613a168285018215159052565b613b74828251805182526001600160a01b03602082015116602083015260408101516040830152606081015160608301525050565b6020810151613b866080840182613a1c565b506040818101518051610240850152602080820151610260860152818301516102808601526060808301516102a08701526080808401516102c088015260a0808501516102e089015260c0808601516103008a015260e0808701516103208b0152610100808801516103408c0152610120978801516103608c0152858a015180516103808d0152808801516103a08d0152808a01516103c08d0152808701516103e08d0152808601516104008d0152808501516104208d0152808401516104408d0152808301516104608d0152808201516104808d0152909701516104a08b01528389015180516104c08c0152808701516104e08c0152808901516105008c0152808601516105208c0152808501516105408c0152808401516105608c0152808301516105808c01528101516105a08b01528289015180516105c08c0152958601516105e08b0152968501516106008a0152928401516106208901529083015161064088015282015161066087015281810151610680870152928101516106a086015201516106c0840152810151613d226106e0840182613abd565b5060e0818101518051610860850152602081015161088085015260408101516108a085015260608101516108c085015260808101516108e085015260a081015161090085015260c08101516109208501529081015161094084015261010081015161096084015250610100810151805161098084015260208101516109a084015260408101516109c084015260608101516109e08401525061012001518051610a0083015260200151610a2090910152565b6000602080835260808084016001600160a01b0386511683860152828601516040811515818801528088015191506060808189015283835180865260a09550858a019150878501945060005b81811015613f1c578551805115158452898101518a8501528581015186850152848101518585015288810151613e588a86018261391f565b5087810151613e6b6101c0860182613b3f565b5060c08101518051610c00860152602080820151610c20870152604080830151610c40880152606080840151610c60890152608080850151610c808a015260a090940151610ca089015260e08501518051610cc08a015280840151610ce08a0152820151610d00890152610100909401518051610d2089015291820151610d40880152810151610d6087015291820151610d808601520151610da084015294880194610dc090920191600101613e20565b50909a9950505050505050505050565b600060208284031215613f3e57600080fd5b8135613f498161384e565b9392505050565b600060208284031215613f6257600080fd5b5035919050565b60008060408385031215613f7c57600080fd5b823567ffffffffffffffff811115613f9357600080fd5b613f9f85828601613876565b9250506020830135613fb08161384e565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b8281101561401057815180516001600160a01b0316855286810151878601528501518585015260609093019290850190600101613fd8565b5091979650505050505050565b6000806040838503121561403057600080fd5b823561403b8161384e565b946020939093013593505050565b600081518084526020808501945080840160005b83811015614121578151805188528381015184890152604080820151818a0152606080830151818b0152608080840151818c015260a0808501518051828e0152602081015160c08e01529384015160e08d0152918301516101008c01528201516101208b015290505060c08101516101408981019190915260e0820151610160808b01919091526101008301516101808b01526101208301516101a08b0152908201516101c08a015201516101e0880152610200909601959082019060010161405d565b509495945050505050565b80516001600160a01b0316825260006101606020830151602085015260408301516040850152606083015160608501526080830151608085015260a083015161417960a086018215159052565b5060c083015160c085015260e08301516141aa60e08601828051825260208082015190830152604090810151910152565b50610100830151816101408601526119a982860182614049565b602081526000613f49602083018461412c565b600081518084526020808501808196508360051b8101915082860160005b8581101561401057828403895261420d84835161412c565b988501989350908401906001016141f5565b6020815261423260208201835115159052565b6020820151604082015260408201516060820152606082015160808201526000608083015161426460a084018261391f565b5060a08301516142786101e0840182613b3f565b5060c08301518051610c20840152602080820151610c40850152604080830151610c608601526060830151610c808601526080830151610ca086015260a090920151610cc085015260e08501518051610ce086015290810151610d008501520151610d20830152610100830151610de0610d408401526142fc610e008401826141d7565b6101208501518051610d608601526020810151610d808601526040810151610da08601526060810151610dc08601526080810151610de0860152909150611365565b6000610140828403121561435157600080fd5b6143596136dc565b61436283613866565b815261437060208401613866565b602082015261438160408401613866565b604082015261439260608401613866565b60608201526143a360808401613866565b60808201526143b460a08401613866565b60a08201526143c560c08401613866565b60c08201526143d660e08401613866565b60e08201526101006143e9818501613866565b908201526101206143fb848201613866565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081518084526020808501945080840160005b838110156141215781518051885283810151848901526040808201516005811061447557614475614406565b90890152606081810151908901526080808201519089015260a09081015190600682106144a4576144a4614406565b88015260c09096019590820190600101614449565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015614546578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0018552815180516001600160a01b0316845287015187840187905261453387850182614435565b95880195935050908601906001016144e0565b509098975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156145975761458383855161391f565b928401926101409290920191600101614570565b50909695505050505050565b600080600080608085870312156145b957600080fd5b84356145c48161384e565b935060208501356145d48161384e565b93969395505050506040820135916060013590565b602081526000613f496020830184614435565b6000806040838503121561460f57600080fd5b50508035926020909101359150565b602081526000613f4960208301846141d7565b8051801515811461387157600080fd5b60006020828403121561465357600080fd5b613f4982614631565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156146ec576146ec61468b565b5060010190565b60006020828403121561470557600080fd5b8151613f498161384e565b60006020828403121561472257600080fd5b5051919050565b6101408101610bc5828461391f565b600060c0828403121561474a57600080fd5b614752613706565b9050815181526020820151602082015260408201516005811061477457600080fd5b80604083015250606082015160608201526080820151608082015260a0820151600681106147a157600080fd5b60a082015292915050565b600060208083850312156147bf57600080fd5b825167ffffffffffffffff8111156147d657600080fd5b8301601f810185136147e757600080fd5b80516147f56138978261382a565b81815260c0918202830184019184820191908884111561481457600080fd5b938501935b8385101561483a5761482b8986614738565b83529384019391850191614819565b50979650505050505050565b6000828210156148585761485861468b565b500390565b600082198211156148705761487061468b565b500190565b600060c0828403121561488757600080fd5b613f498383614738565b600061012082840312156148a457600080fd5b6148ac613729565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525092915050565b6000610120828403121561491d57600080fd5b613f498383614891565b600082601f83011261493857600080fd5b815160206149486138978361382a565b82815260059290921b8401810191818101908684111561496757600080fd5b8286015b848110156138df578051835291830191830161496b565b60006020828403121561499457600080fd5b815167ffffffffffffffff8111156149ab57600080fd5b610c7c84828501614927565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000606082840312156149f857600080fd5b6040516060810181811067ffffffffffffffff82111715614a1b57614a1b6136ad565b80604052508091508251815260208301516020820152604083015160408201525092915050565b60006101008284031215614a5557600080fd5b614a5d613706565b8251815260208301516020820152604083015160408201526060830151606082015260808301516080820152614a968460a085016149e6565b60a08201529392505050565b600060a08284031215614ab457600080fd5b60405160a0810181811067ffffffffffffffff82111715614ad757614ad76136ad565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600060c08284031215614b2457600080fd5b60405160c0810181811067ffffffffffffffff82111715614b4757614b476136ad565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b600082601f830112614b9d57600080fd5b81516020614bad6138978361382a565b8281526101209283028501820192828201919087851115614bcd57600080fd5b8387015b85811015614bf057614be38982614891565b8452928401928101614bd1565b5090979650505050505050565b60008060008060808587031215614c1357600080fd5b845167ffffffffffffffff80821115614c2b57600080fd5b9086019060a08289031215614c3f57600080fd5b614c4761374d565b825181526020830151602082015260408301516040820152614c6b60608401614631565b6060820152608083015182811115614c8257600080fd5b614c8e8a828601614927565b6080830152506020880151909650915080821115614cab57600080fd5b614cb788838901614b8c565b94506040870151915080821115614ccd57600080fd5b50614cda87828801614927565b606096909601519497939650505050565b60006020808385031215614cfe57600080fd5b825167ffffffffffffffff80821115614d1657600080fd5b9084019060c08287031215614d2a57600080fd5b614d32613770565b614d3c87846149e6565b81526060808401518583015260808085015184811115614d5b57600080fd5b8501601f81018a13614d6c57600080fd5b8051614d7a6138978261382a565b81815260a0918202830189019189820191908d841115614d9957600080fd5b938a01935b83851015614df35780858f031215614db65760008081fd5b614dbe61374d565b855181528b8601518c8201526040808701519082015287860151888201528686015187820152835293840193918a0191614d9e565b816040890152808a01519a5050505050505082851115614e1257600080fd5b614e1e88868601614927565b908201529695505050505050565b80516138718161384e565b600060808284031215614e4957600080fd5b614e51613770565b825181526020830151614e638161384e565b6020820152604083810151908201526060928301519281019290925250919050565b60006101c08284031215614e9857600080fd5b614ea0613793565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120808401518183015250610140614f10818501614e2c565b90820152610160838101519082015261018080840151908201526101a0928301519281019290925250919050565b60006101408284031215614f5157600080fd5b614f596136dc565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b6000610100808385031215614fd957600080fd5b6040519081019067ffffffffffffffff82118183101715614ffc57614ffc6136ad565b81604052835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b6000610180828403121561506857600080fd5b6150706137b7565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152506101408084015181830152506101606143fb818501614631565b6000608082840312156150fe57600080fd5b615106613770565b825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60006040828403121561514457600080fd5b6040516040810181811067ffffffffffffffff82111715615167576151676136ad565b60405282518152602092830151928101929092525091905056fea2646970667358221220f91786b1705fac79e29f27141928cbda86b3d77be042685622f46d9bc2dbfe2964736f6c63430008090033";

type OptionMarketViewerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketViewerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarketViewer__factory extends ContractFactory {
  constructor(...args: OptionMarketViewerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptionMarketViewer> {
    return super.deploy(overrides || {}) as Promise<OptionMarketViewer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptionMarketViewer {
    return super.attach(address) as OptionMarketViewer;
  }
  override connect(signer: Signer): OptionMarketViewer__factory {
    return super.connect(signer) as OptionMarketViewer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketViewerInterface {
    return new utils.Interface(_abi) as OptionMarketViewerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarketViewer {
    return new Contract(address, _abi, signerOrProvider) as OptionMarketViewer;
  }
}
