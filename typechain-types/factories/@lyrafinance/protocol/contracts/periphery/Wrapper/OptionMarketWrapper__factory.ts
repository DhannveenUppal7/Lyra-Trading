/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  OptionMarketWrapper,
  OptionMarketWrapperInterface,
} from "../../../../../../@lyrafinance/protocol/contracts/periphery/Wrapper/OptionMarketWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "approving",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "approvalAmount",
        type: "uint256",
      },
    ],
    name: "ApprovalFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AssetTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "DuplicateEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "enum OptionMarket.OptionType",
        name: "optionType",
        type: "uint8",
      },
    ],
    name: "OnlyShorts",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "RemovingInvalidId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isOpen",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "swapFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PositionTraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newCollateral",
        type: "uint256",
      },
    ],
    name: "SetCollateralTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ICurve",
        name: "curveSwap",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract SynthetixAdapter",
        name: "synthetixAdapter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IFeeCounter",
        name: "tradingRewards",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minReturnPercent",
        type: "uint256",
      },
    ],
    name: "WrapperParamsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "addCurveStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "addLong",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "contract ERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "baseAsset",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionMarketContracts",
        name: "_marketContracts",
        type: "tuple",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "addShort",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "closeLong",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "closeShort",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curveSwap",
    outputs: [
      {
        internalType: "contract ICurve",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ercIds",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "forceClosePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getBalancesAndAllowances",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.StableAssetView[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "contract OptionMarket",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isApprovedForAll",
            type: "bool",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.MarketAssetView[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.LiquidityBalanceAndAllowance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketAndErcIds",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "idToERC",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "idToMarket",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    name: "marketContracts",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "optionToken",
        type: "address",
      },
      {
        internalType: "contract LiquidityPool",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "contract LiquidityToken",
        name: "liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketIds",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minReturnPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "openLong",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "openShort",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "quoteCurveSwap",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "reduceLong",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "reduceShort",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "removeCurveStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetixAdapter",
    outputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingRewards",
    outputs: [
      {
        internalType: "contract IFeeCounter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICurve",
        name: "_curveSwap",
        type: "address",
      },
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "contract IFeeCounter",
        name: "_tradingRewards",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minReturnPercent",
        type: "uint256",
      },
    ],
    name: "updateContractParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670d99a8cec7e2000060055534801561001c57600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a16152508061007a6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80638da5cb5b1161010f578063c390c411116100a2578063dee2a1a111610071578063dee2a1a114610563578063ecf6578314610576578063ed072e221461059f578063f9fad053146105b257600080fd5b8063c390c41114610508578063d2f5a5bb1461052a578063d8369d931461053d578063d8fca1ac1461055057600080fd5b8063a8d21c45116100de578063a8d21c4514610491578063b515016b1461049a578063b738a96b146104cc578063c3467451146104df57600080fd5b80638da5cb5b1461044557806390ac6a1114610458578063932d41871461046b5780639f0390901461047e57600080fd5b806353a47bb71161018757806379ba50971161015657806379ba5097146104045780637f402dd31461040c578063883ec2f71461041f5780638bc369691461043257600080fd5b806353a47bb71461032b5780635f9afcff1461035657806373ccbf6714610369578063779a9683146103f157600080fd5b806326041aee116101c357806326041aee146102ca5780632e7f2f37146102dd5780632eeee0b9146102f357806331296d241461031857600080fd5b80630aecdc7a146101f5578063128b1917146102815780631627540c146102a2578063172d102d146102b7575b600080fd5b610208610203366004614583565b6105c5565b60405161027891906000610100820190506001600160a01b0380845116835260208401516020840152806040850151166040840152606084015160608401526080840151608084015260a084015160a084015260c084015160c08401528060e08501511660e08401525092915050565b60405180910390f35b61029461028f366004614630565b610639565b604051908152602001610278565b6102b56102b0366004614649565b610836565b005b6102b56102c5366004614666565b6108aa565b6102946102d8366004614630565b61095b565b6102e5610b45565b6040516102789291906146f5565b610306610301366004614630565b610c34565b60405160ff9091168152602001610278565b610294610326366004614630565b610c68565b60015461033e906001600160a01b031681565b6040516001600160a01b039091168152602001610278565b6102b5610364366004614732565b610e0c565b6103b7610377366004614649565b600a60205260009081526040902080546001820154600283015460038401546004909401546001600160a01b039384169492841693918216928216911685565b604080516001600160a01b03968716815294861660208601529285169284019290925283166060830152909116608082015260a001610278565b6103066103ff366004614630565b611209565b6102b5611219565b6102b561041a366004614806565b611302565b61029461042d366004614630565b61165b565b610208610440366004614583565b611835565b60005461033e906001600160a01b031681565b610294610466366004614630565b6118a1565b6102b561047936600461483f565b611a72565b61029461048c366004614630565b611c68565b61029460055481565b6104ad6104a836600461485c565b611d81565b604080516001600160a01b039093168352602083019190915201610278565b6102086104da366004614583565b611e48565b61033e6104ed36600461483f565b6009602052600090815260409020546001600160a01b031681565b61051b610516366004614649565b611eb6565b60405161027893929190614a3a565b60035461033e906001600160a01b031681565b6102b561054b36600461483f565b612883565b60025461033e906001600160a01b031681565b610294610571366004614630565b612a2a565b61033e61058436600461483f565b6007602052600090815260409020546001600160a01b031681565b6102946105ad366004614630565b612bd0565b60045461033e906001600160a01b031681565b61062860405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b610633826001612d33565b92915050565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a081018552815484168152600182015484168187015260028201548416818601819052600383015485166060830152600492830154909416608082015293517ff22d8d9a0000000000000000000000000000000000000000000000000000000081529487901c63ffffffff16908501529284919063f22d8d9a9060240160e06040518083038186803b1580156106fc57600080fd5b505afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190614b3e565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b03898116825284870151948201949094528551928101929092529394509216916060810161079060108a901c60ff1690565b81526020016000815260200160008152602001846040015160048111156107b9576107b9614bda565b8152602001846060015181526020016107d560608a901c613181565b815260200160001981526020016107fc6107f660408b901c63ffffffff1690565b8561319a565b8152602001836001600160a01b03168152509050600061082682600060188b901c60ff1611612d33565b6080015198975050505050505050565b61083e6131de565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6108b26131de565b600280546001600160a01b038681167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316811790935560038054878316908416811790915560048054928716929093168217909255600584905560408051938452602084019290925290820152606081018290527f684e538a62c4f0f847b52625d992452110a7383fbe027e8327c80ba5b222d6e39060800160405180910390a150505050565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a081018552815484168152600182015484169581019590955260028101548316858501819052600382015484166060870152600491820154909316608086015292517ff22d8d9a000000000000000000000000000000000000000000000000000000008152601887901c63ffffffff1693810193909352929184919063f22d8d9a9060240160e06040518083038186803b158015610a2657600080fd5b505afa158015610a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5e9190614b3e565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b038981168252848701519482019490945285519281019290925293945092169160608101610aba60108a901c60ff1690565b8152602001600081526020016000815260200184604001516004811115610ae357610ae3614bda565b8152602001610af560788a901c61323f565b815260200160008152602001610b0e60388a901c613181565b8152602001610b2663ffffffff60588b901c166107f6565b8152602001836001600160a01b0316815250905060006108268261325a565b6060806008600681805480602002602001604051908101604052809291908181526020018280548015610bb557602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610b865790505b5050505050915080805480602002602001604051908101604052809291908181526020018280548015610c2557602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610bf65790505b50505050509050915091509091565b60068181548110610c4457600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a081018552815484168152600182015484168187015260028201548416818601819052600383015485166060830152600492830154909416608082015293517ff22d8d9a0000000000000000000000000000000000000000000000000000000081529487901c63ffffffff16908501529284919063f22d8d9a9060240160e06040518083038186803b158015610d2b57600080fd5b505afa158015610d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d639190614b3e565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b038981168252848701519482019490945285519281019290925293945092169160608101610dbf60108a901c60ff1690565b8152602001600081526020016000815260200184604001516004811115610de857610de8614bda565b8152602001610dfa60608a901c61323f565b81526020016107d560a08a901c613181565b610e146131de565b6001600160a01b038381166000908152600a6020908152604091829020845181547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116918616918217835592860151600183018054851691871691909117905592850151600282018054841691861691909117905560608501516003820180548416918616919091179055608085015160049091018054909216931692909217909155610ec390846135bb565b6001600160a01b038084166000908152600a6020526040902060010154610eeb9116846135bb565b60005b600854811015610ff457836001600160a01b03166009600060088481548110610f1957610f19614c09565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b03161480610f8e57508260ff1660088281548110610f6c57610f6c614c09565b60009182526020918290209181049091015460ff601f9092166101000a900416145b15610fe4576040517fbc8e843000000000000000000000000000000000000000000000000000000000815230600482015260ff841660248201526001600160a01b03851660448201526064015b60405180910390fd5b610fed81614c67565b9050610eee565b5080602001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561103257600080fd5b505afa158015611046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106a9190614c82565b600b600083602001516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff16021790555080602001516001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156110e857600080fd5b505afa1580156110fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111429190810190614c9f565b6020808301516001600160a01b03166000908152600c825260409020825161117093919291909101906143dc565b5050600880546001810190915560208082047ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805460ff948516601f9094166101000a8481029502191693909317909255600090815260099091526040902080546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055565b60088181548110610c4457600080fd5b6001546001600160a01b03163314611278576001546040517f96cf9ed80000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b039091166044820152606401610fdb565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b03841617909155169055565b61130a6131de565b6002546113219083906001600160a01b03166135bb565b60005b60065481101561142557826001600160a01b0316600760006006848154811061134f5761134f614c09565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b031614806113c457508160ff16600682815481106113a2576113a2614c09565b60009182526020918290209181049091015460ff601f9092166101000a900416145b15611415576040517fbc8e843000000000000000000000000000000000000000000000000000000000815230600482015260ff831660248201526001600160a01b0384166044820152606401610fdb565b61141e81614c67565b9050611324565b50600680546001810190915560208082047ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805460ff808616601f9095166101000a85810291021990911617905560009182526007815260409182902080546001600160a01b0386167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915582517f313ce5670000000000000000000000000000000000000000000000000000000081529251909263313ce567926004808301939192829003018186803b15801561150357600080fd5b505afa158015611517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153b9190614c82565b6001600160a01b0383166000818152600b602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff959095169490941790935582517f95d89b41000000000000000000000000000000000000000000000000000000008152925191926395d89b419260048083019392829003018186803b1580156115cf57600080fd5b505afa1580156115e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526116299190810190614c9f565b6001600160a01b0383166000908152600c60209081526040909120825161165693919291909101906143dc565b505050565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a081018552815484168152600182015484169581019590955260028101548316858501819052600382015484166060870152600491820154909316608086015292517ff22d8d9a000000000000000000000000000000000000000000000000000000008152601887901c63ffffffff1693810193909352929184919063f22d8d9a9060240160e06040518083038186803b15801561172657600080fd5b505afa15801561173a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175e9190614b3e565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b0389811682528487015194820194909452855192810192909252939450921691606081016117ba60108a901c60ff1690565b81526020016117cc60b88a901c61323f565b815260200184608001518152602001846040015160048111156117f1576117f1614bda565b815260200161180360788a901c61323f565b815260200161181560588a901c613181565b81526000196020820152604001610b2663ffffffff60388b901c166107f6565b61189860405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b6106338261325a565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a081018552815484168152600182015484168187015260028201548416818601819052600383015485166060830152600492830154909416608082015293517ff22d8d9a0000000000000000000000000000000000000000000000000000000081529487901c63ffffffff16908501529284919063f22d8d9a9060240160e06040518083038186803b15801561196457600080fd5b505afa158015611978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199c9190614b3e565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b0389811682528487015194820194909452855192810192909252939450921691606081016119f860108a901c60ff1690565b8152602001611a0a60c48a901c61323f565b81526020018460800151815260200184604001516004811115611a2f57611a2f614bda565b8152602001611a4160808a901c61323f565b815260200160008152602001611a5a60608a901c613181565b81526020016107fc63ffffffff60408b901c166107f6565b611a7a6131de565b60008060005b600854811015611ae3578360ff1660088281548110611aa157611aa1614c09565b60009182526020918290209181049091015460ff601f9092166101000a9004161415611ad35780925060019150611ae3565b611adc81614c67565b9050611a80565b5080611b26576040517fb339e18400000000000000000000000000000000000000000000000000000000815230600482015260ff84166024820152604401610fdb565b60088054611b3690600190614d6a565b81548110611b4657611b46614c09565b90600052602060002090602091828204019190069054906101000a900460ff1660088381548110611b7957611b79614c09565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff1602179055506008805480611bb457611bb4614d81565b60008281526020808220600019909301818104909301805460ff601f86166101000a8102199091169091559290935594168085526009808352604080872080546001600160a01b03168852600a855290872080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180548216905560028201805482169055600382018054821690556004909101805482169055929096529091528354169092555050565b60ff600882901c8116600090815260076020908152604080832054815161018081018352948616845260098352908320546001600160a01b0390811685529293921691839181810190611cc19087901c63ffffffff1690565b81526000602082015260400160ff601887901c16815260200160008152602001600081526020016000601087901c60ff1611611cfe576001611d01565b60005b6004811115611d1257611d12614bda565b8152602001611d24608087901c61323f565b815260200160008152602001611d3d604087901c613181565b8152602001611d5563ffffffff606088901c166107f6565b8152602001836001600160a01b031681525090506000611d748261325a565b6080015195945050505050565b600080611d8d856137a3565b50611d97846137a3565b506002546040517f4e21df750000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015286811660248301526044820186905290911690634e21df7590606401604080518083038186803b158015611e0457600080fd5b505afa158015611e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3c9190614db0565b90969095509350505050565b611eab60405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b610633826000612d33565b6006546060908190819060008167ffffffffffffffff811115611edb57611edb6144c7565b604051908082528060200260200182016040528015611f3a57816020015b6040805160c081018252600080825260208083018290529282018190526060808301526080820181905260a08201528252600019909201910181611ef95790505b50905060005b828110156122045760006007600060068481548110611f6157611f61614c09565b600091825260208083208183040154601f9092166101000a90910460ff168352820192909252604090810190912054815160c08101909252600680546001600160a01b039092169350829185908110611fbc57611fbc614c09565b60009182526020808320818304015460ff601f9093166101000a9004821684526001600160a01b038616848201819052808452600b8252604080852054909316838601528352600c90529020805460609092019161201990614dde565b80601f016020809104026020016040519081016040528092919081815260200182805461204590614dde565b80156120925780601f1061206757610100808354040283529160200191612092565b820191906000526020600020905b81548152906001019060200180831161207557829003601f168201915b50505091835250506040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038b811660048301526020909201918416906370a082319060240160206040518083038186803b1580156120fa57600080fd5b505afa15801561210e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121329190614e32565b81526040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b038b8116600483015230602483015260209092019184169063dd62ed3e9060440160206040518083038186803b15801561219a57600080fd5b505afa1580156121ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121d29190614e32565b8152508383815181106121e7576121e7614c09565b602002602001018190525050806121fd90614c67565b9050611f40565b5060085460008167ffffffffffffffff811115612223576122236144c7565b60405190808252806020026020018201604052801561229157816020015b6040805161010081018252600080825260208083018290529282018190526060808301829052608083015260a0820181905260c0820181905260e082015282526000199092019101816122415790505b50905060008267ffffffffffffffff8111156122af576122af6144c7565b60405190808252806020026020018201604052801561230d57816020015b6122fa604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816122cd5790505b50905060005b83811015612872576000600960006008848154811061233457612334614c09565b600091825260208083208183040154601f90921661010090810a90920460ff1684528381019490945260409283018220546001600160a01b03908116808452600a865292849020845160a08101865281548316815260018201548316968101969096526002810154821686860152600381015482166060870152600401541660808501528251908101909252600880549194508291869081106123d9576123d9614c09565b60009182526020808320818304015460ff601f9093166101000a9004821684526001600160a01b038088168583015286820180518216604080880191909152815183168652600b845280862054909416606087015251168352600c90529020805460809092019161244990614dde565b80601f016020809104026020016040519081016040528092919081815260200182805461247590614dde565b80156124c25780601f10612497576101008083540402835291602001916124c2565b820191906000526020600020905b8154815290600101906020018083116124a557829003601f168201915b5050505050815260200182602001516001600160a01b03166370a082318f6040518263ffffffff1660e01b815260040161250b91906001600160a01b0391909116815260200190565b60206040518083038186803b15801561252357600080fd5b505afa158015612537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255b9190614e32565b815260200182602001516001600160a01b031663dd62ed3e8f306040518363ffffffff1660e01b81526004016125a79291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b1580156125bf57600080fd5b505afa1580156125d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f79190614e32565b815260200182604001516001600160a01b031663e985e9c58f306040518363ffffffff1660e01b81526004016126439291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b15801561265b57600080fd5b505afa15801561266f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126939190614e4b565b15158152508584815181106126aa576126aa614c09565b602090810291909101015260808101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038e81166004830152909116906370a082319060240160206040518083038186803b15801561271557600080fd5b505afa158015612729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061274d9190614e32565b84848151811061275f5761275f614c09565b6020908102919091018101510152805160608201516040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b038f81166004830152918216602482015291169063dd62ed3e9060440160206040518083038186803b1580156127d657600080fd5b505afa1580156127ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061280e9190614e32565b84848151811061282057612820614c09565b60200260200101516040018181525050806060015184848151811061284757612847614c09565b60209081029190910101516001600160a01b0390911690525061286b905081614c67565b9050612313565b509298909750919550909350505050565b61288b6131de565b60008060005b6006548110156128f4578360ff16600682815481106128b2576128b2614c09565b60009182526020918290209181049091015460ff601f9092166101000a90041614156128e457809250600191506128f4565b6128ed81614c67565b9050612891565b5080612937576040517fb339e18400000000000000000000000000000000000000000000000000000000815230600482015260ff84166024820152604401610fdb565b6006805461294790600190614d6a565b8154811061295757612957614c09565b90600052602060002090602091828204019190069054906101000a900460ff166006838154811061298a5761298a614c09565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff16021790555060068054806129c5576129c5614d81565b60008281526020808220600019909301818104909301805460ff601f86166101000a81021990911690915592909355941684526007905250506040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a081018552815484168152600182015484168187015260028201548416818601819052600383015485166060830152600492830154909416608082015293517ff22d8d9a0000000000000000000000000000000000000000000000000000000081529487901c63ffffffff16908501529284919063f22d8d9a9060240160e06040518083038186803b158015612aed57600080fd5b505afa158015612b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b259190614b3e565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b038981168252848701519482019490945285519281019290925293945092169160608101612b8160108a901c60ff1690565b8152602001600081526020018460800151815260200184604001516004811115612bad57612bad614bda565b81526020018460600151815260200160008152602001611a5a60608a901c613181565b60ff600882901c8116600090815260076020908152604080832054815161018081018352948616845260098352818420546001600160a01b03908116865263ffffffff87851c16938601939093529084018390529192911690829060608101612c3d601887901c60ff1690565b8152602001612c4f60c087901c61323f565b815260200160008152602001601086901c60ff166004811115612c7457612c74614bda565b6004811115612c8557612c85614bda565b8152602001612c97608087901c61323f565b8152602001612ca9604087901c613181565b81526000196020820152604001612cc963ffffffff606088901c166107f6565b8152602001836001600160a01b03168152509050612cea8160c00151613864565b15612d285760c08101516040517f4e85fe2f000000000000000000000000000000000000000000000000000000008152610fdb913091600401614ea8565b6000611d748261325a565b612d9660405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b82516001600160a01b039081166000908152600a60209081526040808320815160a08101835281548616808252600183015487169482019490945260028201548616818401819052600383015487166060830152600492830154871660808301526101608a0151848b015194517f23b872dd000000000000000000000000000000000000000000000000000000008152339481019490945230602485015260448401949094529095929092169092141592916323b872dd90606401600060405180830381600087803b158015612e6b57600080fd5b505af1158015612e7f573d6000803e3d6000fd5b50505050612e9f8660c001518760a0015188608001518660200151613881565b612eac8660c00151613864565b612f8257612ec686610160015133308961014001516138c1565b8115612f825761012086015160028760c001516004811115612eea57612eea614bda565b14612f5b5760008760a0015188610120015111612f1b578761012001518860a00151612f169190614d6a565b612f1e565b60005b90508088608001511115612f4357808860800151612f3c9190614d6a565b9150612f59565b612f508860c00151613864565b612f5957600091505b505b8015612f8057612f7c87610160015185600001518961014001518430613a82565b9250505b505b6000612f8d87613c98565b9050612fb360405180606001604052806000815260200160008152602001600081525090565b861561305a5787516040517fe4e83e3d0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063e4e83e3d90613001908590600401614ec5565b606060405180830381600087803b15801561301b57600080fd5b505af115801561302f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130539190614f27565b90506130f7565b87516040517f92b4632c0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906392b4632c906130a2908590600401614ec5565b606060405180830381600087803b1580156130bc57600080fd5b505af11580156130d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130f49190614f27565b90505b613114886000015133846080015184602001518560400151613d14565b600061312986600001518a6101600151613dc3565b915061313790508185614f83565b9350613150866020015187604001518460000151613fa1565b61315b898386614177565b96506131758760006131708c60c00151613864565b614251565b50505050505092915050565b600061063363ffffffff8316662386f26fc10000614ff7565b6001600160a01b0381166000908152600b60205260408120546131c29060029060ff16615016565b6131cd90600a61511d565b6131d79084614ff7565b9392505050565b6000546001600160a01b0316331461323d576000546040517f1abc2f980000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b039091166044820152606401610fdb565b565b600061063367ffffffffffffffff83166402540be400614ff7565b6132bd60405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b81516001600160a01b039081166000908152600a60209081526040808320815160a08101835281548616808252600183015487169482019490945260028201548616818401526003820154861660608201526004909101548516608082015261016087015191870151909491909116909114159190156133c0576040808401518682015191517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101929092526001600160a01b0316906323b872dd90606401600060405180830381600087803b1580156133a757600080fd5b505af11580156133bb573d6000803e3d6000fd5b505050505b6133dc8560c001518660a0015187608001518660200151613881565b60028560c0015160048111156133f4576133f4614bda565b146134a55761340f85610160015133308861014001516138c1565b818015613420575061014085015115155b156134a55760006134348660c00151613864565b6134765760008661010001518760a0015161344f919061512c565b905080876080015111156134705780876080015161346d9190614d6a565b91505b5061347e565b506101208501515b80156134a35761349f86610160015185600001518861014001518430613a82565b9250505b505b60006134b086613c98565b9050600086600001516001600160a01b03166237f2bc836040518263ffffffff1660e01b81526004016134e39190614ec5565b606060405180830381600087803b1580156134fd57600080fd5b505af1158015613511573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135359190614f27565b9050613554876000015133846080015184602001518560400151613d14565b60006135698660000151896101600151613dc3565b915061357790508185614f83565b9350613590866020015187604001518460000151613fa1565b61359b888386614177565b96506135b08760016131708b60c00151613864565b505050505050919050565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526000602483015283169063095ea7b390604401602060405180830381600087803b15801561361e57600080fd5b505af1158015613632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136569190614e4b565b6136ac576040517f6f27b6930000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0380841660248301528216604482015260006064820152608401610fdb565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152600019602483015283169063095ea7b390604401602060405180830381600087803b15801561371057600080fd5b505af1158015613724573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137489190614e4b565b61379f576040517f6f27b6930000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038084166024830152821660448201526000196064820152608401610fdb565b5050565b6000805b60065481101561382657826001600160a01b031660076000600684815481106137d2576137d2614c09565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b031614156138165750600192915050565b61381f81614c67565b90506137a7565b506040517fbf16aab60000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610fdb565b6000600282600481111561387a5761387a614bda565b1092915050565b600284600481111561389557613895614bda565b1480156138a157508282115b156138bb576138bb8133306138b68787614d6a565b6138c1565b50505050565b60006001600160a01b038416301415613976576040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905286169063a9059cbb90604401602060405180830381600087803b15801561393757600080fd5b505af115801561394b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061396f9190614e4b565b9050613a1c565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152604482018490528616906323b872dd90606401602060405180830381600087803b1580156139e157600080fd5b505af11580156139f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a199190614e4b565b90505b80613a7b576040517f3117b2820000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0380871660248301528086166044830152841660648201526084810183905260a401610fdb565b5050505050565b600080613a8e876137a3565b50613a98866137a3565b506001600160a01b038681166000908152600b602052604080822054928a168083528183205491517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260ff9485169490921692916370a082319060240160206040518083038186803b158015613b1557600080fd5b505afa158015613b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b4d9190614e32565b6002546040517f9f69a6a60000000000000000000000000000000000000000000000000000000081526001600160a01b038d811660048301528c81166024830152604482018c9052606482018b90528981166084830152929350911690639f69a6a69060a401602060405180830381600087803b158015613bcd57600080fd5b505af1158015613be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c059190614e32565b94508460ff8085169084161015613c3c57613c208385615016565b613c2b90600a61511d565b613c359083614ff7565b9150613c6c565b8360ff168360ff161115613c6c57613c548484615016565b613c5f90600a61511d565b613c699087614ff7565b90505b613c7581614304565b613c7e83614304565b613c889190615144565b9450505050509550959350505050565b613ca061445c565b6040518061010001604052808360200151815260200183604001518152602001836060015181526020018360c001516004811115613ce057613ce0614bda565b81526020018360e0015181526020018360800151815260200183610100015181526020018361012001518152509050919050565b6004546001600160a01b031615613a7b57600480546040517fa4ed57810000000000000000000000000000000000000000000000000000000081526001600160a01b0388811693820193909352868316602482015260448101869052606481018590526084810184905291169063a4ed57819060a401600060405180830381600087803b158015613da457600080fd5b505af1158015613db8573d6000803e3d6000fd5b505050505050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b038516906370a082319060240160206040518083038186803b158015613e2057600080fd5b505afa158015613e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e589190614e32565b91508115613f9a57836001600160a01b0316836001600160a01b031614613f8e576001600160a01b0384166000908152600b6020526040812054613ea09060ff16600a61511d565b6001600160a01b0385166000908152600b6020526040902054613ec79060ff16600a61511d565b600554613ed49190614ff7565b613ede91906151b8565b9050613ef6858585613ef081866143ba565b30613a82565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529093506001600160a01b03861691506370a082319060240160206040518083038186803b158015613f5257600080fd5b505afa158015613f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f8a9190614e32565b9250505b613f9a833033856138c1565b9250929050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b158015613ffc57600080fd5b505afa158015614010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140349190614e32565b9050801561404857614048843033846138c1565b60016040517feb29dc5e000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0385169063eb29dc5e9060240160206040518083038186803b1580156140a357600080fd5b505afa1580156140b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140db91906151f3565b60058111156140ec576140ec614bda565b14156138bb576040517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b15801561415957600080fd5b505af115801561416d573d6000803e3d6000fd5b5050505050505050565b6141da60405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b60405180610100016040528085600001516001600160a01b0316815260200184600001518152602001336001600160a01b031681526020018560e00151815260200184602001518152602001846040015181526020018381526020018561016001516001600160a01b031681525090509392505050565b82604001516001600160a01b0316836020015184600001516001600160a01b03167ff74837aa66b0393a1c687b44e30275519696e95458ad4a8bf7657e2364a734508585886060015189608001518a60a001518b60c001518c60e001516040516142f797969594939291909615158752941515602087015260408601939093526060850191909152608084015260a08301526001600160a01b031660c082015260e00190565b60405180910390a4505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156143b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160448201527f6e20696e743235360000000000000000000000000000000000000000000000006064820152608401610fdb565b5090565b60006143c86012600a61520e565b6143d28385614ff7565b6131d791906151b8565b8280546143e890614dde565b90600052602060002090601f01602090048101928261440a5760008555614450565b82601f1061442357805160ff1916838001178555614450565b82800160010185558215614450579182015b82811115614450578251825591602001919060010190614435565b506143b69291506144b2565b6040518061010001604052806000815260200160008152602001600081526020016000600481111561449057614490614bda565b8152602001600081526020016000815260200160008152602001600081525090565b5b808211156143b657600081556001016144b3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561451a5761451a6144c7565b60405290565b60405160a0810167ffffffffffffffff8111828210171561451a5761451a6144c7565b6001600160a01b038116811461455857600080fd5b50565b803561456681614543565b919050565b6005811061455857600080fd5b80356145668161456b565b6000610180828403121561459657600080fd5b61459e6144f6565b6145a78361455b565b81526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201526145e760c08401614578565b60c082015260e0838101359082015261010080840135908201526101208084013590820152610140808401359082015261016061462581850161455b565b908201529392505050565b60006020828403121561464257600080fd5b5035919050565b60006020828403121561465b57600080fd5b81356131d781614543565b6000806000806080858703121561467c57600080fd5b843561468781614543565b9350602085013561469781614543565b925060408501356146a781614543565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156146ea57815160ff16875295820195908201906001016146cb565b509495945050505050565b60408152600061470860408301856146b7565b828103602084015261471a81856146b7565b95945050505050565b60ff8116811461455857600080fd5b600080600083850360e081121561474857600080fd5b843561475381614543565b9350602085013561476381614723565b925060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08201121561479557600080fd5b5061479e614520565b60408501356147ac81614543565b815260608501356147bc81614543565b602082015260808501356147cf81614543565b604082015260a08501356147e281614543565b606082015260c08501356147f581614543565b608082015292959194509192509050565b6000806040838503121561481957600080fd5b823561482481614543565b9150602083013561483481614723565b809150509250929050565b60006020828403121561485157600080fd5b81356131d781614723565b60008060006060848603121561487157600080fd5b833561487c81614543565b9250602084013561488c81614543565b929592945050506040919091013590565b60005b838110156148b85781810151838201526020016148a0565b838111156138bb5750506000910152565b600081518084526148e181602086016020860161489d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156149de578284038952815161010060ff82511686526001600160a01b03878301511687870152604080830151614975828901826001600160a01b03169052565b505060608281015160ff169087015260808083015181880183905261499c838901826148c9565b60a085810151908a015260c080860151908a015260e094850151801515868b01529490935091506149ca9050565b509986019994505090840190600101614931565b5091979650505050505050565b600081518084526020808501945080840160005b838110156146ea57815180516001600160a01b03168852838101518489015260409081015190880152606090960195908201906001016149ff565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015614afa577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8503018652815160c060ff8083511687526001600160a01b03868401511686880152604081818501511681890152505089820151818b880152614ad2828801826148c9565b838b0151888c015260a093840151939097019290925250509482019490820190600101614a63565b505087820390880152614b0d818a614913565b9450505050508281036040840152614b2581856149eb565b9695505050505050565b80516006811061456657600080fd5b600060e08284031215614b5057600080fd5b60405160e0810181811067ffffffffffffffff82111715614b7357614b736144c7565b806040525082518152602083015160208201526040830151614b948161456b565b806040830152506060830151606082015260808301516080820152614bbb60a08401614b2f565b60a082015260c0830151614bce81614543565b60c08201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600019821415614c7b57614c7b614c38565b5060010190565b600060208284031215614c9457600080fd5b81516131d781614723565b600060208284031215614cb157600080fd5b815167ffffffffffffffff80821115614cc957600080fd5b818401915084601f830112614cdd57600080fd5b815181811115614cef57614cef6144c7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715614d3557614d356144c7565b81604052828152876020848701011115614d4e57600080fd5b614d5f83602083016020880161489d565b979650505050505050565b600082821015614d7c57614d7c614c38565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60008060408385031215614dc357600080fd5b8251614dce81614543565b6020939093015192949293505050565b600181811c90821680614df257607f821691505b60208210811415614e2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215614e4457600080fd5b5051919050565b600060208284031215614e5d57600080fd5b815180151581146131d757600080fd5b60058110614ea4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6001600160a01b0383168152604081016131d76020830184614e6d565b6000610100820190508251825260208301516020830152604083015160408301526060830151614ef86060840182614e6d565b506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b600060608284031215614f3957600080fd5b6040516060810181811067ffffffffffffffff82111715614f5c57614f5c6144c7565b80604052508251815260208301516020820152604083015160408201528091505092915050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615614fbd57614fbd614c38565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615614ff157614ff1614c38565b50500190565b600081600019048311821515161561501157615011614c38565b500290565b600060ff821660ff84168082101561503057615030614c38565b90039392505050565b600181815b8085111561507457816000190482111561505a5761505a614c38565b8085161561506757918102915b93841c939080029061503e565b509250929050565b60008261508b57506001610633565b8161509857506000610633565b81600181146150ae57600281146150b8576150d4565b6001915050610633565b60ff8411156150c9576150c9614c38565b50506001821b610633565b5060208310610133831016604e8410600b84101617156150f7575081810a610633565b6151018383615039565b806000190482111561511557615115614c38565b029392505050565b60006131d760ff84168361507c565b6000821982111561513f5761513f614c38565b500190565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561517e5761517e614c38565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183138116156151b2576151b2614c38565b50500390565b6000826151ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561520557600080fd5b6131d782614b2f565b60006131d7838361507c56fea2646970667358221220474f0657ad9cb4593af31707014a75bb2d25b0cd94d2a2b58df9897e55f7105364736f6c63430008090033";

type OptionMarketWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarketWrapper__factory extends ContractFactory {
  constructor(...args: OptionMarketWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptionMarketWrapper> {
    return super.deploy(overrides || {}) as Promise<OptionMarketWrapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptionMarketWrapper {
    return super.attach(address) as OptionMarketWrapper;
  }
  override connect(signer: Signer): OptionMarketWrapper__factory {
    return super.connect(signer) as OptionMarketWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketWrapperInterface {
    return new utils.Interface(_abi) as OptionMarketWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarketWrapper {
    return new Contract(address, _abi, signerOrProvider) as OptionMarketWrapper;
  }
}
