/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  OptionMarketWrapperWithSwaps,
  OptionMarketWrapperWithSwapsInterface,
} from "../../../../../../@lyrafinance/protocol/contracts/periphery/Wrapper/OptionMarketWrapperWithSwaps";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "approving",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "approvalAmount",
        type: "uint256",
      },
    ],
    name: "ApprovalFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AssetTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "DuplicateEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "RemovingInvalidId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isOpen",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "swapFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PositionTraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newCollateral",
        type: "uint256",
      },
    ],
    name: "SetCollateralTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ICurve",
        name: "curveSwap",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract SynthetixAdapter",
        name: "synthetixAdapter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IFeeCounter",
        name: "tradingRewards",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minReturnPercent",
        type: "uint256",
      },
    ],
    name: "WrapperParamsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "addCurveStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "contract ERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "baseAsset",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionMarketContracts",
        name: "_marketContracts",
        type: "tuple",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curveSwap",
    outputs: [
      {
        internalType: "contract ICurve",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ercIds",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "forceClosePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getBalancesAndAllowances",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.StableAssetView[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "contract OptionMarket",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isApprovedForAll",
            type: "bool",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.MarketAssetView[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.LiquidityBalanceAndAllowance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketAndErcIds",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "idToERC",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "idToMarket",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    name: "marketContracts",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "optionToken",
        type: "address",
      },
      {
        internalType: "contract LiquidityPool",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "contract LiquidityToken",
        name: "liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketIds",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minReturnPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "quoteCurveSwap",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "removeCurveStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetixAdapter",
    outputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingRewards",
    outputs: [
      {
        internalType: "contract IFeeCounter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICurve",
        name: "_curveSwap",
        type: "address",
      },
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "contract IFeeCounter",
        name: "_tradingRewards",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minReturnPercent",
        type: "uint256",
      },
    ],
    name: "updateContractParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670d99a8cec7e2000060055534801561001c57600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a16142be8061007a6000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80638da5cb5b116100e3578063c390c4111161008c578063d8fca1ac11610066578063d8fca1ac14610486578063ecf6578314610499578063f9fad053146104c257600080fd5b8063c390c4111461043e578063d2f5a5bb14610460578063d8369d931461047357600080fd5b8063b515016b116100bd578063b515016b146103d0578063b738a96b14610402578063c34674511461041557600080fd5b80638da5cb5b14610393578063932d4187146103a6578063a8d21c45146103b957600080fd5b80635f9afcff1161014557806379ba50971161011f57806379ba5097146103655780637f402dd31461036d5780638bc369691461038057600080fd5b80635f9afcff146102b757806373ccbf67146102ca578063779a96831461035257600080fd5b80632e7f2f37116101765780632e7f2f37146102515780632eeee0b91461026757806353a47bb71461028c57600080fd5b80630aecdc7a1461019d5780631627540c14610229578063172d102d1461023e575b600080fd5b6101b06101ab3660046136c1565b6104d5565b60405161022091906000610100820190506001600160a01b0380845116835260208401516020840152806040850151166040840152606084015160608401526080840151608084015260a084015160a084015260c084015160c08401528060e08501511660e08401525092915050565b60405180910390f35b61023c61023736600461376e565b610549565b005b61023c61024c36600461378b565b6105bd565b61025961066e565b60405161022092919061381a565b61027a610275366004613848565b61075d565b60405160ff9091168152602001610220565b60015461029f906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b61023c6102c5366004613870565b610791565b6103186102d836600461376e565b600a60205260009081526040902080546001820154600283015460038401546004909401546001600160a01b039384169492841693918216928216911685565b604080516001600160a01b03968716815294861660208601529285169284019290925283166060830152909116608082015260a001610220565b61027a610360366004613848565b610b8e565b61023c610b9e565b61023c61037b366004613944565b610c87565b6101b061038e3660046136c1565b610fe0565b60005461029f906001600160a01b031681565b61023c6103b436600461397d565b61104c565b6103c260055481565b604051908152602001610220565b6103e36103de36600461399a565b611242565b604080516001600160a01b039093168352602083019190915201610220565b6101b06104103660046136c1565b611309565b61029f61042336600461397d565b6009602052600090815260409020546001600160a01b031681565b61045161044c36600461376e565b611377565b60405161022093929190613b75565b60035461029f906001600160a01b031681565b61023c61048136600461397d565b611d44565b60025461029f906001600160a01b031681565b61029f6104a736600461397d565b6007602052600090815260409020546001600160a01b031681565b60045461029f906001600160a01b031681565b61053860405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b610543826001611eeb565b92915050565b610551612339565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6105c5612339565b600280546001600160a01b038681167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316811790935560038054878316908416811790915560048054928716929093168217909255600584905560408051938452602084019290925290820152606081018290527f684e538a62c4f0f847b52625d992452110a7383fbe027e8327c80ba5b222d6e39060800160405180910390a150505050565b60608060086006818054806020026020016040519081016040528092919081815260200182805480156106de57602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116106af5790505b505050505091508080548060200260200160405190810160405280929190818152602001828054801561074e57602002820191906000526020600020906000905b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161071f5790505b50505050509050915091509091565b6006818154811061076d57600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b610799612339565b6001600160a01b038381166000908152600a6020908152604091829020845181547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116918616918217835592860151600183018054851691871691909117905592850151600282018054841691861691909117905560608501516003820180548416918616919091179055608085015160049091018054909216931692909217909155610848908461239a565b6001600160a01b038084166000908152600a602052604090206001015461087091168461239a565b60005b60085481101561097957836001600160a01b0316600960006008848154811061089e5761089e613c6a565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b0316148061091357508260ff16600882815481106108f1576108f1613c6a565b60009182526020918290209181049091015460ff601f9092166101000a900416145b15610969576040517fbc8e843000000000000000000000000000000000000000000000000000000000815230600482015260ff841660248201526001600160a01b03851660448201526064015b60405180910390fd5b61097281613cc8565b9050610873565b5080602001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156109b757600080fd5b505afa1580156109cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ef9190613ce3565b600b600083602001516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff16021790555080602001516001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610a6d57600080fd5b505afa158015610a81573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ac79190810190613d00565b6020808301516001600160a01b03166000908152600c8252604090208251610af59391929190910190613523565b5050600880546001810190915560208082047ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805460ff948516601f9094166101000a8481029502191693909317909255600090815260099091526040902080546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055565b6008818154811061076d57600080fd5b6001546001600160a01b03163314610bfd576001546040517f96cf9ed80000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b039091166044820152606401610960565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b03841617909155169055565b610c8f612339565b600254610ca69083906001600160a01b031661239a565b60005b600654811015610daa57826001600160a01b03166007600060068481548110610cd457610cd4613c6a565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b03161480610d4957508160ff1660068281548110610d2757610d27613c6a565b60009182526020918290209181049091015460ff601f9092166101000a900416145b15610d9a576040517fbc8e843000000000000000000000000000000000000000000000000000000000815230600482015260ff831660248201526001600160a01b0384166044820152606401610960565b610da381613cc8565b9050610ca9565b50600680546001810190915560208082047ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805460ff808616601f9095166101000a85810291021990911617905560009182526007815260409182902080546001600160a01b0386167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915582517f313ce5670000000000000000000000000000000000000000000000000000000081529251909263313ce567926004808301939192829003018186803b158015610e8857600080fd5b505afa158015610e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec09190613ce3565b6001600160a01b0383166000818152600b602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff959095169490941790935582517f95d89b41000000000000000000000000000000000000000000000000000000008152925191926395d89b419260048083019392829003018186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fae9190810190613d00565b6001600160a01b0383166000908152600c602090815260409091208251610fdb9391929190910190613523565b505050565b61104360405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b61054382612582565b611054612339565b60008060005b6008548110156110bd578360ff166008828154811061107b5761107b613c6a565b60009182526020918290209181049091015460ff601f9092166101000a90041614156110ad57809250600191506110bd565b6110b681613cc8565b905061105a565b5080611100576040517fb339e18400000000000000000000000000000000000000000000000000000000815230600482015260ff84166024820152604401610960565b6008805461111090600190613dcb565b8154811061112057611120613c6a565b90600052602060002090602091828204019190069054906101000a900460ff166008838154811061115357611153613c6a565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff160217905550600880548061118e5761118e613de2565b60008281526020808220600019909301818104909301805460ff601f86166101000a8102199091169091559290935594168085526009808352604080872080546001600160a01b03168852600a855290872080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180548216905560028201805482169055600382018054821690556004909101805482169055929096529091528354169092555050565b60008061124e856128e3565b50611258846128e3565b506002546040517f4e21df750000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015286811660248301526044820186905290911690634e21df7590606401604080518083038186803b1580156112c557600080fd5b505afa1580156112d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fd9190613e11565b90969095509350505050565b61136c60405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b610543826000611eeb565b6006546060908190819060008167ffffffffffffffff81111561139c5761139c61360e565b6040519080825280602002602001820160405280156113fb57816020015b6040805160c081018252600080825260208083018290529282018190526060808301526080820181905260a082015282526000199092019101816113ba5790505b50905060005b828110156116c5576000600760006006848154811061142257611422613c6a565b600091825260208083208183040154601f9092166101000a90910460ff168352820192909252604090810190912054815160c08101909252600680546001600160a01b03909216935082918590811061147d5761147d613c6a565b60009182526020808320818304015460ff601f9093166101000a9004821684526001600160a01b038616848201819052808452600b8252604080852054909316838601528352600c9052902080546060909201916114da90613e3f565b80601f016020809104026020016040519081016040528092919081815260200182805461150690613e3f565b80156115535780601f1061152857610100808354040283529160200191611553565b820191906000526020600020905b81548152906001019060200180831161153657829003601f168201915b50505091835250506040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038b811660048301526020909201918416906370a082319060240160206040518083038186803b1580156115bb57600080fd5b505afa1580156115cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f39190613e93565b81526040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b038b8116600483015230602483015260209092019184169063dd62ed3e9060440160206040518083038186803b15801561165b57600080fd5b505afa15801561166f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116939190613e93565b8152508383815181106116a8576116a8613c6a565b602002602001018190525050806116be90613cc8565b9050611401565b5060085460008167ffffffffffffffff8111156116e4576116e461360e565b60405190808252806020026020018201604052801561175257816020015b6040805161010081018252600080825260208083018290529282018190526060808301829052608083015260a0820181905260c0820181905260e082015282526000199092019101816117025790505b50905060008267ffffffffffffffff8111156117705761177061360e565b6040519080825280602002602001820160405280156117ce57816020015b6117bb604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b81526020019060019003908161178e5790505b50905060005b83811015611d3357600060096000600884815481106117f5576117f5613c6a565b600091825260208083208183040154601f90921661010090810a90920460ff1684528381019490945260409283018220546001600160a01b03908116808452600a865292849020845160a081018652815483168152600182015483169681019690965260028101548216868601526003810154821660608701526004015416608085015282519081019092526008805491945082918690811061189a5761189a613c6a565b60009182526020808320818304015460ff601f9093166101000a9004821684526001600160a01b038088168583015286820180518216604080880191909152815183168652600b845280862054909416606087015251168352600c90529020805460809092019161190a90613e3f565b80601f016020809104026020016040519081016040528092919081815260200182805461193690613e3f565b80156119835780601f1061195857610100808354040283529160200191611983565b820191906000526020600020905b81548152906001019060200180831161196657829003601f168201915b5050505050815260200182602001516001600160a01b03166370a082318f6040518263ffffffff1660e01b81526004016119cc91906001600160a01b0391909116815260200190565b60206040518083038186803b1580156119e457600080fd5b505afa1580156119f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1c9190613e93565b815260200182602001516001600160a01b031663dd62ed3e8f306040518363ffffffff1660e01b8152600401611a689291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b158015611a8057600080fd5b505afa158015611a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab89190613e93565b815260200182604001516001600160a01b031663e985e9c58f306040518363ffffffff1660e01b8152600401611b049291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b158015611b1c57600080fd5b505afa158015611b30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b549190613eac565b1515815250858481518110611b6b57611b6b613c6a565b602090810291909101015260808101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038e81166004830152909116906370a082319060240160206040518083038186803b158015611bd657600080fd5b505afa158015611bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0e9190613e93565b848481518110611c2057611c20613c6a565b6020908102919091018101510152805160608201516040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b038f81166004830152918216602482015291169063dd62ed3e9060440160206040518083038186803b158015611c9757600080fd5b505afa158015611cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccf9190613e93565b848481518110611ce157611ce1613c6a565b602002602001015160400181815250508060600151848481518110611d0857611d08613c6a565b60209081029190910101516001600160a01b03909116905250611d2c905081613cc8565b90506117d4565b509298909750919550909350505050565b611d4c612339565b60008060005b600654811015611db5578360ff1660068281548110611d7357611d73613c6a565b60009182526020918290209181049091015460ff601f9092166101000a9004161415611da55780925060019150611db5565b611dae81613cc8565b9050611d52565b5080611df8576040517fb339e18400000000000000000000000000000000000000000000000000000000815230600482015260ff84166024820152604401610960565b60068054611e0890600190613dcb565b81548110611e1857611e18613c6a565b90600052602060002090602091828204019190069054906101000a900460ff1660068381548110611e4b57611e4b613c6a565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff1602179055506006805480611e8657611e86613de2565b60008281526020808220600019909301818104909301805460ff601f86166101000a81021990911690915592909355941684526007905250506040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b611f4e60405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b82516001600160a01b039081166000908152600a60209081526040808320815160a08101835281548616808252600183015487169482019490945260028201548616818401819052600383015487166060830152600492830154871660808301526101608a0151848b015194517f23b872dd000000000000000000000000000000000000000000000000000000008152339481019490945230602485015260448401949094529095929092169092141592916323b872dd90606401600060405180830381600087803b15801561202357600080fd5b505af1158015612037573d6000803e3d6000fd5b505050506120578660c001518760a00151886080015186602001516129a4565b6120648660c001516129e4565b61213a5761207e8661016001513330896101400151612a01565b811561213a5761012086015160028760c0015160048111156120a2576120a2613ece565b146121135760008760a00151886101200151116120d3578761012001518860a001516120ce9190613dcb565b6120d6565b60005b905080886080015111156120fb578088608001516120f49190613dcb565b9150612111565b6121088860c001516129e4565b61211157600091505b505b80156121385761213487610160015185600001518961014001518430612bc2565b9250505b505b600061214587612dd8565b905061216b60405180606001604052806000815260200160008152602001600081525090565b86156122125787516040517fe4e83e3d0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063e4e83e3d906121b9908590600401613efd565b606060405180830381600087803b1580156121d357600080fd5b505af11580156121e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220b9190613f8f565b90506122af565b87516040517f92b4632c0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906392b4632c9061225a908590600401613efd565b606060405180830381600087803b15801561227457600080fd5b505af1158015612288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ac9190613f8f565b90505b6122cc886000015133846080015184602001518560400151612e54565b60006122e186600001518a6101600151612f03565b91506122ef90508185613feb565b93506123088660200151876040015184600001516130e1565b6123138983866132b7565b965061232d8760006123288c60c001516129e4565b613391565b50505050505092915050565b6000546001600160a01b03163314612398576000546040517f1abc2f980000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b039091166044820152606401610960565b565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526000602483015283169063095ea7b390604401602060405180830381600087803b1580156123fd57600080fd5b505af1158015612411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124359190613eac565b61248b576040517f6f27b6930000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0380841660248301528216604482015260006064820152608401610960565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152600019602483015283169063095ea7b390604401602060405180830381600087803b1580156124ef57600080fd5b505af1158015612503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125279190613eac565b61257e576040517f6f27b6930000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038084166024830152821660448201526000196064820152608401610960565b5050565b6125e560405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b81516001600160a01b039081166000908152600a60209081526040808320815160a08101835281548616808252600183015487169482019490945260028201548616818401526003820154861660608201526004909101548516608082015261016087015191870151909491909116909114159190156126e8576040808401518682015191517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101929092526001600160a01b0316906323b872dd90606401600060405180830381600087803b1580156126cf57600080fd5b505af11580156126e3573d6000803e3d6000fd5b505050505b6127048560c001518660a00151876080015186602001516129a4565b60028560c00151600481111561271c5761271c613ece565b146127cd576127378561016001513330886101400151612a01565b818015612748575061014085015115155b156127cd57600061275c8660c001516129e4565b61279e5760008661010001518760a00151612777919061405f565b90508087608001511115612798578087608001516127959190613dcb565b91505b506127a6565b506101208501515b80156127cb576127c786610160015185600001518861014001518430612bc2565b9250505b505b60006127d886612dd8565b9050600086600001516001600160a01b03166237f2bc836040518263ffffffff1660e01b815260040161280b9190613efd565b606060405180830381600087803b15801561282557600080fd5b505af1158015612839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285d9190613f8f565b905061287c876000015133846080015184602001518560400151612e54565b60006128918660000151896101600151612f03565b915061289f90508185613feb565b93506128b88660200151876040015184600001516130e1565b6128c38883866132b7565b96506128d88760016123288b60c001516129e4565b505050505050919050565b6000805b60065481101561296657826001600160a01b0316600760006006848154811061291257612912613c6a565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b031614156129565750600192915050565b61295f81613cc8565b90506128e7565b506040517fbf16aab60000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610960565b60028460048111156129b8576129b8613ece565b1480156129c457508282115b156129de576129de8133306129d98787613dcb565b612a01565b50505050565b600060028260048111156129fa576129fa613ece565b1092915050565b60006001600160a01b038416301415612ab6576040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905286169063a9059cbb90604401602060405180830381600087803b158015612a7757600080fd5b505af1158015612a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aaf9190613eac565b9050612b5c565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152604482018490528616906323b872dd90606401602060405180830381600087803b158015612b2157600080fd5b505af1158015612b35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b599190613eac565b90505b80612bbb576040517f3117b2820000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0380871660248301528086166044830152841660648201526084810183905260a401610960565b5050505050565b600080612bce876128e3565b50612bd8866128e3565b506001600160a01b038681166000908152600b602052604080822054928a168083528183205491517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260ff9485169490921692916370a082319060240160206040518083038186803b158015612c5557600080fd5b505afa158015612c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c8d9190613e93565b6002546040517f9f69a6a60000000000000000000000000000000000000000000000000000000081526001600160a01b038d811660048301528c81166024830152604482018c9052606482018b90528981166084830152929350911690639f69a6a69060a401602060405180830381600087803b158015612d0d57600080fd5b505af1158015612d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d459190613e93565b94508460ff8085169084161015612d7c57612d608385614077565b612d6b90600a61417e565b612d75908361418d565b9150612dac565b8360ff168360ff161115612dac57612d948484614077565b612d9f90600a61417e565b612da9908761418d565b90505b612db581613444565b612dbe83613444565b612dc891906141ac565b9450505050509550959350505050565b612de06135a3565b6040518061010001604052808360200151815260200183604001518152602001836060015181526020018360c001516004811115612e2057612e20613ece565b81526020018360e0015181526020018360800151815260200183610100015181526020018361012001518152509050919050565b6004546001600160a01b031615612bbb57600480546040517fa4ed57810000000000000000000000000000000000000000000000000000000081526001600160a01b0388811693820193909352868316602482015260448101869052606481018590526084810184905291169063a4ed57819060a401600060405180830381600087803b158015612ee457600080fd5b505af1158015612ef8573d6000803e3d6000fd5b505050505050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b038516906370a082319060240160206040518083038186803b158015612f6057600080fd5b505afa158015612f74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f989190613e93565b915081156130da57836001600160a01b0316836001600160a01b0316146130ce576001600160a01b0384166000908152600b6020526040812054612fe09060ff16600a61417e565b6001600160a01b0385166000908152600b60205260409020546130079060ff16600a61417e565b600554613014919061418d565b61301e9190614220565b905061303685858561303081866134fa565b30612bc2565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529093506001600160a01b03861691506370a082319060240160206040518083038186803b15801561309257600080fd5b505afa1580156130a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130ca9190613e93565b9250505b6130da83303385612a01565b9250929050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b15801561313c57600080fd5b505afa158015613150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131749190613e93565b905080156131885761318884303384612a01565b60016040517feb29dc5e000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0385169063eb29dc5e9060240160206040518083038186803b1580156131e357600080fd5b505afa1580156131f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061321b919061425b565b600581111561322c5761322c613ece565b14156129de576040517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b15801561329957600080fd5b505af11580156132ad573d6000803e3d6000fd5b5050505050505050565b61331a60405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b60405180610100016040528085600001516001600160a01b0316815260200184600001518152602001336001600160a01b031681526020018560e00151815260200184602001518152602001846040015181526020018381526020018561016001516001600160a01b031681525090509392505050565b82604001516001600160a01b0316836020015184600001516001600160a01b03167ff74837aa66b0393a1c687b44e30275519696e95458ad4a8bf7657e2364a734508585886060015189608001518a60a001518b60c001518c60e0015160405161343797969594939291909615158752941515602087015260408601939093526060850191909152608084015260a08301526001600160a01b031660c082015260e00190565b60405180910390a4505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156134f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160448201527f6e20696e743235360000000000000000000000000000000000000000000000006064820152608401610960565b5090565b60006135086012600a61427c565b613512838561418d565b61351c9190614220565b9392505050565b82805461352f90613e3f565b90600052602060002090601f0160209004810192826135515760008555613597565b82601f1061356a57805160ff1916838001178555613597565b82800160010185558215613597579182015b8281111561359757825182559160200191906001019061357c565b506134f69291506135f9565b604051806101000160405280600081526020016000815260200160008152602001600060048111156135d7576135d7613ece565b8152602001600081526020016000815260200160008152602001600081525090565b5b808211156134f657600081556001016135fa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156136615761366161360e565b60405290565b60405160a0810167ffffffffffffffff811182821017156136615761366161360e565b6001600160a01b038116811461369f57600080fd5b50565b80356136ad8161368a565b919050565b8035600581106136ad57600080fd5b600061018082840312156136d457600080fd5b6136dc61363d565b6136e5836136a2565b81526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261372560c084016136b2565b60c082015260e083810135908201526101008084013590820152610120808401359082015261014080840135908201526101606137638185016136a2565b908201529392505050565b60006020828403121561378057600080fd5b813561351c8161368a565b600080600080608085870312156137a157600080fd5b84356137ac8161368a565b935060208501356137bc8161368a565b925060408501356137cc8161368a565b9396929550929360600135925050565b600081518084526020808501945080840160005b8381101561380f57815160ff16875295820195908201906001016137f0565b509495945050505050565b60408152600061382d60408301856137dc565b828103602084015261383f81856137dc565b95945050505050565b60006020828403121561385a57600080fd5b5035919050565b60ff8116811461369f57600080fd5b600080600083850360e081121561388657600080fd5b84356138918161368a565b935060208501356138a181613861565b925060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0820112156138d357600080fd5b506138dc613667565b60408501356138ea8161368a565b815260608501356138fa8161368a565b6020820152608085013561390d8161368a565b604082015260a08501356139208161368a565b606082015260c08501356139338161368a565b608082015292959194509192509050565b6000806040838503121561395757600080fd5b82356139628161368a565b9150602083013561397281613861565b809150509250929050565b60006020828403121561398f57600080fd5b813561351c81613861565b6000806000606084860312156139af57600080fd5b83356139ba8161368a565b925060208401356139ca8161368a565b929592945050506040919091013590565b60005b838110156139f65781810151838201526020016139de565b838111156129de5750506000910152565b60008151808452613a1f8160208601602086016139db565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000815180845260208085019450848260051b860182860160005b85811015613b19578383038952815161010060ff82511685526001600160a01b03878301511687860152604080830151613ab0828801826001600160a01b03169052565b505060608281015160ff1690860152608080830151818701839052613ad783880182613a07565b60a0858101519089015260c0808601519089015260e094850151801515868a0152949093509150613b059050565b509986019993505090840190600101613a6c565b5090979650505050505050565b600081518084526020808501945080840160005b8381101561380f57815180516001600160a01b0316885283810151848901526040908101519088015260609096019590820190600101613b3a565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015613c35577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8503018652815160c060ff8083511687526001600160a01b03868401511686880152604081818501511681890152505089820151818b880152613c0d82880182613a07565b838b0151888c015260a093840151939097019290925250509482019490820190600101613b9e565b505087820390880152613c48818a613a51565b9450505050508281036040840152613c608185613b26565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600019821415613cdc57613cdc613c99565b5060010190565b600060208284031215613cf557600080fd5b815161351c81613861565b600060208284031215613d1257600080fd5b815167ffffffffffffffff80821115613d2a57600080fd5b818401915084601f830112613d3e57600080fd5b815181811115613d5057613d5061360e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715613d9657613d9661360e565b81604052828152876020848701011115613daf57600080fd5b613dc08360208301602088016139db565b979650505050505050565b600082821015613ddd57613ddd613c99565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60008060408385031215613e2457600080fd5b8251613e2f8161368a565b6020939093015192949293505050565b600181811c90821680613e5357607f821691505b60208210811415613e8d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215613ea557600080fd5b5051919050565b600060208284031215613ebe57600080fd5b8151801515811461351c57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600061010082019050825182526020830151602083015260408301516040830152606083015160058110613f5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b806060840152506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b600060608284031215613fa157600080fd5b6040516060810181811067ffffffffffffffff82111715613fc457613fc461360e565b80604052508251815260208301516020820152604083015160408201528091505092915050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561402557614025613c99565b827f800000000000000000000000000000000000000000000000000000000000000003841281161561405957614059613c99565b50500190565b6000821982111561407257614072613c99565b500190565b600060ff821660ff84168082101561409157614091613c99565b90039392505050565b600181815b808511156140d55781600019048211156140bb576140bb613c99565b808516156140c857918102915b93841c939080029061409f565b509250929050565b6000826140ec57506001610543565b816140f957506000610543565b816001811461410f576002811461411957614135565b6001915050610543565b60ff84111561412a5761412a613c99565b50506001821b610543565b5060208310610133831016604e8410600b8410161715614158575081810a610543565b614162838361409a565b806000190482111561417657614176613c99565b029392505050565b600061351c60ff8416836140dd565b60008160001904831182151516156141a7576141a7613c99565b500290565b6000808312837f8000000000000000000000000000000000000000000000000000000000000000018312811516156141e6576141e6613c99565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561421a5761421a613c99565b50500390565b600082614256577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561426d57600080fd5b81516006811061351c57600080fd5b600061351c83836140dd56fea2646970667358221220ae34d848e9cc09336a86aa2417310f68335fc38b820864aaf68512e4a4d9c07264736f6c63430008090033";

type OptionMarketWrapperWithSwapsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketWrapperWithSwapsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarketWrapperWithSwaps__factory extends ContractFactory {
  constructor(...args: OptionMarketWrapperWithSwapsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptionMarketWrapperWithSwaps> {
    return super.deploy(
      overrides || {}
    ) as Promise<OptionMarketWrapperWithSwaps>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptionMarketWrapperWithSwaps {
    return super.attach(address) as OptionMarketWrapperWithSwaps;
  }
  override connect(signer: Signer): OptionMarketWrapperWithSwaps__factory {
    return super.connect(signer) as OptionMarketWrapperWithSwaps__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketWrapperWithSwapsInterface {
    return new utils.Interface(_abi) as OptionMarketWrapperWithSwapsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarketWrapperWithSwaps {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptionMarketWrapperWithSwaps;
  }
}
