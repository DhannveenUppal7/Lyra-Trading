/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  KeeperHelper,
  KeeperHelperInterface,
} from "../../../../../@lyrafinance/protocol/contracts/periphery/KeeperHelper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greekCache",
    outputs: [
      {
        internalType: "contract OptionGreekCache",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "_optionMarket",
        type: "address",
      },
      {
        internalType: "contract ShortCollateral",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "_greekCache",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
    ],
    name: "liquidate8",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "liquidateMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "optionMarket",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
    ],
    name: "settle16",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch3",
        type: "uint256",
      },
    ],
    name: "settle24",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch4",
        type: "uint256",
      },
    ],
    name: "settle32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch5",
        type: "uint256",
      },
    ],
    name: "settle40",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
    ],
    name: "settle8",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch5",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch6",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch7",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch8",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch9",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch10",
        type: "uint256",
      },
    ],
    name: "settle80",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "settleMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shortCollateral",
    outputs: [
      {
        internalType: "contract ShortCollateral",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateAllBoardCachedGreeks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateStaleBoardCachedGreeks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a0b806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063778bd3d311610097578063870dcaeb11610066578063870dcaeb1461022e578063bb4a9f881461024e578063c4e521d51461026e578063f88668201461028157600080fd5b8063778bd3d3146101ed5780637a73780c1461020057806380deab4d14610213578063839d71ba1461021b57600080fd5b806356f08312116100d357806356f08312146101ac5780635ba3107b146101bf5780635bf3e977146101d25780636b23e77a146101e557600080fd5b8063158ef93e14610105578063184b95591461013f5780631d5565f01461015457806338b7405414610167575b600080fd5b60025461012a9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61015261014d366004611494565b610294565b005b6101526101623660046114df565b6103df565b6002546101879073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610136565b6101526101ba366004611547565b6106d1565b6101526101cd36600461161b565b610884565b6101526101e03660046116b1565b610908565b610152610a87565b6101526101fb3660046116dd565b610cac565b61015261020e3660046116dd565b610d7b565b610152610df7565b61015261022936600461161b565b610f67565b6001546101879073ffffffffffffffffffffffffffffffffffffffff1681565b6000546101879073ffffffffffffffffffffffffffffffffffffffff1681565b61015261027c3660046116f6565b611031565b61015261028f366004611731565b61121a565b60025474010000000000000000000000000000000000000000900460ff1615610343576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4b65657065722048656c7065723a20616c726561647920696e697469616c697a60448201527f6564000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600180549385169390911692909217909155600280547fffffffffffffffffffffff00000000000000000000000000000000000000000016919092161774010000000000000000000000000000000000000000179055565b604080516050808252610a20820190925260009160208201610a008036833701905050905060005b605081101561065d5761041b6008826117b1565b61044c576104298c82611354565b82828151811061043b5761043b6117c5565b60200260200101818152505061064d565b6104576008826117b1565b60011415610490576104698b82611354565b826104756008846117f4565b610480906008611808565b8151811061043b5761043b6117c5565b61049b6008826117b1565b600214156104c4576104ad8a82611354565b826104b96008846117f4565b610480906010611808565b6104cf6008826117b1565b600314156104f8576104e18982611354565b826104ed6008846117f4565b610480906018611808565b6105036008826117b1565b6004141561052c576105158882611354565b826105216008846117f4565b610480906020611808565b6105376008826117b1565b60051415610560576105498782611354565b826105556008846117f4565b610480906028611808565b61056b6008826117b1565b600614156105945761057d8682611354565b826105896008846117f4565b610480906030611808565b61059f6008826117b1565b600714156105c8576105b18582611354565b826105bd6008846117f4565b610480906038611808565b6105d36008826117b1565b600814156105fc576105e58482611354565b826105f16008846117f4565b610480906040611808565b6106076008826117b1565b6009141561064d576106198382611354565b826106256008846117f4565b610630906048611808565b81518110610640576106406117c5565b6020026020010181815250505b61065681611820565b9050610407565b5060006001825161066e9190611859565b90505b80156106ba57818181518110610689576106896117c5565b6020026020010151600014156106a8578151156106a857600182510382525b806106b281611870565b915050610671565b506106c481610884565b5050505050505050505050565b60408051602080825261042082019092526000918082016104008036833701905050905060005b60208110156108165761070c6008826117b1565b61073d5761071a8682611354565b82828151811061072c5761072c6117c5565b602002602001018181525050610806565b6107486008826117b1565b600114156107815761075a8582611354565b826107666008846117f4565b610771906008611808565b8151811061072c5761072c6117c5565b61078c6008826117b1565b600214156107b55761079e8482611354565b826107aa6008846117f4565b610771906010611808565b6107c06008826117b1565b60031415610806576107d28382611354565b826107de6008846117f4565b6107e9906018611808565b815181106107f9576107f96117c5565b6020026020010181815250505b61080f81611820565b90506106f8565b506000600182516108279190611859565b90505b801561087357818181518110610842576108426117c5565b6020026020010151600014156108615781511561086157600182510382525b8061086b81611870565b91505061082a565b5061087d81610884565b5050505050565b6001546040517fbc0d6c5700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063bc0d6c57906108da9084906004016118a5565b600060405180830381600087803b1580156108f457600080fd5b505af115801561087d573d6000803e3d6000fd5b6040805160188082526103208201909252600091602082016103008036833701905050905060005b6018811015610a1a576109446008826117b1565b610975576109528582611354565b828281518110610964576109646117c5565b602002602001018181525050610a0a565b6109806008826117b1565b600114156109b9576109928482611354565b8261099e6008846117f4565b6109a9906008611808565b81518110610964576109646117c5565b6109c46008826117b1565b60021415610a0a576109d68382611354565b826109e26008846117f4565b6109ed906010611808565b815181106109fd576109fd6117c5565b6020026020010181815250505b610a1381611820565b9050610930565b50600060018251610a2b9190611859565b90505b8015610a7757818181518110610a4657610a466117c5565b602002602001015160001415610a6557815115610a6557600182510382525b80610a6f81611870565b915050610a2e565b50610a8181610884565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e7088eb6040518163ffffffff1660e01b815260040160006040518083038186803b158015610af057600080fd5b505afa158015610b04573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b4a91908101906118e9565b905060005b8151811015610ca857600254825173ffffffffffffffffffffffffffffffffffffffff9091169063d6d1c31b90849084908110610b8e57610b8e6117c5565b60200260200101516040518263ffffffff1660e01b8152600401610bb491815260200190565b60206040518083038186803b158015610bcc57600080fd5b505afa158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c04919061196f565b15610c9857600254825173ffffffffffffffffffffffffffffffffffffffff909116906360e3ecc990849084908110610c3f57610c3f6117c5565b60200260200101516040518263ffffffff1660e01b8152600401610c6591815260200190565b600060405180830381600087803b158015610c7f57600080fd5b505af1158015610c93573d6000803e3d6000fd5b505050505b610ca181611820565b9050610b4f565b5050565b6040805160088082526101208201909252600091602082016101008036833701905050905060005b6008811015610d1457610ce78382611354565b828281518110610cf957610cf96117c5565b6020908102919091010152610d0d81611820565b9050610cd4565b50600060018251610d259190611859565b90505b8015610d7157818181518110610d4057610d406117c5565b602002602001015160001415610d5f57815115610d5f57600182510382525b80610d6981611870565b915050610d28565b50610ca881610884565b6040805160088082526101208201909252600091602082016101008036833701905050905060005b6008811015610ded57610db7816020611998565b83901c63ffffffff16828281518110610dd257610dd26117c5565b6020908102919091010152610de681611820565b9050610da3565b50610ca88161137d565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e7088eb6040518163ffffffff1660e01b815260040160006040518083038186803b158015610e6057600080fd5b505afa158015610e74573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610eba91908101906118e9565b905060005b8151811015610ca857600254825173ffffffffffffffffffffffffffffffffffffffff909116906360e3ecc990849084908110610efe57610efe6117c5565b60200260200101516040518263ffffffff1660e01b8152600401610f2491815260200190565b600060405180830381600087803b158015610f3e57600080fd5b505af1158015610f52573d6000803e3d6000fd5b5050505080610f6090611820565b9050610ebf565b60005b8151811015610ca857600054825173ffffffffffffffffffffffffffffffffffffffff90911690635f036de190849084908110610fa957610fa96117c5565b6020026020010151336040518363ffffffff1660e01b8152600401610fee92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b600060405180830381600087803b15801561100857600080fd5b505af115801561101c573d6000803e3d6000fd5b505050508061102a90611820565b9050610f6a565b6040805160288082526105208201909252600091602082016105008036833701905050905060005b60288110156111ab5761106d6008826117b1565b61109e5761107b8782611354565b82828151811061108d5761108d6117c5565b60200260200101818152505061119b565b6110a96008826117b1565b600114156110e2576110bb8682611354565b826110c76008846117f4565b6110d2906008611808565b8151811061108d5761108d6117c5565b6110ed6008826117b1565b60021415611116576110ff8582611354565b8261110b6008846117f4565b6110d2906010611808565b6111216008826117b1565b6003141561114a576111338482611354565b8261113f6008846117f4565b6110d2906018611808565b6111556008826117b1565b6004141561119b576111678382611354565b826111736008846117f4565b61117e906020611808565b8151811061118e5761118e6117c5565b6020026020010181815250505b6111a481611820565b9050611059565b506000600182516111bc9190611859565b90505b8015611208578181815181106111d7576111d76117c5565b6020026020010151600014156111f6578151156111f657600182510382525b8061120081611870565b9150506111bf565b5061121281610884565b505050505050565b6040805160108082526102208201909252600091602082016102008036833701905050905060005b60108110156112e8576112566008826117b1565b611287576112648482611354565b828281518110611276576112766117c5565b6020026020010181815250506112d8565b6112926008826117b1565b600114156112d8576112a48382611354565b826112b06008846117f4565b6112bb906008611808565b815181106112cb576112cb6117c5565b6020026020010181815250505b6112e181611820565b9050611242565b506000600182516112f99190611859565b90505b801561134557818181518110611314576113146117c5565b6020026020010151600014156113335781511561133357600182510382525b8061133d81611870565b9150506112fc565b5061134f81610884565b505050565b60006113616008836117f4565b61136c906020611998565b83901c63ffffffff16905092915050565b805160005b8181101561134f5782818151811061139c5761139c6117c5565b6020026020010151600014156113b15761145f565b600054835173ffffffffffffffffffffffffffffffffffffffff90911690635f036de1908590849081106113e7576113e76117c5565b6020026020010151336040518363ffffffff1660e01b815260040161142c92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b600060405180830381600087803b15801561144657600080fd5b505af115801561145a573d6000803e3d6000fd5b505050505b61146881611820565b9050611382565b73ffffffffffffffffffffffffffffffffffffffff8116811461149157600080fd5b50565b6000806000606084860312156114a957600080fd5b83356114b48161146f565b925060208401356114c48161146f565b915060408401356114d48161146f565b809150509250925092565b6000806000806000806000806000806101408b8d0312156114ff57600080fd5b505088359a60208a01359a5060408a013599606081013599506080810135985060a0810135975060c0810135965060e081013595506101008101359450610120013592509050565b6000806000806080858703121561155d57600080fd5b5050823594602084013594506040840135936060013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156115ef576115ef611579565b604052919050565b600067ffffffffffffffff82111561161157611611611579565b5060051b60200190565b6000602080838503121561162e57600080fd5b823567ffffffffffffffff81111561164557600080fd5b8301601f8101851361165657600080fd5b8035611669611664826115f7565b6115a8565b81815260059190911b8201830190838101908783111561168857600080fd5b928401925b828410156116a65783358252928401929084019061168d565b979650505050505050565b6000806000606084860312156116c657600080fd5b505081359360208301359350604090920135919050565b6000602082840312156116ef57600080fd5b5035919050565b600080600080600060a0868803121561170e57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561174457600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826117c0576117c0611753565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008261180357611803611753565b500690565b6000821982111561181b5761181b611782565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561185257611852611782565b5060010190565b60008282101561186b5761186b611782565b500390565b60008161187f5761187f611782565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6020808252825182820181905260009190848201906040850190845b818110156118dd578351835292840192918401916001016118c1565b50909695505050505050565b600060208083850312156118fc57600080fd5b825167ffffffffffffffff81111561191357600080fd5b8301601f8101851361192457600080fd5b8051611932611664826115f7565b81815260059190911b8201830190838101908783111561195157600080fd5b928401925b828410156116a657835182529284019290840190611956565b60006020828403121561198157600080fd5b8151801515811461199157600080fd5b9392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119d0576119d0611782565b50029056fea2646970667358221220a84fea353981da3273f3880b19bb06d3301b4c4165f4cee70610cd2a975a343064736f6c63430008090033";

type KeeperHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeeperHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KeeperHelper__factory extends ContractFactory {
  constructor(...args: KeeperHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeeperHelper> {
    return super.deploy(overrides || {}) as Promise<KeeperHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KeeperHelper {
    return super.attach(address) as KeeperHelper;
  }
  override connect(signer: Signer): KeeperHelper__factory {
    return super.connect(signer) as KeeperHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperHelperInterface {
    return new utils.Interface(_abi) as KeeperHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperHelper {
    return new Contract(address, _abi, signerOrProvider) as KeeperHelper;
  }
}
