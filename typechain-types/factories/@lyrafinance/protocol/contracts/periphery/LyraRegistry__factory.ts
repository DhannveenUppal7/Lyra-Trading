/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  LyraRegistry,
  LyraRegistryInterface,
} from "../../../../../@lyrafinance/protocol/contracts/periphery/LyraRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractName",
        type: "bytes32",
      },
    ],
    name: "NonExistentGlobalContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
    ],
    name: "NonExistentMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "RemovingInvalidMarket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "GlobalAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "MarketRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract GWAVOracle",
            name: "gwavOracle",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct LyraRegistry.OptionMarketAddresses",
        name: "market",
        type: "tuple",
      },
    ],
    name: "MarketUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract GWAVOracle",
            name: "gwavOracle",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        internalType: "struct LyraRegistry.OptionMarketAddresses",
        name: "newMarketAddresses",
        type: "tuple",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractName",
        type: "bytes32",
      },
    ],
    name: "getGlobalAddress",
    outputs: [
      {
        internalType: "address",
        name: "globalContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
    ],
    name: "getMarketAddresses",
    outputs: [
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract GWAVOracle",
            name: "gwavOracle",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        internalType: "struct LyraRegistry.OptionMarketAddresses",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "globalAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    name: "marketAddresses",
    outputs: [
      {
        internalType: "contract LiquidityPool",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "contract LiquidityToken",
        name: "liquidityToken",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "greekCache",
        type: "address",
      },
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "contract OptionMarketPricer",
        name: "optionMarketPricer",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "optionToken",
        type: "address",
      },
      {
        internalType: "contract PoolHedger",
        name: "poolHedger",
        type: "address",
      },
      {
        internalType: "contract ShortCollateral",
        name: "shortCollateral",
        type: "address",
      },
      {
        internalType: "contract GWAVOracle",
        name: "gwavOracle",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "baseAsset",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "optionMarkets",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "names",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "updateGlobalAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a16113c98061006e6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80637f2e060011610081578063c4158a511161005b578063c4158a51146101e2578063c71b7e5314610202578063db9132361461030e57600080fd5b80637f2e0600146101795780638acce68f1461018c5780638da5cb5b146101c257600080fd5b806330a12dc4116100b257806330a12dc41461013e57806353a47bb71461015157806379ba50971461017157600080fd5b80631627540c146100d9578063199bc905146100ee5780631cb6684514610101575b600080fd5b6100ec6100e7366004610e1e565b610321565b005b6100ec6100fc366004610ef5565b6103a2565b61011461010f366004610fcf565b6105cf565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ec61014c366004611080565b610606565b6001546101149073ffffffffffffffffffffffffffffffffffffffff1681565b6100ec6107aa565b610114610187366004610fcf565b6108c7565b61011461019a366004610fcf565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000546101149073ffffffffffffffffffffffffffffffffffffffff1681565b6101f56101f0366004610e1e565b610931565b6040516101359190611139565b610296610210366004610e1e565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501546006860154600787015460088801546009890154600a9099015473ffffffffffffffffffffffffffffffffffffffff9889169a978916999789169896871697958716969485169593851694928316939183169291821691168b565b6040805173ffffffffffffffffffffffffffffffffffffffff9c8d1681529a8c1660208c0152988b16988a01989098529589166060890152938816608088015291871660a0870152861660c0860152851660e08501528416610100840152831661012083015290911661014082015261016001610135565b6100ec61031c366004610e1e565b610a9a565b610329610aae565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6103aa610aae565b606081015173ffffffffffffffffffffffffffffffffffffffff9081166000908152600360208190526040909120015416610459576060810151600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790555b60608101805173ffffffffffffffffffffffffffffffffffffffff908116600090815260036020818152604092839020865181547fffffffffffffffffffffffff000000000000000000000000000000000000000090811691871691909117825591870151600182018054841691871691909117905583870151600282018054841691871691909117905594519185018054821692851692831790556080860151600486018054831691861691909117905560a0860151600586018054831691861691909117905560c0860151600686018054831691861691909117905560e0860151600786018054831691861691909117905561010086015160088601805483169186169190911790556101208601516009860180548316918616919091179055610140860151600a90950180549091169490931693909317909155517fa090264792b8766dd953a6d1775028cdd591d04a748e045c19b98135970e9127906105c4908490611139565b60405180910390a250565b600281815481106105df57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b61060e610aae565b81518151811461067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6c656e677468206d69736d61746368000000000000000000000000000000000060448201526064015b60405180910390fd5b60005b818110156107a45782818151811061069c5761069c6112b6565b6020026020010151600460008684815181106106ba576106ba6112b6565b6020026020010151815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838181518110610720576107206112b6565b60200260200101517fdf028fe8b079d8195054d23416d2537debdd0f58695e83cd840d822e6a4c2e8084838151811061075b5761075b6112b6565b602002602001015160405161078c919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60405180910390a261079d81611314565b9050610682565b50505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610823576001546040517f96cf9ed800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff9091166044820152606401610676565b6000546001546040805173ffffffffffffffffffffffffffffffffffffffff93841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1680156108f757919050565b6040517f8e5b5d0800000000000000000000000000000000000000000000000000000000815260048101839052602401610676565b919050565b6040805161016081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081019190915273ffffffffffffffffffffffffffffffffffffffff80831660009081526003602081815260409283902083516101608101855281548616815260018201548616928101929092526002810154851693820193909352908201548316606082018190526004830154841660808301526005830154841660a08301526006830154841660c08301526007830154841660e08301526008830154841661010083015260098301548416610120830152600a9092015490921661014083015215610a505792915050565b6040517f228c8d1600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610676565b610aa2610aae565b610aab81610b29565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b27576000546040517f1abc2f9800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff9091166044820152606401610676565b565b600254600080805b83811015610ba7578473ffffffffffffffffffffffffffffffffffffffff1660028281548110610b6357610b636112b6565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff161415610b975780925060019150610ba7565b610ba081611314565b9050610b31565b5080610bfd576040517ff3aface400000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff85166024820152604401610676565b6002610c0a60018561134d565b81548110610c1a57610c1a6112b6565b6000918252602090912001546002805473ffffffffffffffffffffffffffffffffffffffff9092169184908110610c5357610c536112b6565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002805480610cac57610cac611364565b60008281526020812082017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590910190915560405173ffffffffffffffffffffffffffffffffffffffff8616917f59d7b1e52008dc342c9421dadfc773114b914a65682a4e4b53cf60a970df0d7791a250505073ffffffffffffffffffffffffffffffffffffffff16600090815260036020819052604090912080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001820180548216905560028201805482169055918101805483169055600481018054831690556005810180548316905560068101805483169055600781018054831690556008810180548316905560098101805483169055600a0180549091169055565b73ffffffffffffffffffffffffffffffffffffffff81168114610aab57600080fd5b600060208284031215610e3057600080fd5b8135610e3b81610dfc565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715610e9557610e95610e42565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ee257610ee2610e42565b604052919050565b803561092c81610dfc565b60006101608284031215610f0857600080fd5b610f10610e71565b610f1983610eea565b8152610f2760208401610eea565b6020820152610f3860408401610eea565b6040820152610f4960608401610eea565b6060820152610f5a60808401610eea565b6080820152610f6b60a08401610eea565b60a0820152610f7c60c08401610eea565b60c0820152610f8d60e08401610eea565b60e0820152610100610fa0818501610eea565b90820152610120610fb2848201610eea565b90820152610140610fc4848201610eea565b908201529392505050565b600060208284031215610fe157600080fd5b5035919050565b600067ffffffffffffffff82111561100257611002610e42565b5060051b60200190565b600082601f83011261101d57600080fd5b8135602061103261102d83610fe8565b610e9b565b82815260059290921b8401810191818101908684111561105157600080fd5b8286015b8481101561107557803561106881610dfc565b8352918301918301611055565b509695505050505050565b6000806040838503121561109357600080fd5b823567ffffffffffffffff808211156110ab57600080fd5b818501915085601f8301126110bf57600080fd5b813560206110cf61102d83610fe8565b82815260059290921b840181019181810190898411156110ee57600080fd5b948201945b8386101561110c578535825294820194908201906110f3565b9650508601359250508082111561112257600080fd5b5061112f8582860161100c565b9150509250929050565b815173ffffffffffffffffffffffffffffffffffffffff1681526101608101602083015161117f602084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516111a7604084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516111cf606084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516111f7608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161121f60a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161124760c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161126f60e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101008381015173ffffffffffffffffffffffffffffffffffffffff90811691840191909152610120808501518216908401526101409384015116929091019190915290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611346576113466112e5565b5060010190565b60008282101561135f5761135f6112e5565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220a8629b4637e4d7758505a79559d45dcd4cefb58bf0b9ef00c47e10f2d0d9f01764736f6c63430008090033";

type LyraRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LyraRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LyraRegistry__factory extends ContractFactory {
  constructor(...args: LyraRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LyraRegistry> {
    return super.deploy(overrides || {}) as Promise<LyraRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LyraRegistry {
    return super.attach(address) as LyraRegistry;
  }
  override connect(signer: Signer): LyraRegistry__factory {
    return super.connect(signer) as LyraRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LyraRegistryInterface {
    return new utils.Interface(_abi) as LyraRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LyraRegistry {
    return new Contract(address, _abi, signerOrProvider) as LyraRegistry;
  }
}
