/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  GWAV,
  GWAVInterface,
} from "../../../../../@lyrafinance/protocol/contracts/libraries/GWAV";

const _abi = [
  {
    inputs: [],
    name: "ExpOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastObservedTimestamp",
        type: "uint256",
      },
    ],
    name: "InvalidBlockTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "LnNegativeUndefined",
    type: "error",
  },
  {
    inputs: [],
    name: "Overflow",
    type: "error",
  },
];

const _bytecode =
  "0x610ed961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063065c1f13146100455780631c2c84161461006f575b600080fd5b6100586100533660046109f6565b610090565b604051610066929190610ae7565b60405180910390f35b61008261007d366004610b62565b6101a4565b604051908152602001610066565b805160609081908067ffffffffffffffff8111156100b0576100b06109c7565b6040519080825280602002602001820160405280156100d9578160200160208202803683370190505b5092508067ffffffffffffffff8111156100f5576100f56109c7565b60405190808252806020026020018201604052801561011e578160200160208202803683370190505b50915060005b8181101561019a57610150878787848151811061014357610143610b8e565b602002602001015161021e565b85838151811061016257610162610b8e565b6020026020010185848151811061017b5761017b610b8e565b60209081029190910101919091525261019381610bec565b9050610124565b5050935093915050565b60008060006101b4864287610250565b915091506000806101c6884288610250565b91509150808314156101ef576101e46101df8284610c54565b6102b4565b945050505050610217565b6102106101fc8483610cbc565b6102068685610cd3565b6101df9190610c54565b9450505050505b9392505050565b6000808061022c8486610cbc565b9050600061023a878361048c565b8051604090910151909890975095505050505050565b6000808061025e8486610cbc565b9050600061026c878361048c565b905060008160400151836102809190610cbc565b90508061029083602001516105fc565b61029a9190610d47565b82516102a69190610e03565b989297509195505050505050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c182136102e557506000919050565b680755bf798b4a1bf1e58212610327576040517fa37bfec900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b6d2c06887d92262d378b9593af35346c09791803c2923d5d9721c3da80929091056b8000000000000000000000000190921d6bb17217f7d1cf79abc9e3b39881029095039081018102606090811d6d019dd9374d4315c8464a395fc09881017fffffffffffffffffffffffffffffffffffffffe400ce74ed9455bc9156515002840102821d93840193016d29c9ad45cc0beb0a2ff097a7bab40192909202821d6dcf3c27b2e487711b467e90f19320016c22fcd1cffa6fa000f6e27eeca082018202831d6d022f98fbc368092c79210d196fa0018202831d6d13aaae3ba38de06adc25ebfacc0901820290921d6d624dcbeb5e25df590e409325888a010279d835ebba824c98fb19256146f65c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b6104b060405180606001604052806000815260200160008152602001600081525090565b826000018360010154815481106104c9576104c9610b8e565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050905081816040015111610512576105f6565b8260000160008154811061052857610528610b8e565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050905081816040015111156105a15761059a81604001518383600001516105859190610d47565b61058f9190610c54565b8260200151846108ae565b90506105f6565b826105ac81846108ef565b815481106105bc576105bc610b8e565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090505b92915050565b60006001821215610674576000821215610642576040517f906dbb0100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f35278d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000606060016fffffffffffffffffffffffffffffffff851160071b85811c67ffffffffffffffff1060061b1785811c63ffffffff1060051b1785811c61ffff1060041b1785811c60ff10600390811b90911786811c600f1060021b1786811c909110821b1785811c919091111703609f8181039490941b90931c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b393909302929092017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6108d260405180606001604052806000815260200160008152602001600081525090565b506040805160608101825293845260208401929092529082015290565b60018201546000908190815b60026109078385610e77565b6109119190610e8f565b9050600086600001828154811061092a5761092a610b8e565b6000918252602082206002600390920201015491508761094b846001610e77565b8154811061095b5761095b610b8e565b906000526020600020906003020160020154905060008783111590508080156109845750818811155b15610991575050506109be565b806109a8576109a1600185610cbc565b94506109b6565b6109b3846001610e77565b95505b5050506108fb565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600060608486031215610a0b57600080fd5b833592506020808501359250604085013567ffffffffffffffff80821115610a3257600080fd5b818701915087601f830112610a4657600080fd5b813581811115610a5857610a586109c7565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610a9b57610a9b6109c7565b60405291825284820192508381018501918a831115610ab957600080fd5b938501935b82851015610ad757843584529385019392850192610abe565b8096505050505050509250925092565b604080825283519082018190526000906020906060840190828701845b82811015610b2057815184529284019290840190600101610b04565b5050508381038285015284518082528583019183019060005b81811015610b5557835183529284019291840191600101610b39565b5090979650505050505050565b600080600060608486031215610b7757600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c1e57610c1e610bbd565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610c6357610c63610c25565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615610cb757610cb7610bbd565b500590565b600082821015610cce57610cce610bbd565b500390565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615610d0d57610d0d610bbd565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615610d4157610d41610bbd565b50500390565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600084136000841385830485118282161615610d8857610d88610bbd565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615610dc357610dc3610bbd565b60008712925087820587128484161615610ddf57610ddf610bbd565b87850587128184161615610df557610df5610bbd565b505050929093029392505050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615610e3d57610e3d610bbd565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615610e7157610e71610bbd565b50500190565b60008219821115610e8a57610e8a610bbd565b500190565b600082610e9e57610e9e610c25565b50049056fea264697066735822122048ee24ff7284aa0bd4838e788ecf20b5c95c3043e9d8d36f67ec0bcbb7d71dfc64736f6c63430008090033";

type GWAVConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GWAVConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GWAV__factory extends ContractFactory {
  constructor(...args: GWAVConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GWAV> {
    return super.deploy(overrides || {}) as Promise<GWAV>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GWAV {
    return super.attach(address) as GWAV;
  }
  override connect(signer: Signer): GWAV__factory {
    return super.connect(signer) as GWAV__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GWAVInterface {
    return new utils.Interface(_abi) as GWAVInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GWAV {
    return new Contract(address, _abi, signerOrProvider) as GWAV;
  }
}
