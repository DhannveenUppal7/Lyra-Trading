/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OptionMarket,
  OptionMarketInterface,
} from "../../../../@lyrafinance/protocol/contracts/OptionMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
    ],
    name: "AlreadyInitialised",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BaseTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardAlreadySettled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boardExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
    ],
    name: "BoardExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardIsFrozen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardNotExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardNotFrozen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "enum OptionMarket.NonZeroValues",
        name: "valueType",
        type: "uint8",
      },
    ],
    name: "ExpectedNonZeroValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "InvalidBoardId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxBoardExpiry",
        type: "uint256",
      },
    ],
    name: "InvalidExpiryTimestamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staticBaseSettlementFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "optionMarketParams",
        type: "tuple",
      },
    ],
    name: "InvalidOptionMarketParams",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "InvalidStrikeId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "securityModule",
        type: "address",
      },
    ],
    name: "OnlySecurityModule",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "QuoteTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strikesLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skewsLength",
        type: "uint256",
      },
    ],
    name: "StrikeSkewLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "TotalCostOutsideOfSpecifiedBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "iterations",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "TradeIterationsHasRemainder",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
    ],
    name: "BoardBaseIvSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "BoardCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "BoardFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spotPriceAtExpiry",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalUserLongProfitQuote",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBoardLongCallCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBoardLongPutCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortCallProfitBase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortCallProfitQuote",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortPutProfitQuote",
        type: "uint256",
      },
    ],
    name: "BoardSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staticBaseSettlementFee",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "optionMarketParams",
        type: "tuple",
      },
    ],
    name: "OptionMarketParamsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "securityModule",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
    ],
    name: "SMClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "StrikeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "StrikeSkewSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "enum OptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reservedFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarket.TradeEventData",
        name: "trade",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "preTradeAmmNetStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "postTradeAmmNetStdVega",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "vegaUtil",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "volTraded",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vegaUtilFee",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketPricer.VegaUtilFeeComponents",
            name: "vegaUtilFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "varianceFeeCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vega",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vegaCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skewCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ivVariance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ivVarianceCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "varianceFee",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketPricer.VarianceFeeComponents",
            name: "varianceFee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newBaseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newSkew",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarketPricer.TradeResult[]",
        name: "tradeResults",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "rewardBeneficiary",
            type: "address",
          },
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "returnCollateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpPremiums",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "insolventAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarket.LiquidationEventData",
        name: "liquidation",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountCollateral",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "addStrikeToBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "boardToPriceAtExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseIV",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "strikePrices",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "skews",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "createOptionBoard",
    outputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "forceClosePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "forceSettleBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoardAndStrikeDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoardStrikes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "strikeIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiveBoards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_liveBoards",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumLiveBoards",
    outputs: [
      {
        internalType: "uint256",
        name: "numLiveBoards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getOptionBoard",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOptionMarketParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staticBaseSettlementFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getSettlementParameters",
    outputs: [
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceAtExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikeToBaseReturned",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrike",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrikeAndBoard",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrikeAndExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "contract LiquidityPool",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "contract OptionMarketPricer",
        name: "_optionPricer",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "_greekCache",
        type: "address",
      },
      {
        internalType: "contract ShortCollateral",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "_optionToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_baseAsset",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rewardBeneficiary",
        type: "address",
      },
    ],
    name: "liquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
    ],
    name: "setBoardBaseIv",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "setBoardFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staticBaseSettlementFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "_optionMarketParams",
        type: "tuple",
      },
    ],
    name: "setOptionMarketParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "setStrikeSkew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "settleExpiredBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "smClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805460ff60a01b19168155600b819055600c5534801561002557600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a16001600255615fd680620000896000396000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c80637c1de42511610104578063a9c9d125116100a2578063e4e83e3d11610071578063e4e83e3d146104e1578063e7a5897b146104f4578063ebc2086614610507578063eed6601a1461050f57600080fd5b8063a9c9d1251461043e578063c4c4a0d014610451578063cf6bcba014610472578063d1e9e811146104c157600080fd5b806390e32fba116100de57806390e32fba146103e557806392b4632c146103f8578063a6063c051461040b578063a8f35adf1461042b57600080fd5b80637c1de425146103b75780637e7088eb146103ca5780638da5cb5b146103d257600080fd5b80631fdb6cbd1161017c57806353a47bb71161014b57806353a47bb7146103515780635d9d310c1461037c5780635f036de11461039c57806379ba5097146103af57600080fd5b80631fdb6cbd146102a95780632dd0776b146103085780633105dd9c14610329578063525240c01461033e57600080fd5b80631627540c116101b85780631627540c1461024057806316a54f501461025357806318cc7e86146102735780631f18a3421461028657600080fd5b806237f2bc146101de57806305c8954a146102185780631227e5001461022d575b600080fd5b6101f16101ec366004614c43565b610517565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b61022b610226366004614cdf565b6105dc565b005b61022b61023b366004614d20565b6106e5565b61022b61024e366004614d8c565b6107d7565b610266610261366004614da9565b610845565b60405161020f9190614e39565b61022b610281366004614e4c565b610917565b610299610294366004614da9565b610ac3565b60405161020f9493929190614f39565b6102ed6102b7366004614da9565b60008181526013602090815260408083206001810154600890910154845260148352818420549484526015909252909120549092565b6040805193845260208401929092529082015260600161020f565b61031b61031636600461504b565b610dc2565b60405190815260200161020f565b61033161114a565b60405161020f91906150d7565b61022b61034c36600461510b565b6111b4565b600154610364906001600160a01b031681565b6040516001600160a01b03909116815260200161020f565b61038f61038a366004614da9565b6112fa565b60405161020f91906151b4565b61022b6103aa3660046151c7565b6113c1565b61022b61186a565b61022b6103c5366004614da9565b611953565b61038f611b07565b600054610364906001600160a01b031681565b61022b6103f3366004614da9565b611bad565b6101f1610406366004614c43565b611cf1565b61041e610419366004614da9565b611d90565b60405161020f91906151f7565b61022b610439366004614e4c565b611e58565b61022b61044c36600461525b565b612002565b61046461045f366004614da9565b6120d8565b60405161020f929190615280565b6104ac610480366004614da9565b600090815260136020908152604080832060018082015460089092015485526012909352922001549091565b6040805192835260208301919091520161020f565b61031b6104cf366004614da9565b60146020526000908152604090205481565b6101f16104ef366004614c43565b612274565b61022b610502366004614e4c565b612313565b61022b612552565b600d5461031b565b61053b60405180606001604052806000815260200160008152602001600081525090565b6002805414156105ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600280556105b982612988565b90506105d281602001518360c001518460e00151612c93565b6001600255919050565b6105e4612cf3565b600083815260126020526040902080548414158061060157508054155b15610641576040517f1234dccd000000000000000000000000000000000000000000000000000000008152306004820152602481018590526044016105a3565b600061064e828585612d54565b60065481516040517f93c0a34f00000000000000000000000000000000000000000000000000000000815260048101899052602481019190915260448101879052606481018690529192506001600160a01b0316906393c0a34f90608401600060405180830381600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b505050505050505050565b6106ed612cf3565b6106f96012600a615446565b8160400151111561073a5730816040517fc8348d0e0000000000000000000000000000000000000000000000000000000081526004016105a3929190615452565b8051600e819055602080830151600f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909216918217905560408085015160108190556060808701516011819055835196875294860193909352908401528201527f19854f162a92eaba887a94b15691fb68f39b5ffc2a48f1eccd9ebac965432d80906080015b60405180910390a150565b6107df612cf3565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020016107cc565b6108796040518060a00160405280600081526020016000815260200160008152602001600015158152602001606081525090565b600082815260126020908152604091829020825160a08101845281548152600182015481840152600282015481850152600382015460ff1615156060820152600482018054855181860281018601909652808652919492936080860193929083018282801561090757602002820191906000526020600020905b8154815260200190600101908083116108f3575b5050505050815250509050919050565b61091f612cf3565b600082815260126020526040902080548314158061093c57508054155b1561097c576040517f1234dccd000000000000000000000000000000000000000000000000000000008152306004820152602481018490526044016105a3565b816109b8573060006040517f9c078bed0000000000000000000000000000000000000000000000000000000081526004016105a39291906154d8565b600381015460ff166109ff576040517fbac362fb000000000000000000000000000000000000000000000000000000008152306004820152602481018490526044016105a3565b600281018290556006546040517f551c855500000000000000000000000000000000000000000000000000000000815260048101859052602481018490526001600160a01b039091169063551c855590604401600060405180830381600087803b158015610a6c57600080fd5b505af1158015610a80573d6000803e3d6000fd5b50505050827f27dc10bc12529bac536af6dbf5d4b270673ac7aeb848c334e4038ef55ecce88183604051610ab691815260200190565b60405180910390a2505050565b610af76040518060a00160405280600081526020016000815260200160008152602001600015158152602001606081525090565b6000828152601260209081526040808320815160a08101835281548152600182015481850152600282015481840152600382015460ff16151560608281019190915260048301805485518188028101880190965280865291968796909586959360808601939192830182828015610b8d57602002820191906000526020600020905b815481526020019060010190808311610b79575b5050509190925250505060808101515190915060008167ffffffffffffffff811115610bbb57610bbb614bb7565b604051908082528060200260200182016040528015610c3b57816020015b610c286040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200190600190039081610bd95790505b50905060008267ffffffffffffffff811115610c5957610c59614bb7565b604051908082528060200260200182016040528015610c82578160200160208202803683370190505b50905060005b83811015610da1576013600086608001518381518110610caa57610caa6154fe565b60200260200101518152602001908152602001600020604051806101200160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050838281518110610d3857610d386154fe565b60200260200101819052506015600086608001518381518110610d5d57610d5d6154fe565b6020026020010151815260200190815260200160002054828281518110610d8657610d866154fe565b6020908102919091010152610d9a8161552d565b9050610c88565b50600098895260146020526040909820549298909796509194509092505050565b6000610dcc612cf3565b8351835181141580610ddc575080155b15610e265783516040517f4f1c9c810000000000000000000000000000000000000000000000000000000081523060048201526024810183905260448101919091526064016105a3565b4287111580610e405750600e54610e3d9042615566565b87115b15610e9157600e546040517f64cdb9080000000000000000000000000000000000000000000000000000000081523060048201524260248201526044810189905260648101919091526084016105a3565b85610ecd573060006040517f9c078bed0000000000000000000000000000000000000000000000000000000081526004016105a39291906154d8565b600c8054906000610edd8361552d565b90915550600081815260126020908152604080832084815560018082018d9055600282018c90556003820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168a1515908117909155600d805492830181559095527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50185905581518c81529283018b9052908201929092529193509083907fcb94f87a9b05d8957b230ed8ef82ef8ef24fb02e374b4b1300c402ccb3b8868e9060600160405180910390a260008267ffffffffffffffff811115610fc657610fc6614bb7565b60405190808252806020026020018201604052801561104657816020015b6110336040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200190600190039081610fe45790505b50905060005b838110156110bf576110918389838151811061106a5761106a6154fe565b6020026020010151898481518110611084576110846154fe565b6020026020010151612d54565b8282815181106110a3576110a36154fe565b6020026020010181905250806110b89061552d565b905061104c565b506006546040517f43f03af00000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906343f03af09061110b908590859060040161557e565b600060405180830381600087803b15801561112557600080fd5b505af1158015611139573d6000803e3d6000fd5b505050505050505b95945050505050565b61117e60405180608001604052806000815260200160006001600160a01b0316815260200160008152602001600081525090565b5060408051608081018252600e548152600f546001600160a01b0316602082015260105491810191909152601154606082015290565b6111bc612cf3565b60015474010000000000000000000000000000000000000000900460ff1615611213576040517f161b906f0000000000000000000000000000000000000000000000000000000081523060048201526024016105a3565b60018054740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909116179055600380547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b039a8b1617909155600480548216988a1698909817909755600580548816968916969096179095556006805487169488169490941790935560078054861692871692909217909155600880548516918616919091179055600980548416918516919091179055600a80549092169216919091179055565b6000818152601260205260409020600401546060908067ffffffffffffffff81111561132857611328614bb7565b604051908082528060200260200182016040528015611351578160200160208202803683370190505b50915060005b818110156113ba576000848152601260205260409020600401805482908110611382576113826154fe565b906000526020600020015483828151811061139f5761139f6154fe565b60209081029190910101526113b38161552d565b9050611357565b5050919050565b60028054141561142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105a3565b600280556008546040517ff22d8d9a000000000000000000000000000000000000000000000000000000008152600481018490526000916001600160a01b03169063f22d8d9a9060240160e06040518083038186803b15801561148f57600080fd5b505afa1580156114a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c79190615626565b905060008060006114ea8460200151856040015186606001516002600180612fe3565b92509250925060008061150584848760018a60600151613316565b6008546040517f0a302b20000000000000000000000000000000000000000000000000000000008152939650909450600093506001600160a01b031691630a302b20915061155b908c908a90889060040161579c565b60c060405180830381600087803b15801561157557600080fd5b505af1158015611589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ad919061583a565b60a081015190915015611633576004805460a08301516040517f9a6248fc000000000000000000000000000000000000000000000000000000008152928301526001600160a01b031690639a6248fc90602401600060405180830381600087803b15801561161a57600080fd5b505af115801561162e573d6000803e3d6000fd5b505050505b60075460c08801516040808a015190517fc45360390000000000000000000000000000000000000000000000000000000081526001600160a01b039093169263c45360399261168b9290918d91908790600401615856565b600060405180830381600087803b1580156116a557600080fd5b505af11580156116b9573d6000803e3d6000fd5b505060048054604080517f3f94bab800000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169450633f94bab89350808301926000929182900301818387803b15801561171957600080fd5b505af115801561172d573d6000803e3d6000fd5b505050508887602001518860c001516001600160a01b03167fb587f4a964cfbcea150e428bfd686fc9305b9c66a45f0daa0ff6f3e99e612d4d6040518061014001604052808b60a0015181526020018b60c0015181526020018c60400151600481111561179c5761179c615499565b8152602001600281526020018c606001518152602001600081526020016001151581526020018b61010001516000015181526020016000815260200188815250866040518061010001604052808f6001600160a01b03168152602001336001600160a01b0316815260200188600001518152602001886020015181526020018860400151815260200188606001518152602001886080015181526020018860a001518152504260405161185294939291906159f0565b60405180910390a45050600160025550505050505050565b6001546001600160a01b031633146118c9576001546040517f96cf9ed80000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b0390911660448201526064016105a3565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b03841617909155169055565b6002805414156119bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105a3565b60028080556000828152601260209081526040808320815160a081018352815481526001820154818501529481015485830152600381015460ff1615156060860152600481018054835181860281018601909452808452949594919360808601939290830182828015611a5157602002820191906000526020600020905b815481526020019060010190808311611a3d575b5050505050815250509050818160000151141580611a6e57508051155b15611aae576040517f1234dccd000000000000000000000000000000000000000000000000000000008152306004820152602481018390526044016105a3565b8060200151421015611af5576040517f828a0404000000000000000000000000000000000000000000000000000000008152306004820152602481018390526044016105a3565b611afe8161364a565b50506001600255565b600d546060908067ffffffffffffffff811115611b2657611b26614bb7565b604051908082528060200260200182016040528015611b4f578160200160208202803683370190505b50915060005b81811015611ba857600d8181548110611b7057611b706154fe565b9060005260206000200154838281518110611b8d57611b8d6154fe565b6020908102919091010152611ba18161552d565b9050611b55565b505090565b611bb5612cf3565b6000818152601260209081526040808320815160a08101835281548152600182015481850152600282015481840152600382015460ff1615156060820152600482018054845181870281018701909552808552919492936080860193909290830182828015611c4357602002820191906000526020600020905b815481526020019060010190808311611c2f575b5050505050815250509050818160000151141580611c6057508051155b15611ca0576040517f1234dccd000000000000000000000000000000000000000000000000000000008152306004820152602481018390526044016105a3565b8060600151611ce4576040517fbac362fb000000000000000000000000000000000000000000000000000000008152306004820152602481018390526044016105a3565b611ced8161364a565b5050565b611d1560405180606001604052806000815260200160008152602001600081525090565b600280541415611d81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105a3565b600280556105b98260006137d9565b611ddf6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b50600090815260136020908152604091829020825161012081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260089091015461010082015290565b600280541415611ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105a3565b600280556003546040517f41627ea70000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116906341627ea79060240160006040518083038186803b158015611f2457600080fd5b505afa158015611f38573d6000803e3d6000fd5b505050506000611f4782613ae2565b6008546040517fa8f35adf00000000000000000000000000000000000000000000000000000000815260048101869052602481018590529192506000916001600160a01b039091169063a8f35adf90604401602060405180830381600087803b158015611fb357600080fd5b505af1158015611fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611feb9190615b00565b9050611ff78183613b98565b505060016002555050565b61200a612cf3565b600082815260126020526040902080548314158061202757508054155b15612067576040517f1234dccd000000000000000000000000000000000000000000000000000000008152306004820152602481018490526044016105a3565b60008381526012602090815260409182902060030180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515908117909155915191825284917fab7e756517bb425436c10403644a884802e0b2d5105f9f5386823b7c42ca5d5f9101610ab6565b6121276040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61215b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001606081525090565b6000838152601360209081526040808320815161012081018352815481526001808301548286015260028084015483860152600380850154606080860191909152600480870154608080880191909152600588015460a080890191909152600689015460c0890152600789015460e089015260089098015461010088018190528b5260128a5299889020885197880189528054885294850154878a015292840154868801529083015460ff16151590850152810180548551818802810188019096528086529296879692958694918601939092919083018282801561225f57602002820191906000526020600020905b81548152602001906001019080831161224b575b50505050508152505090509250925050915091565b61229860405180606001604052806000815260200160008152602001600081525090565b600280541415612304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105a3565b600280556105b98260016137d9565b61231b612cf3565b60008281526013602052604090208054831461236c576040517fb2c8897c000000000000000000000000000000000000000000000000000000008152306004820152602481018490526044016105a3565b816123a8573060016040517f9c078bed0000000000000000000000000000000000000000000000000000000081526004016105a39291906154d8565b60088101546000908152601260209081526040808320815160a08101835281548152600182015481850152600282015481840152600382015460ff161515606082015260048201805484518187028101870190955280855291949293608086019390929083018282801561243b57602002820191906000526020600020905b815481526020019060010190808311612427575b5050505050815250509050806060015161248d5780516040517fbac362fb00000000000000000000000000000000000000000000000000000000815230600482015260248101919091526044016105a3565b600282018390556006546040517fe7a5897b00000000000000000000000000000000000000000000000000000000815260048101869052602481018590526001600160a01b039091169063e7a5897b90604401600060405180830381600087803b1580156124fa57600080fd5b505af115801561250e573d6000803e3d6000fd5b50505050837fe494e8ea1592ce5eff63e093b9aa6d5208883099ea0a8734e64a518226fd443e8460405161254491815260200190565b60405180910390a250505050565b6003546040517f41627ea70000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116906341627ea79060240160006040518083038186803b1580156125ae57600080fd5b505afa1580156125c2573d6000803e3d6000fd5b5050600f546001600160a01b031633149150612627905057600f546040517f8748a2c30000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b0390911660448201526064016105a3565b6009546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561268457600080fd5b505afa158015612698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bc9190615b1d565b905060008111801561276857506009546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561272e57600080fd5b505af1158015612742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127669190615b36565b155b156127b5576040517f0f7ad8ce00000000000000000000000000000000000000000000000000000000815230600482018190526024820152336044820152606481018290526084016105a3565b600a546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561281257600080fd5b505afa158015612826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061284a9190615b1d565b90506000811180156128f65750600a546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156128bc57600080fd5b505af11580156128d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128f49190615b36565b155b15612943576040517f9794f10b00000000000000000000000000000000000000000000000000000000815230600482018190526024820152336044820152606481018290526084016105a3565b60408051338152602081018490529081018290527f37b3d08ef7ea83f3a646520b4d8d248a92ffba0f65943f3bc3a8d58dd149e94b9060600160405180910390a15050565b6129ac60405180606001604052806000815260200160008152602001600081525090565b60008060006129d1856000015186606001518760800151600089604001516000612fe3565b92509250925060606129ee83838689604001518a60800151613316565b6040808a01929092526020808a0193845260808901949094526008548a51948b0151935160a08c015193517f9b76157a0000000000000000000000000000000000000000000000000000000081529296506000956001600160a01b0390921694639b76157a94612a6b948c94933393929091600190600401615b53565b6040805180830381600087803b158015612a8457600080fd5b505af1158015612a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612abc9190615ba3565b9087526010546040880151919250600091612ad691613d94565b9050612ae786886020015183613dbf565b612af5866060015183613b98565b60048054604080517f3f94bab800000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921692633f94bab892828201926000929082900301818387803b158015612b5157600080fd5b505af1158015612b65573d6000803e3d6000fd5b5050505086600001518860000151336001600160a01b03167fb587f4a964cfbcea150e428bfd686fc9305b9c66a45f0daa0ff6f3e99e612d4d6040518061014001604052808b60a0015181526020018b60c0015181526020018d606001516004811115612bd457612bd4615499565b8152602001600081526020018b6080015181526020018d60a0015181526020016000151581526020018b61010001516000015181526020018681526020018c602001518152508760405180610100016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525042604051612c8094939291906159f0565b60405180910390a4505050505050919050565b81831080612ca057508083115b15612cee576040517f56e250f30000000000000000000000000000000000000000000000000000000081523060048201526024810184905260448101839052606481018290526084016105a3565b505050565b6000546001600160a01b03163314612d52576000546040517f1abc2f980000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b0390911660448201526064016105a3565b565b612da36040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b82612ddf573060026040517f9c078bed0000000000000000000000000000000000000000000000000000000081526004016105a39291906154d8565b81612e1b573060016040517f9c078bed0000000000000000000000000000000000000000000000000000000081526004016105a39291906154d8565b600b805460009182612e2c8361552d565b9190505590506040518061012001604052808281526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001866000015481525060136000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155905050846004018190806001815401808255809150506001900390600052602060002001600090919091909150558085600001547f8dba15d5569538a96f1404ee74da67080a64e02c5cfbadf4b8908f90320178a18686604051612f57929190918252602082015260400190565b60405180910390a3601360008281526020019081526020016000206040518061012001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509150505b9392505050565b612feb614a39565b6000808861302a573060046040517f9c078bed0000000000000000000000000000000000000000000000000000000081526004016105a39291906154d8565b84613066573060036040517f9c078bed0000000000000000000000000000000000000000000000000000000081526004016105a39291906154d8565b6000898152601360205260409020805490925089146130ba576040517fb2c8897c000000000000000000000000000000000000000000000000000000008152306004820152602481018a90526044016105a3565b506008810154600090815260126020908152604080832080548452601490925290912054156131215780546040517ff2ebc7bf00000000000000000000000000000000000000000000000000000000815230600482015260248101919091526044016105a3565b60008087600281111561313657613136615499565b1461314a5761314489614002565b15613153565b61315389614002565b6003546040517fcfbe7f440000000000000000000000000000000000000000000000000000000081523060048201529192506000916001600160a01b039091169063cfbe7f449060240160a06040518083038186803b1580156131b557600080fd5b505afa1580156131c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ed9190615bc7565b90506040518061012001604052808315158152602001871515815260200189600281111561321d5761321d615499565b81526020018b600481111561323457613234615499565b8152602001613243898c615c37565b8152600180860154602083015286015460408083019190915260048054855192517f951583c30000000000000000000000000000000000000000000000000000000081526060909401936001600160a01b039091169263951583c3926132ad920190815260200190565b60c06040518083038186803b1580156132c557600080fd5b505afa1580156132d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132fd919061583a565b8152602001828152509450505096509650969350505050565b600080600060608660800151600014156133c3578415613380576040517f0f119a150000000000000000000000000000000000000000000000000000000081523060048201526024810187905260448101869052600060648201819052608482015260a4016105a3565b6040805160008082526020820190925281908190816133b5565b6133a2614ae0565b81526020019060019003908161339a5790505b50935093509350935061363e565b600388015460ff161561340e5787546040517fea409ee400000000000000000000000000000000000000000000000000000000815230600482015260248101919091526044016105a3565b8760010154421061346757875460018901546040517f3f98da18000000000000000000000000000000000000000000000000000000008152306004820152602481019290925260448201524260648201526084016105a3565b8567ffffffffffffffff81111561348057613480614bb7565b6040519080825280602002602001820160405280156134b957816020015b6134a6614ae0565b81526020019060019003908161349e5790505b50905060005b8681101561363c576134d2600188615c72565b8114156134e9576134e38587615c72565b60808901525b6080880151606089015161351791908c60008c60400151600281111561351157613511615499565b14614039565b6000600560009054906101000a90046001600160a01b03166001600160a01b0316635c2ddc328c8b8d600201548e600101546040518563ffffffff1660e01b81526004016135689493929190615c89565b6102e060405180830381600087803b15801561358357600080fd5b505af1158015613597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135bb9190615d95565b6101208101516002808d0191909155610140820151908d015560e08101519091506135e69086615566565b94508060c00151846135f89190615566565b935088608001518661360a9190615566565b95508083838151811061361f5761361f6154fe565b602002602001018190525050806136359061552d565b90506134bf565b505b95509550955095915050565b600d54600090815b81811015613708578351600d805483908110613670576136706154fe565b906000526020600020015414156136f857600d61368e600184615c72565b8154811061369e5761369e6154fe565b9060005260206000200154600d82815481106136bc576136bc6154fe565b600091825260209091200155600d8054806136d9576136d9615e3a565b6001900381819060005260206000200160009055905560019250613708565b6137018161552d565b9050613652565b508161374c5782516040517ff2ebc7bf00000000000000000000000000000000000000000000000000000000815230600482015260248101919091526044016105a3565b613755836141a9565b60065483516040517fdba5082a0000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163dba5082a916137a29160040190815260200190565b600060405180830381600087803b1580156137bc57600080fd5b505af11580156137d0573d6000803e3d6000fd5b50505050505050565b6137fd60405180606001604052806000815260200160008152602001600081525090565b600080600061382186600001518760600151886080015160018a604001518a612fe3565b925092509250606061383e8383868a604001518b60800151613316565b6040808a01929092526020808a0193845260808901949094526008548b51948c0151935160a08d015193517f9b76157a0000000000000000000000000000000000000000000000000000000081529296506000956001600160a01b0390921694639b76157a946138ba948c949333939290918a90600401615b53565b6040805180830381600087803b1580156138d357600080fd5b505af11580156138e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061390b9190615ba3565b908752601054604088015191925060009161392591613d94565b9050613935866060015183613b98565b61394486886020015183614672565b60048054604080517f3f94bab800000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921692633f94bab892828201926000929082900301818387803b1580156139a057600080fd5b505af11580156139b4573d6000803e3d6000fd5b5050505086600001518960000151336001600160a01b03167fb587f4a964cfbcea150e428bfd686fc9305b9c66a45f0daa0ff6f3e99e612d4d6040518061014001604052808b60a0015181526020018b60c0015181526020018e606001516004811115613a2357613a23615499565b8152602001600181526020018e6080015181526020018e60a0015181526020018d151581526020018b61010001516000015181526020018681526020018c602001518152508760405180610100016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525042604051613ace94939291906159f0565b60405180910390a450505050505092915050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115613b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160448201527f6e20696e7432353600000000000000000000000000000000000000000000000060648201526084016105a3565b5090565b80613ba1575050565b6002826004811115613bb557613bb5615499565b1415613d58576000811315613cc357600a546007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401602060405180830381600087803b158015613c3357600080fd5b505af1158015613c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c6b9190615b36565b611ced576007546040517f9794f10b0000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b039091166044820152606481018290526084016105a3565b6007546001600160a01b0316638b89a24233613cde84615e69565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015613d3c57600080fd5b505af1158015613d50573d6000803e3d6000fd5b505050505050565b6000811315613d7957600754611ced9033906001600160a01b0316836148b7565b6007546001600160a01b0316635318b30733613cde84615e69565b6000613da26012600a615446565b613dac8385615ea2565b613db69190615c37565b90505b92915050565b6080830151613dcd57505050565b600083606001516004811115613de557613de5615499565b1415613ea35760048054608085015161010086015160e0870151516040517f5169078a0000000000000000000000000000000000000000000000000000000081526001600160a01b0390941694635169078a94613e459493929101615edf565b600060405180830381600087803b158015613e5f57600080fd5b505af1158015613e73573d6000803e3d6000fd5b5050600454613e9892503391506001600160a01b0316613e938486615c72565b6148b7565b612cee3330836148b7565b600183606001516004811115613ebb57613ebb615499565b1415613f195760045460c084015160808501516001600160a01b039092169163f238ff5c91613eea9190613d94565b8560e00151600001516040518363ffffffff1660e01b8152600401613e45929190918252602082015260400190565b600283606001516004811115613f3157613f31615499565b1415613f9a576004805460e0850151516040517f2c5b97aa0000000000000000000000000000000000000000000000000000000081523393810193909352602483018590526044830152606482018390526001600160a01b031690632c5b97aa906084016137a2565b6004805460075460e0860151516040517f2c5b97aa0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831694810194909452602484018690526044840152606483018490521690632c5b97aa906084016137a2565b60008082600481111561401757614017615499565b1480613db95750600182600481111561403257614032615499565b1492915050565b6000816140575761404985613ae2565b61405290615e69565b614060565b61406085613ae2565b9050600084600481111561407657614076615499565b14156140a8576140898360030154613ae2565b6140939082615f2c565b905061409e816149b4565b60038401556141a2565b60018460048111156140bc576140bc615499565b14156140ee576140cf8360060154613ae2565b6140d99082615f2c565b90506140e4816149b4565b60068401556141a2565b600284600481111561410257614102615499565b1415614134576141158360040154613ae2565b61411f9082615f2c565b905061412a816149b4565b60048401556141a2565b600384600481111561414857614148615499565b141561417a5761415b8360050154613ae2565b6141659082615f2c565b9050614170816149b4565b60058401556141a2565b6141878360070154613ae2565b6141919082615f2c565b905061419c816149b4565b60078401555b5050505050565b6003546040517f7dbae6480000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b031690637dbae6489060240160206040518083038186803b15801561420657600080fd5b505afa15801561421a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061423e9190615b1d565b825160009081526014602052604081208290556080840151519192509081908190819081908190815b818110156144ad576000601360008c60800151848151811061428b5761428b6154fe565b6020026020010151815260200190815260200160002060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505090508060600151886143199190615566565b975061433681602001518260c00151613d9490919063ffffffff16565b6143409088615566565b965080602001518a11156144415761436c81602001518b6143619190615c72565b606083015190613d94565b614376908a615566565b6011549099506000906143b39061438f6012600a615446565b6143999190615c72565b6143ad8d85602001518f6143ad9190615c72565b90614a20565b90506143c16012600a615446565b81116143cd57806143d9565b6143d96012600a615446565b90506143f2826080015182613d9490919063ffffffff16565b6143fc9088615566565b965061441c8260a0015183602001518d6144169190615c72565b90613d94565b6144269087615566565b8251600090815260156020526040902091909155945061449c565b80602001518a101561449c5761446b8a82602001516144609190615c72565b60c083015190613d94565b614475908a615566565b985061448f8160e001518b83602001516144169190615c72565b6144999085615566565b93505b506144a68161552d565b9050614267565b5060075460009081906001600160a01b0316635d6e344d876144cf8888615566565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925260248201526044016040805180830381600087803b15801561452457600080fd5b505af1158015614538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061455c9190615ba3565b60045491935091506001600160a01b03166366c15ceb61457c848d613d94565b6145869084615566565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152602481018a9052604481018c9052606481018b9052608401600060405180830381600087803b1580156145ec57600080fd5b505af1158015614600573d6000803e3d6000fd5b50508c51604080518e8152602081018e90529081018c9052606081018b9052608081018a905260a0810189905260c081018890529092507fdb2372d9a91045fa42195170e972ab572d182278c275fbb277fed93ac5ddda82915060e00160405180910390a25050505050505050505050565b608083015161468057505050565b60008360600151600481111561469857614698615499565b14156146fd576004805460808501516040517f79cfc4f70000000000000000000000000000000000000000000000000000000081529283015233602483015260448201849052606482018390526001600160a01b0316906379cfc4f7906084016137a2565b60018360600151600481111561471557614715615499565b14156147945760045460c084015160808501516001600160a01b03909216916332067e0d916147449190613d94565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b168152600481019190915233602482015260448101859052606481018490526084016137a2565b6002836060015160048111156147ac576147ac615499565b14156147ce57600454613e989033906001600160a01b0316613e938486615c72565b6007546004546001600160a01b0391821691635318b30791166147f18486615c72565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561484f57600080fd5b505af1158015614863573d6000803e3d6000fd5b50506007546040517f5318b307000000000000000000000000000000000000000000000000000000008152306004820152602481018590526001600160a01b039091169250635318b30791506044016137a2565b6009546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd90606401602060405180830381600087803b15801561492657600080fd5b505af115801561493a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061495e9190615b36565b612cee576040517f0f7ad8ce0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03808516602483015283166044820152606481018290526084016105a3565b600080821215613b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f73697469766560448201526064016105a3565b600081614a2f6012600a615446565b613dac9085615ea2565b60408051610120810182526000808252602082018190529091820190815260200160008152602001600081526020016000815260200160008152602001614aaf6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b60405180610160016040528060008152602001600081526020016000815260200160008152602001614b416040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001614b8e60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715614c0957614c09614bb7565b60405290565b604051610160810167ffffffffffffffff81118282101715614c0957614c09614bb7565b60058110614c4057600080fd5b50565b6000610100808385031215614c5757600080fd5b6040519081019067ffffffffffffffff82118183101715614c7a57614c7a614bb7565b8160405283358152602084013560208201526040840135604082015260608401359150614ca682614c33565b8160608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152809250505092915050565b600080600060608486031215614cf457600080fd5b505081359360208301359350604090920135919050565b6001600160a01b0381168114614c4057600080fd5b600060808284031215614d3257600080fd5b6040516080810181811067ffffffffffffffff82111715614d5557614d55614bb7565b604052823581526020830135614d6a81614d0b565b6020820152604083810135908201526060928301359281019290925250919050565b600060208284031215614d9e57600080fd5b8135612fdc81614d0b565b600060208284031215614dbb57600080fd5b5035919050565b600060a08301825184526020808401518186015260408401516040860152606084015115156060860152608084015160a0608087015282815180855260c0880191508383019450600092505b80831015614e2e5784518252938301936001929092019190830190614e0e565b509695505050505050565b602081526000613db66020830184614dc2565b60008060408385031215614e5f57600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b83811015614efe57614eea878351805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b610120969096019590820190600101614e82565b509495945050505050565b600081518084526020808501945080840160005b83811015614efe57815187529582019590820190600101614f1d565b608081526000614f4c6080830187614dc2565b8281036020840152614f5e8187614e6e565b90508281036040840152614f728186614f09565b91505082606083015295945050505050565b600082601f830112614f9557600080fd5b8135602067ffffffffffffffff80831115614fb257614fb2614bb7565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108482111715614ff557614ff5614bb7565b60405293845285810183019383810192508785111561501357600080fd5b83870191505b8482101561503257813583529183019190830190615019565b979650505050505050565b8015158114614c4057600080fd5b600080600080600060a0868803121561506357600080fd5b8535945060208601359350604086013567ffffffffffffffff8082111561508957600080fd5b61509589838a01614f84565b945060608801359150808211156150ab57600080fd5b506150b888828901614f84565b92505060808601356150c98161503d565b809150509295509295909350565b815181526020808301516001600160a01b031690820152604080830151908201526060808301519082015260808101613db9565b600080600080600080600080610100898b03121561512857600080fd5b883561513381614d0b565b9750602089013561514381614d0b565b9650604089013561515381614d0b565b9550606089013561516381614d0b565b9450608089013561517381614d0b565b935060a089013561518381614d0b565b925060c089013561519381614d0b565b915060e08901356151a381614d0b565b809150509295985092959890939650565b602081526000613db66020830184614f09565b600080604083850312156151da57600080fd5b8235915060208301356151ec81614d0b565b809150509250929050565b6101208101613db98284805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b6000806040838503121561526e57600080fd5b8235915060208301356151ec8161503d565b60006101406152e48386805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b8061012084015261114181840185614dc2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b8085111561537f57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115615365576153656152f7565b8085161561537257918102915b93841c939080029061532b565b509250929050565b60008261539657506001613db9565b816153a357506000613db9565b81600181146153b957600281146153c3576153df565b6001915050613db9565b60ff8411156153d4576153d46152f7565b50506001821b613db9565b5060208310610133831016604e8410600b8410161715615402575081810a613db9565b61540c8383615326565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561543e5761543e6152f7565b029392505050565b6000613db68383615387565b6001600160a01b038316815260a08101612fdc6020830184805182526001600160a01b03602082015116602083015260408101516040830152606081015160608301525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110614c4057614c40615499565b6001600160a01b0383168152604081016154f1836154c8565b8260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561555f5761555f6152f7565b5060010190565b60008219821115615579576155796152f7565b500190565b60408152600060e082018454604084015260018086015460608501526002860154608085015260ff600387015416151560a08501526004860160a060c086015282815480855261010087019150826000526020945084600020925060005b818110156155f75783548352928401929185019184016155dc565b50508581038487015261560a8188614e6e565b98975050505050505050565b805161562181614d0b565b919050565b600060e0828403121561563857600080fd5b615640614be6565b8251815260208301516020820152604083015161565c81614c33565b80604083015250606083015160608201526080830151608082015260a08301516006811061568957600080fd5b60a082015261569a60c08401615616565b60c08201529392505050565b600381106156b6576156b6615499565b9052565b6156b6816154c8565b80511515825260208101511515602083015260408101516156e760408401826156a6565b5060608101516156fa60608401826156ba565b506080810151608083015260a081015160a083015260c081015160c083015260e081015161576060e0840182805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b50610100015180516101a083015260208101516101c083015260408101516101e083015260608101516102008301526080015161022090910152565b83815261028081016157b160208301856156c3565b82610260830152949350505050565b600060c082840312156157d257600080fd5b60405160c0810181811067ffffffffffffffff821117156157f5576157f5614bb7565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201525092915050565b600060c0828403121561584c57600080fd5b613db683836157c0565b6001600160a01b038581168252841660208201526101208101615878846154c8565b8360408301526111416060830184805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600081518084526020808501945080840160005b83811015614efe5781518051885283810151848901526040808201519089015260608082015190890152608080820151615945828b0182805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b505060a08101516101406159a4818b0183805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60c08301516102408b015260e08301516102608b01526101008301516102808b01526101208301516102a08b0152909101516102c0890152506102e090960195908201906001016158d4565b600061028086518352602087015160208401526040870151615a1560408501826156ba565b506060870151615a2860608501826156a6565b506080870151608084015260a087015160a084015260c0870151615a5060c085018215159052565b5060e087015160e084015261010080880151818501525061012080880151818501525080610140840152615a86818401876158c0565b85516001600160a01b0390811661016086015260208701511661018085015260408601516101a085015260608601516101c085015260808601516101e085015260a086015161020085015260c086015161022085015260e08601516102408501529150615af09050565b8261026083015295945050505050565b600060208284031215615b1257600080fd5b8151612fdc81614c33565b600060208284031215615b2f57600080fd5b5051919050565b600060208284031215615b4857600080fd5b8151612fdc8161503d565b6103008101615b62828a6156c3565b876102408301526001600160a01b03871661026083015285610280830152846102a0830152836102c08301528215156102e083015298975050505050505050565b60008060408385031215615bb657600080fd5b505080516020909101519092909150565b600060a08284031215615bd957600080fd5b60405160a0810181811067ffffffffffffffff82111715615bfc57615bfc614bb7565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600082615c6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015615c8457615c846152f7565b500390565b8454815260018501546020820152600285015460408201526003850154606082015260048501546080820152600585015460a0820152600685015460c0820152600785015460e082015260088501546101008201526103a08101615cf16101208301866156c3565b610360820193909352610380015292915050565b6000610100808385031215615d1957600080fd5b6040519081019067ffffffffffffffff82118183101715615d3c57615d3c614bb7565b81604052809250835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152505092915050565b60006102e08284031215615da857600080fd5b615db0614c0f565b82518152602083015160208201526040830151604082015260608301516060820152615ddf84608085016157c0565b6080820152610140615df385828601615d05565b60a083015261024084015160c083015261026084015160e08301526102808401516101008301526102a08401516101208301526102c0909301519281019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60007f8000000000000000000000000000000000000000000000000000000000000000821415615e9b57615e9b6152f7565b5060000390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615eda57615eda6152f7565b500290565b83815260e08101615f1e602083018580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260c0830152949350505050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615615f6657615f666152f7565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615615f9a57615f9a6152f7565b5050019056fea2646970667358221220b69760876b0e60d902345392e40355973e4884d817c1215db8c23a50d36b928f64736f6c63430008090033";

type OptionMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarket__factory extends ContractFactory {
  constructor(...args: OptionMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptionMarket> {
    return super.deploy(overrides || {}) as Promise<OptionMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptionMarket {
    return super.attach(address) as OptionMarket;
  }
  override connect(signer: Signer): OptionMarket__factory {
    return super.connect(signer) as OptionMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketInterface {
    return new utils.Interface(_abi) as OptionMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarket {
    return new Contract(address, _abi, signerOrProvider) as OptionMarket;
  }
}
