/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IOptionMarketPricer,
  IOptionMarketPricerInterface,
} from "../../../../../@lyrafinance/protocol/contracts/interfaces/IOptionMarketPricer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "int256",
        name: "strikeCallDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "minDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "maxDelta",
        type: "int256",
      },
    ],
    name: "ForceCloseDeltaOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isBuy",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "newSkew",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSkew",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSkew",
        type: "uint256",
      },
    ],
    name: "ForceCloseSkewOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "optionPriceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee1xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee2xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee1xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee2xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "standardSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skewAdjustmentFactor",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.PricingParameters",
        name: "pricingParams",
        type: "tuple",
      },
    ],
    name: "InvalidPricingParameters",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "minDelta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minForceCloseDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "tradingCutoff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBaseIV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBaseIV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "absMinSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "absMaxSkew",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "capSkewsToAbs",
            type: "bool",
          },
        ],
        internalType: "struct IOptionMarketPricer.TradeLimitParameters",
        name: "tradeLimitParams",
        type: "tuple",
      },
    ],
    name: "InvalidTradeLimitParameters",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
    ],
    name: "OnlyOptionMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "int256",
        name: "strikeCallDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "minDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "maxDelta",
        type: "int256",
      },
    ],
    name: "TradeDeltaOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tradingCutoff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boardExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
    ],
    name: "TradingCutoffReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isBuy",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "vol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.VolComponents",
        name: "currentVol",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "vol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.VolComponents",
        name: "newVol",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "vol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.VolComponents",
        name: "tradeBounds",
        type: "tuple",
      },
    ],
    name: "VolSkewOrBaseIvOutsideOfTradingBounds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "optionPriceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee1xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee2xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee1xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee2xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "standardSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skewAdjustmentFactor",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IOptionMarketPricer.PricingParameters",
        name: "pricingParams",
        type: "tuple",
      },
    ],
    name: "PricingParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "minDelta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minForceCloseDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "tradingCutoff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBaseIV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBaseIV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "absMinSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "absMaxSkew",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "capSkewsToAbs",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IOptionMarketPricer.TradeLimitParameters",
        name: "tradeLimitParams",
        type: "tuple",
      },
    ],
    name: "TradeLimitParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "defaultVarianceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forceCloseVarianceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skewAdjustmentCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "referenceSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticSkewAdjustment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticVega",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ivVarianceCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticIvVariance",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IOptionMarketPricer.VarianceFeeParameters",
        name: "varianceFeeParams",
        type: "tuple",
      },
    ],
    name: "VarianceFeeParametersSet",
    type: "event",
  },
  {
    inputs: [],
    name: "getPricingParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "optionPriceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee1xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee2xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee1xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee2xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "standardSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skewAdjustmentFactor",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.PricingParameters",
        name: "pricingParameters",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pointA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pointB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "coefficient",
        type: "uint256",
      },
    ],
    name: "getTimeWeightedFee",
    outputs: [
      {
        internalType: "uint256",
        name: "timeWeightedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTradeLimitParams",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "minDelta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minForceCloseDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "tradingCutoff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBaseIV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBaseIV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "absMinSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "absMaxSkew",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "capSkewsToAbs",
            type: "bool",
          },
        ],
        internalType: "struct IOptionMarketPricer.TradeLimitParameters",
        name: "tradeLimitParameters",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "enum IOptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "enum IOptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct ILiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct ISynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct IOptionMarket.TradeParameters",
        name: "trade",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "optionPrice",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "preTradeAmmNetStdVega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "postTradeAmmNetStdVega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "callDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ivVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vega",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionGreekCache.TradePricing",
        name: "pricing",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "newBaseIv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newSkew",
        type: "uint256",
      },
    ],
    name: "getTradeResult",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "preTradeAmmNetStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "postTradeAmmNetStdVega",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "vegaUtil",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "volTraded",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vegaUtilFee",
                type: "uint256",
              },
            ],
            internalType: "struct IOptionMarketPricer.VegaUtilFeeComponents",
            name: "vegaUtilFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "varianceFeeCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vega",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vegaCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skewCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ivVariance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ivVarianceCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "varianceFee",
                type: "uint256",
              },
            ],
            internalType: "struct IOptionMarketPricer.VarianceFeeComponents",
            name: "varianceFee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newBaseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newSkew",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.TradeResult",
        name: "tradeResult",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "enum IOptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "enum IOptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct ILiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct ISynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct IOptionMarket.TradeParameters",
        name: "trade",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "optionPrice",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "preTradeAmmNetStdVega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "postTradeAmmNetStdVega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "callDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ivVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vega",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionGreekCache.TradePricing",
        name: "pricing",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "getVarianceFee",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "varianceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vega",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skewCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ivVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ivVarianceCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "varianceFee",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.VarianceFeeComponents",
        name: "varianceFeeComponents",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVarianceFeeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "defaultVarianceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forceCloseVarianceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skewAdjustmentCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "referenceSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticSkewAdjustment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticVega",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ivVarianceCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticIvVariance",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.VarianceFeeParameters",
        name: "varianceFeeParameters",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "enum IOptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "enum IOptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct ILiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct ISynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct IOptionMarket.TradeParameters",
        name: "trade",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "optionPrice",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "preTradeAmmNetStdVega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "postTradeAmmNetStdVega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "callDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ivVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vega",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionGreekCache.TradePricing",
        name: "pricing",
        type: "tuple",
      },
    ],
    name: "getVegaUtilFee",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "preTradeAmmNetStdVega",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "postTradeAmmNetStdVega",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "vegaUtil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "NAV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaUtilFee",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.VegaUtilFeeComponents",
        name: "vegaUtilFeeComponents",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "enum IOptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "enum IOptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct ILiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct ISynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct IOptionMarket.TradeParameters",
        name: "trade",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "boardBaseIv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikeSkew",
        type: "uint256",
      },
    ],
    name: "ivImpactForTrade",
    outputs: [
      {
        internalType: "uint256",
        name: "newBaseIv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newSkew",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricingParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "optionPriceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee1xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee2xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee1xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee2xPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "standardSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skewAdjustmentFactor",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.PricingParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeLimitParams",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "minDelta",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minForceCloseDelta",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "tradingCutoff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBaseIV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBaseIV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVol",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "absMinSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "absMaxSkew",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "capSkewsToAbs",
            type: "bool",
          },
        ],
        internalType: "struct IOptionMarketPricer.TradeLimitParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "varianceFeeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "defaultVarianceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forceCloseVarianceFeeCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skewAdjustmentCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "referenceSkew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticSkewAdjustment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vegaCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticVega",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ivVarianceCoefficient",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumStaticIvVariance",
            type: "uint256",
          },
        ],
        internalType: "struct IOptionMarketPricer.VarianceFeeParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IOptionMarketPricer__factory {
  static readonly abi = _abi;
  static createInterface(): IOptionMarketPricerInterface {
    return new utils.Interface(_abi) as IOptionMarketPricerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOptionMarketPricer {
    return new Contract(address, _abi, signerOrProvider) as IOptionMarketPricer;
  }
}
