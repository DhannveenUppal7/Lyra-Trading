/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SynthetixAdapter,
  SynthetixAdapterInterface,
} from "../../../../@lyrafinance/protocol/contracts/SynthetixAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
    ],
    name: "AllMarketsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuoteRequested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseToSpend",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "quoteKey",
        type: "bytes32",
      },
    ],
    name: "BaseQuoteExchangeExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardAddress",
        type: "address",
      },
    ],
    name: "InvalidRewardAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
    ],
    name: "MarketIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBaseRequested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteToSpend",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "quoteKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
    ],
    name: "QuoteBaseExchangeExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "invalid",
        type: "bool",
      },
    ],
    name: "RateIsInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "fromKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "toKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountSwapped",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountReceived",
        type: "uint256",
      },
    ],
    name: "ReceivedZeroFromExchange",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAddressResolver",
        name: "addressResolver",
        type: "address",
      },
    ],
    name: "AddressResolverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    name: "BaseSwappedForQuote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "GlobalPausedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "quoteKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "trackingCode",
        type: "bytes32",
      },
    ],
    name: "GlobalsSetForContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "MarketPausedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    name: "QuoteSwappedForBase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISynthetix",
        name: "synthetix",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IExchanger",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IExchangeRates",
        name: "exchangeRates",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IDelegateApprovals",
        name: "delegateApprovals",
        type: "address",
      },
    ],
    name: "SynthetixAddressesUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addressResolver",
    outputs: [
      {
        internalType: "contract IAddressResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "baseKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delegateApprovals",
    outputs: [
      {
        internalType: "contract IDelegateApprovals",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "estimateExchangeToExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteNeeded",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
    ],
    name: "estimateExchangeToExactQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "baseNeeded",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "exchangeFromExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
    ],
    name: "exchangeFromExactQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRates",
    outputs: [
      {
        internalType: "contract IExchangeRates",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "exchangeToExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteLimit",
        type: "uint256",
      },
    ],
    name: "exchangeToExactBaseWithLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
    ],
    name: "exchangeToExactQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "baseSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseLimit",
        type: "uint256",
      },
    ],
    name: "exchangeToExactQuoteWithLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "baseSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchanger",
    outputs: [
      {
        internalType: "contract IExchanger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
    ],
    name: "getExchangeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "to",
        type: "bytes32",
      },
    ],
    name: "getSpotPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "getSpotPriceForMarket",
    outputs: [
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isGlobalPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMarketPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoteKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
    ],
    name: "requireNotGlobalPaused",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressResolver",
        name: "_addressResolver",
        type: "address",
      },
    ],
    name: "setAddressResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isPaused",
        type: "bool",
      },
    ],
    name: "setGlobalPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_quoteKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_baseKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_rewardAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_trackingCode",
        type: "bytes32",
      },
    ],
    name: "setGlobalsForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isPaused",
        type: "bool",
      },
    ],
    name: "setMarketPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetix",
    outputs: [
      {
        internalType: "contract ISynthetix",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "trackingCode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSynthetixAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061224f806100206000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c806379ba50971161012a578063ae58cf0b116100bd578063cfbe7f441161008c578063f6c9988a11610071578063f6c9988a14610571578063fb4876d714610584578063fb585b11146105a457600080fd5b8063cfbe7f4414610509578063d667e5a41461055e57600080fd5b8063ae58cf0b14610496578063b714fa3e146104a9578063cc8e05c2146104c6578063cf7fb264146104e657600080fd5b806381d9f28e116100f957806381d9f28e146104255780638da5cb5b1461042d578063997985091461044d578063a88c32a21461048357600080fd5b806379ba5097146103ef5780637dbae648146103f75780637f8c2d611461040a5780638129fc1c1461041d57600080fd5b806341627ea7116101a2578063599c5d0811610171578063599c5d08146103965780636f3dfefa146103a9578063759b5225146103bc57806376cad834146103dc57600080fd5b806341627ea7146103235780634d12fca4146103365780634ffcd9df1461035657806353a47bb71461037657600080fd5b806327a008c1116101de57806327a008c1146102a85780633535c97b146102c8578063362e6c0b146102e857806339fcb4be1461031057600080fd5b806305a2ee2a14610210578063143023871461025f5780631627540c1461027457806323ebff4914610287575b600080fd5b60035461023590610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61027261026d366004611d40565b6105b7565b005b610272610282366004611d40565b610660565b61029a610295366004611d5d565b6106db565b604051908152602001610256565b61029a6102b6366004611d40565b60086020526000908152604090205481565b6007546102359073ffffffffffffffffffffffffffffffffffffffff1681565b6102fb6102f6366004611e20565b6106f0565b60408051928352602083019190915201610256565b6102fb61031e366004611e20565b61078e565b610272610331366004611d40565b61081c565b6005546102359073ffffffffffffffffffffffffffffffffffffffff1681565b6006546102359073ffffffffffffffffffffffffffffffffffffffff1681565b6001546102359073ffffffffffffffffffffffffffffffffffffffff1681565b6102fb6103a4366004611e66565b61087a565b61029a6103b7366004611ea6565b6108b5565b6004546102359073ffffffffffffffffffffffffffffffffffffffff1681565b6102726103ea366004611ecd565b6109ba565b610272610a21565b61029a610405366004611d40565b610b3e565b610272610418366004611eea565b610c52565b610272610ce8565b610272610e5f565b6000546102359073ffffffffffffffffffffffffffffffffffffffff1681565b61023561045b366004611d40565b600a6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102fb610491366004611e66565b61129a565b61029a6104a4366004611d5d565b6112c9565b6003546104b69060ff1681565b6040519015158152602001610256565b61029a6104d4366004611d40565b60096020526000908152604090205481565b6104b66104f4366004611d40565b60026020526000908152604090205460ff1681565b61051c610517366004611d40565b6112d5565b6040516102569190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b61027261056c366004611f23565b6115b7565b61029a61057f366004611f75565b6116ec565b61029a610592366004611d40565b600b6020526000908152604090205481565b61029a6105b2366004611f75565b611721565b6105bf611745565b600380547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff84160217905561060b610e5f565b60035460405161010090910473ffffffffffffffffffffffffffffffffffffffff1681527f77a0d41431d4d1c45459357535878e774682df27b236483a0be6f78000cbc5de906020015b60405180910390a150565b610668611745565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2290602001610655565b60006106e783836117c0565b90505b92915050565b60008060006106ff8786611721565b90508381111561077557865160408089015160208a015191517f6770c897000000000000000000000000000000000000000000000000000000008152306004820152602481018990526044810185905260648101889052608481019390935260a483015260c482015260e4015b60405180910390fd5b8061078087836117c0565b925092505094509492505050565b600080600061079d87866116ec565b90508381111561081157865160208801516040808a015190517f35cd65f3000000000000000000000000000000000000000000000000000000008152306004820152602481018990526044810185905260648101889052608481019390935260a483019190915260c482015260e40161076c565b8061078087836119b8565b60035460ff1615610877576040517f48bf9ae500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8216602482015260440161076c565b50565b6000806108a98585857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6106f0565b91509150935093915050565b6006546040517f0c71cd23000000000000000000000000000000000000000000000000000000008152600481018390526000918291829173ffffffffffffffffffffffffffffffffffffffff1690630c71cd2390602401604080518083038186803b15801561092357600080fd5b505afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190611fa0565b91509150816000148061096b5750805b156109b3576040517f473da07e00000000000000000000000000000000000000000000000000000000815230600482015260248101839052811515604482015260640161076c565b5092915050565b6109c2611745565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215159081179091556040519081527f9b05e78546abbee90b7c8730f27509b1582ccc91b8f65aa578222fcaaf258f7490602001610655565b60015473ffffffffffffffffffffffffffffffffffffffff163314610a9a576001546040517f96cf9ed800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff909116604482015260640161076c565b6000546001546040805173ffffffffffffffffffffffffffffffffffffffff93841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b600354600090829060ff1615610b9e576040517f48bf9ae500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8216602482015260440161076c565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604090205460ff1615610c1c576040517f0d7e318300000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8216602482015260440161076c565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020526040902054610c4b906108b5565b9392505050565b610c5a611745565b73ffffffffffffffffffffffffffffffffffffffff821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f29ddfbde5c0d97d0ef6ca59e6566ec1237d92cd97dd7a1aa76aefe14b70d524b910160405180910390a15050565b6001547501000000000000000000000000000000000000000000900460ff16610d2f5760015474010000000000000000000000000000000000000000900460ff1615610d33565b303b155b610dbf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161076c565b6001547501000000000000000000000000000000000000000000900460ff16158015610e2657600180547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff1675010100000000000000000000000000000000000000001790555b610e2e611ba6565b801561087757600180547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16905550565b6003546040517f21f8a7210000000000000000000000000000000000000000000000000000000081527f50726f787953796e746865746978000000000000000000000000000000000000600482015261010090910473ffffffffffffffffffffffffffffffffffffffff16906321f8a7219060240160206040518083038186803b158015610eec57600080fd5b505afa158015610f00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f249190611fc5565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283161781556003546040517f21f8a7210000000000000000000000000000000000000000000000000000000081527f45786368616e6765720000000000000000000000000000000000000000000000928101929092526101009004909116906321f8a7219060240160206040518083038186803b158015610fe057600080fd5b505afa158015610ff4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110189190611fc5565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283161790556003546040517f21f8a7210000000000000000000000000000000000000000000000000000000081527f45786368616e67655261746573000000000000000000000000000000000000006004820152610100909104909116906321f8a7219060240160206040518083038186803b1580156110d357600080fd5b505afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b9190611fc5565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283161790556003546040517f21f8a7210000000000000000000000000000000000000000000000000000000081527f44656c6567617465417070726f76616c730000000000000000000000000000006004820152610100909104909116906321f8a7219060240160206040518083038186803b1580156111c657600080fd5b505afa1580156111da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fe9190611fc5565b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92831690811790915560045460055460065460408051938616845291851660208401529093169281019290925260608201527fb00bf94a989859908b656894cc3628460456bec70528fde9a5d1451502d375b49060800160405180910390a1565b6000806108a98585857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61078e565b60006106e783836119b8565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152600354829060ff161561135d576040517f48bf9ae500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8216602482015260440161076c565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604090205460ff16156113db576040517f0d7e318300000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8216602482015260440161076c565b6040805160a081018252600080825273ffffffffffffffffffffffffffffffffffffffff86168082526008602090815284832054818501529082526009905282812054928201839052606082018190526080820152925061143b906108b5565b8252600554602083015160408085015190517f1a5c60950000000000000000000000000000000000000000000000000000000081526004810192909252602482015273ffffffffffffffffffffffffffffffffffffffff90911690631a5c60959060440160206040518083038186803b1580156114b757600080fd5b505afa1580156114cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ef9190611fe2565b6060830152600554604080840151602085015191517f1a5c609500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90931692631a5c60959261155c9291600401918252602082015260400190565b60206040518083038186803b15801561157457600080fd5b505afa158015611588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ac9190611fe2565b608083015250919050565b6115bf611745565b73ffffffffffffffffffffffffffffffffffffffff821661162a576040517f4322cea100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316602482015260440161076c565b73ffffffffffffffffffffffffffffffffffffffff858116600081815260086020908152604080832089905560098252808320889055600a825280832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169588169586179055600b82529182902085905581518881529081018790529081019290925260608201839052907f1ea3fec1ea8c1fa60c04ec062e29b29fba18dab76abdd9ac37c9e78639fa3a019060800160405180910390a25050505050565b815160608301516000916106e79161171b9061170a6012600a61214a565b6117149190612156565b8590611c7d565b90611c95565b815160808301516000916106e79161173f9061170a6012600a61214a565b90611c7d565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117be576000546040517f1abc2f9800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff909116604482015260640161076c565b565b6000816117cf575060006106ea565b6004805473ffffffffffffffffffffffffffffffffffffffff8581166000908152600960209081526040808320546008835281842054600a845282852054600b909452938290205491517f91e56b68000000000000000000000000000000000000000000000000000000008152339781019790975260248701526044860188905260648601929092528216608485015260a484015216906391e56b689060c401602060405180830381600087803b15801561188957600080fd5b505af115801561189d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c19190611fe2565b90506402540be400821180156118d5575080155b1561195e5773ffffffffffffffffffffffffffffffffffffffff83166000908152600960209081526040808320546008909252918290205491517fa3d2806000000000000000000000000000000000000000000000000000000000815230600482015260248101919091526044810191909152606481018390526084810182905260a40161076c565b6040805183815260208101839052339173ffffffffffffffffffffffffffffffffffffffff8616917f6821d7fdba33c25477cb96e3e21d4b5c7e6ac1b692e363ac18472a8c53d084b391015b60405180910390a392915050565b6000816119c7575060006106ea565b6004805473ffffffffffffffffffffffffffffffffffffffff8581166000908152600860209081526040808320546009835281842054600a845282852054600b909452938290205491517f91e56b68000000000000000000000000000000000000000000000000000000008152339781019790975260248701526044860188905260648601929092528216608485015260a484015216906391e56b689060c401602060405180830381600087803b158015611a8157600080fd5b505af1158015611a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab99190611fe2565b90506402540be40082118015611acd575080155b15611b565773ffffffffffffffffffffffffffffffffffffffff83166000908152600860209081526040808320546009909252918290205491517fa3d2806000000000000000000000000000000000000000000000000000000000815230600482015260248101919091526044810191909152606481018390526084810182905260a40161076c565b6040805183815260208101839052339173ffffffffffffffffffffffffffffffffffffffff8616917f70f50ab67b9243e12fad4429b7610619e14e835e65e5e1949cda40195907fe4291016119aa565b6001547501000000000000000000000000000000000000000000900460ff16611c51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161076c565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055565b60006106e78383611c906012600a61214a565b611cad565b60006106e78383611ca86012600a61214a565b611d06565b60008083611cbc84600a61216d565b611cc6908761216d565b611cd091906121d9565b90506005611cdf600a836121ed565b10611cf257611cef600a82612201565b90505b611cfd600a826121d9565b95945050505050565b600080611d14600a846121d9565b611cc6858761216d565b73ffffffffffffffffffffffffffffffffffffffff8116811461087757600080fd5b600060208284031215611d5257600080fd5b8135610c4b81611d1e565b60008060408385031215611d7057600080fd5b8235611d7b81611d1e565b946020939093013593505050565b600060a08284031215611d9b57600080fd5b60405160a0810181811067ffffffffffffffff82111715611de5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b6000806000806101008587031215611e3757600080fd5b611e418686611d89565b935060a0850135611e5181611d1e565b939693955050505060c08201359160e0013590565b600080600060e08486031215611e7b57600080fd5b611e858585611d89565b925060a0840135611e9581611d1e565b9295929450505060c0919091013590565b600060208284031215611eb857600080fd5b5035919050565b801515811461087757600080fd5b600060208284031215611edf57600080fd5b8135610c4b81611ebf565b60008060408385031215611efd57600080fd5b8235611f0881611d1e565b91506020830135611f1881611ebf565b809150509250929050565b600080600080600060a08688031215611f3b57600080fd5b8535611f4681611d1e565b945060208601359350604086013592506060860135611f6481611d1e565b949793965091946080013592915050565b60008060c08385031215611f8857600080fd5b611f928484611d89565b9460a0939093013593505050565b60008060408385031215611fb357600080fd5b825191506020830151611f1881611ebf565b600060208284031215611fd757600080fd5b8151610c4b81611d1e565b600060208284031215611ff457600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b8085111561208357817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561206957612069611ffb565b8085161561207657918102915b93841c939080029061202f565b509250929050565b60008261209a575060016106ea565b816120a7575060006106ea565b81600181146120bd57600281146120c7576120e3565b60019150506106ea565b60ff8411156120d8576120d8611ffb565b50506001821b6106ea565b5060208310610133831016604e8410600b8410161715612106575081810a6106ea565b612110838361202a565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561214257612142611ffb565b029392505050565b60006106e7838361208b565b60008282101561216857612168611ffb565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156121a5576121a5611ffb565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826121e8576121e86121aa565b500490565b6000826121fc576121fc6121aa565b500690565b6000821982111561221457612214611ffb565b50019056fea2646970667358221220baa3b8803d29aec1466bf755359c7218db669f5281c0f41d6d6b0ec3959551ef64736f6c63430008090033";

type SynthetixAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SynthetixAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SynthetixAdapter__factory extends ContractFactory {
  constructor(...args: SynthetixAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SynthetixAdapter> {
    return super.deploy(overrides || {}) as Promise<SynthetixAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SynthetixAdapter {
    return super.attach(address) as SynthetixAdapter;
  }
  override connect(signer: Signer): SynthetixAdapter__factory {
    return super.connect(signer) as SynthetixAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SynthetixAdapterInterface {
    return new utils.Interface(_abi) as SynthetixAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SynthetixAdapter {
    return new Contract(address, _abi, signerOrProvider) as SynthetixAdapter;
  }
}
