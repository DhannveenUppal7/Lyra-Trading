/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  TestCurve,
  TestCurveInterface,
} from "../../../../../@lyrafinance/protocol/contracts/test-helpers/TestCurve";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    name: "curveStables",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_from",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_to",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expected",
        type: "uint256",
      },
    ],
    name: "exchange_underlying",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expected",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "exchange_with_best_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "get_best_rate",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1610f148061006e6000396000f3fe6080604052600436106100b15760003560e01c806379ba5097116100695780639f69a6a61161004e5780639f69a6a614610220578063a6417ed614610241578063a8734f0b1461025457600080fd5b806379ba5097146101de5780638da5cb5b146101f357600080fd5b80634e21df751161009a5780634e21df75146100f857806353a47bb714610149578063570a9e161461019b57600080fd5b80631627540c146100b65780632bdb7097146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d1366004610cd8565b610281565b005b3480156100e457600080fd5b506100d66100f3366004610cfa565b610302565b34801561010457600080fd5b50610118610113366004610d24565b610333565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b34801561015557600080fd5b506001546101769073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610140565b3480156101a757600080fd5b506101766101b6366004610d72565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156101ea57600080fd5b506100d661038a565b3480156101ff57600080fd5b506000546101769073ffffffffffffffffffffffffffffffffffffffff1681565b61023361022e366004610d8d565b6104ac565b604051908152602001610140565b61023361024f366004610de4565b610854565b34801561026057600080fd5b5061023361026f366004610cd8565b60026020526000908152604090205481565b610289610c34565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b61030a610c34565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260026020526040902055565b73ffffffffffffffffffffffffffffffffffffffff80841660009081526002602052604080822054928516825281205490918291816103728287610e26565b61037c9190610e8a565b309890975095505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610408576001546040517f96cf9ed800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff90911660448201526064015b60405180910390fd5b6000546001546040805173ffffffffffffffffffffffffffffffffffffffff93841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b6000858573ffffffffffffffffffffffffffffffffffffffff8216158015906104ea575073ffffffffffffffffffffffffffffffffffffffff811615155b610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f746f6b656e20696e206f7220746f6b656e206f7574206973207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103ff565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152600091908416906370a082319060240160206040518083038186803b1580156105e157600080fd5b505afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106199190610ec5565b905086811015610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f7420656e6f75676820746f2065786368616e67650000000000000000000060448201526064016103ff565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015260248201899052841690639dc29fac90604401600060405180830381600087803b1580156106f557600080fd5b505af1158015610709573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff89811660009081526002602052604080822054928b16825290205481610748828b610e26565b6107529190610e8a565b9550878610156107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6e6f7420656e6f7567682065787065637465640000000000000000000000000060448201526064016103ff565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152602482018890528516906340c10f1990604401600060405180830381600087803b15801561082e57600080fd5b505af1158015610842573d6000803e3d6000fd5b50505050505050505095945050505050565b600f84810b600090815260036020526040808220549286900b8252812054909173ffffffffffffffffffffffffffffffffffffffff908116911681158015906108b2575073ffffffffffffffffffffffffffffffffffffffff811615155b61093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f746f6b656e20696e206f7220746f6b656e206f7574206973207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103ff565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b1580156109a657600080fd5b505afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de9190610ec5565b905085811015610a4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f7420656e6f75676820746f2065786368616e67650000000000000000000060448201526064016103ff565b6040517f9dc29fac0000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff841690639dc29fac90604401600060405180830381600087803b158015610ab857600080fd5b505af1158015610acc573d6000803e3d6000fd5b50505050600f88810b60009081526003602081815260408084205473ffffffffffffffffffffffffffffffffffffffff9081168552600280845282862054968e900b86529383528185205416845291905290205481610b2b828a610e26565b610b359190610e8a565b955086861015610ba1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6e6f7420656e6f7567682065787065637465640000000000000000000000000060448201526064016103ff565b6040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff8516906340c10f1990604401600060405180830381600087803b158015610c0f57600080fd5b505af1158015610c23573d6000803e3d6000fd5b505050505050505050949350505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610cad576000546040517f1abc2f9800000000000000000000000000000000000000000000000000000000815230600482015233602482015273ffffffffffffffffffffffffffffffffffffffff90911660448201526064016103ff565b565b803573ffffffffffffffffffffffffffffffffffffffff81168114610cd357600080fd5b919050565b600060208284031215610cea57600080fd5b610cf382610caf565b9392505050565b60008060408385031215610d0d57600080fd5b610d1683610caf565b946020939093013593505050565b600080600060608486031215610d3957600080fd5b610d4284610caf565b9250610d5060208501610caf565b9150604084013590509250925092565b8035600f81900b8114610cd357600080fd5b600060208284031215610d8457600080fd5b610cf382610d60565b600080600080600060a08688031215610da557600080fd5b610dae86610caf565b9450610dbc60208701610caf565b93506040860135925060608601359150610dd860808701610caf565b90509295509295909350565b60008060008060808587031215610dfa57600080fd5b610e0385610d60565b9350610e1160208601610d60565b93969395505050506040820135916060013590565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e85577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610ec0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610ed757600080fd5b505191905056fea26469706673582212208c148da26296e219ce617b386f0876a685dc77b40bf95e6dac17e7bdab9567da64736f6c63430008090033";

type TestCurveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestCurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestCurve__factory extends ContractFactory {
  constructor(...args: TestCurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestCurve> {
    return super.deploy(overrides || {}) as Promise<TestCurve>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestCurve {
    return super.attach(address) as TestCurve;
  }
  override connect(signer: Signer): TestCurve__factory {
    return super.connect(signer) as TestCurve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCurveInterface {
    return new utils.Interface(_abi) as TestCurveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCurve {
    return new Contract(address, _abi, signerOrProvider) as TestCurve;
  }
}
