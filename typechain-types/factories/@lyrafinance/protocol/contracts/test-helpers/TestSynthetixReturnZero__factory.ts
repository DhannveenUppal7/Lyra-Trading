/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  TestSynthetixReturnZero,
  TestSynthetixReturnZeroInterface,
} from "../../../../../@lyrafinance/protocol/contracts/test-helpers/TestSynthetixReturnZero";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "exchangeForAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sourceCurrencyKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "destinationCurrencyKey",
        type: "bytes32",
      },
    ],
    name: "Exchange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "contract ITestERC20",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "addBaseAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addressResolver",
    outputs: [
      {
        internalType: "contract IAddressResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "baseAssets",
    outputs: [
      {
        internalType: "contract ITestERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sourceCurrencyKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "destinationCurrencyKey",
        type: "bytes32",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "amountReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "exchangeForAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "sourceCurrencyKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "destinationCurrencyKey",
        type: "bytes32",
      },
    ],
    name: "exchangeOnBehalf",
    outputs: [
      {
        internalType: "uint256",
        name: "amountReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "exchangeForAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "sourceCurrencyKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "destinationCurrencyKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "exchangeOnBehalfWithTracking",
    outputs: [
      {
        internalType: "uint256",
        name: "amountReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "contract ITestERC20",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "contract IAddressResolver",
        name: "_addressResolver",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_returnZero",
        type: "bool",
      },
    ],
    name: "setReturnZero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005805461ffff1916905534801561001b57600080fd5b506113478061002b6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635b87280b116100815780639b3b051a1161005b5780639b3b051a1461022e578063c836fa0a14610241578063ee52a2f31461025457600080fd5b80635b87280b146101a15780637564912b146101d757806391e56b681461020d57600080fd5b8063184b9559116100b2578063184b955914610135578063216f194a1461014a57806345f38c7f1461018f57600080fd5b806305a2ee2a146100ce578063158ef93e14610118575b600080fd5b6001546100ee9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6005546101259060ff1681565b604051901515815260200161010f565b610148610143366004610ea7565b610267565b005b610148610158366004610f00565b60058054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b60055461012590610100900460ff1681565b6100ee6101af366004610f1d565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6100ee6101e5366004610f1d565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61022061021b366004610f36565b610368565b60405190815260200161010f565b61014861023c366004610f94565b6103e4565b61022061024f366004610fbb565b610545565b610220610262366004610ff6565b610d51565b60055460ff16156102d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064015b60405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600280549385169382169390931790925560018054919093169116178155600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b600554600090610100900460ff1615610383575060006103da565b6040805133815260208101889052908101869052606081018590527f21e60f3189350d5335ac262321d36256f31672072e541960c0993c0151c4a76b9060800160405180910390a16103d787878787610545565b90505b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332302063616e6e6f742068617665207a65726f2061646472657373000060448201526064016102d0565b73ffffffffffffffffffffffffffffffffffffffff81166104de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d61726b65742063616e6e6f742068617665207a65726f20616464726573730060448201526064016102d0565b600092835260036020908152604080852080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff96871617909155600490925290932080549093169116179055565b6001546040517f21f8a7210000000000000000000000000000000000000000000000000000000081527f44656c6567617465417070726f76616c73000000000000000000000000000000600482015260009182918291829173ffffffffffffffffffffffffffffffffffffffff909116906321f8a7219060240160206040518083038186803b1580156105d757600080fd5b505afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190611022565b6040517fd3fb5e3700000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8a81166024830152919091169063d3fb5e379060440160206040518083038186803b15801561067e57600080fd5b505afa158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b6919061103f565b61071c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e6f7420617070726f76656420746f20616374206f6e20626568616c6600000060448201526064016102d0565b867f735553440000000000000000000000000000000000000000000000000000000014156107e0576002546040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a8116600483015260248201899052670de0b6b3a7640000955090911690639dc29fac90604401600060405180830381600087803b1580156107c357600080fd5b505af11580156107d7573d6000803e3d6000fd5b50505050610a39565b60008781526004602052604090205473ffffffffffffffffffffffffffffffffffffffff168061086c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c696420736f757263652063757272656e6379206b6579000000000060448201526064016102d0565b600080546040517fcfbe7f4400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529091169063cfbe7f449060240160a06040518083038186803b1580156108d857600080fd5b505afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610910919061105c565b60008a81526003602052604090205490915073ffffffffffffffffffffffffffffffffffffffff168061099f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332302063616e6e6f742068617665207a65726f2061646472657373000060448201526064016102d0565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c81166004830152602482018b9052821690639dc29fac90604401600060405180830381600087803b158015610a0f57600080fd5b505af1158015610a23573d6000803e3d6000fd5b5050505081600001519550816080015194505050505b847f73555344000000000000000000000000000000000000000000000000000000001415610b1f576000610a6d8785610d81565b9050610a8b610a8484670de0b6b3a7640000611122565b8290610d81565b6002546040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c81166004830152602482018490529297509116906340c10f1990604401600060405180830381600087803b158015610b0157600080fd5b505af1158015610b15573d6000803e3d6000fd5b5050505050610d46565b60008581526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610bab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f696e76616c69642064657374696e6174696f6e2063757272656e6379206b657960448201526064016102d0565b600080546040517fcfbe7f4400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529091169063cfbe7f449060240160a06040518083038186803b158015610c1757600080fd5b505afa158015610c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4f919061105c565b6000888152600360205260409020548151945090915073ffffffffffffffffffffffffffffffffffffffff1684610c8857816060015194505b6000610c9e85610c988c8a610d81565b90610da2565b9050610cb5610a8487670de0b6b3a7640000611122565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8e8116600483015260248201839052919950908316906340c10f1990604401600060405180830381600087803b158015610d2957600080fd5b505af1158015610d3d573d6000803e3d6000fd5b50505050505050505b505050949350505050565b600554600090610100900460ff1615610d6c57506000610d7a565b610d77848484610dba565b90505b9392505050565b6000610d998383610d946012600a611259565b610e11565b90505b92915050565b6000610d998383610db56012600a611259565b610e69565b6040805133815260208101859052908101839052606081018290526000907f21e60f3189350d5335ac262321d36256f31672072e541960c0993c0151c4a76b9060800160405180910390a1610d7733858585610545565b600080610e1f600a84611294565b610e2985876112a8565b610e339190611294565b90506005610e42600a836112e5565b10610e5557610e52600a826112f9565b90505b610e60600a82611294565b95945050505050565b60008083610e7884600a6112a8565b610e2990876112a8565b73ffffffffffffffffffffffffffffffffffffffff81168114610ea457600080fd5b50565b600080600060608486031215610ebc57600080fd5b8335610ec781610e82565b92506020840135610ed781610e82565b91506040840135610ee781610e82565b809150509250925092565b8015158114610ea457600080fd5b600060208284031215610f1257600080fd5b8135610d7a81610ef2565b600060208284031215610f2f57600080fd5b5035919050565b60008060008060008060c08789031215610f4f57600080fd5b8635610f5a81610e82565b95506020870135945060408701359350606087013592506080870135610f7f81610e82565b8092505060a087013590509295509295509295565b600080600060608486031215610fa957600080fd5b833592506020840135610ed781610e82565b60008060008060808587031215610fd157600080fd5b8435610fdc81610e82565b966020860135965060408601359560600135945092505050565b60008060006060848603121561100b57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561103457600080fd5b8151610d7a81610e82565b60006020828403121561105157600080fd5b8151610d7a81610ef2565b600060a0828403121561106e57600080fd5b60405160a0810181811067ffffffffffffffff821117156110b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611134576111346110f3565b500390565b600181815b8085111561119257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611178576111786110f3565b8085161561118557918102915b93841c939080029061113e565b509250929050565b6000826111a957506001610d9c565b816111b657506000610d9c565b81600181146111cc57600281146111d6576111f2565b6001915050610d9c565b60ff8411156111e7576111e76110f3565b50506001821b610d9c565b5060208310610133831016604e8410600b8410161715611215575081810a610d9c565b61121f8383611139565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611251576112516110f3565b029392505050565b6000610d99838361119a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826112a3576112a3611265565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112e0576112e06110f3565b500290565b6000826112f4576112f4611265565b500690565b6000821982111561130c5761130c6110f3565b50019056fea2646970667358221220cd543a6868cbe2c967f72537d2955fcb28829b20c8e2c458a3c12cd9a928de0564736f6c63430008090033";

type TestSynthetixReturnZeroConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestSynthetixReturnZeroConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestSynthetixReturnZero__factory extends ContractFactory {
  constructor(...args: TestSynthetixReturnZeroConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestSynthetixReturnZero> {
    return super.deploy(overrides || {}) as Promise<TestSynthetixReturnZero>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestSynthetixReturnZero {
    return super.attach(address) as TestSynthetixReturnZero;
  }
  override connect(signer: Signer): TestSynthetixReturnZero__factory {
    return super.connect(signer) as TestSynthetixReturnZero__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestSynthetixReturnZeroInterface {
    return new utils.Interface(_abi) as TestSynthetixReturnZeroInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestSynthetixReturnZero {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestSynthetixReturnZero;
  }
}
