/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OptionToken,
  OptionTokenInterface,
} from "../../../../@lyrafinance/protocol/contracts/OptionToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "invalidPositionId",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "positionInactive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isShort",
        type: "bool",
      },
    ],
    name: "AddingCollateralToInvalidPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    name: "AdjustmentResultsInMinimumCollateralNotBeingMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
    ],
    name: "AlreadyInitialised",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "invalidPositionId",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "positionInactive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "strikeMismatch",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "optionTypeMismatch",
        type: "bool",
      },
    ],
    name: "CannotAdjustInvalidPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
    ],
    name: "CannotClosePositionZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
    ],
    name: "CannotOpenZeroAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setCollateralTo",
        type: "uint256",
      },
    ],
    name: "FullyClosingWithNonZeroSetCollateral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "penaltyRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFeeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFeeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLiquidationFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionToken.PartialCollateralParameters",
        name: "partialCollatParams",
        type: "tuple",
      },
    ],
    name: "InvalidPartialCollateralParameters",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "originalPositionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "splitAmount",
        type: "uint256",
      },
    ],
    name: "InvalidSplitAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "MergingUnapprovedPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
    ],
    name: "MustMergeTwoOrMorePositions",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
    ],
    name: "OnlyOptionMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwnerCanAdjustPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "shortCollateral",
        type: "address",
      },
    ],
    name: "OnlyShortCollateral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition",
        name: "firstPosition",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition",
        name: "nextPosition",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "ownerMismatch",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "strikeMismatch",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "optionTypeMismatch",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "duplicatePositionId",
        type: "bool",
      },
    ],
    name: "PositionMismatchWhenMerging",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    name: "PositionNotLiquidatable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    name: "ResultingNewPositionLiquidatable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    name: "ResultingOriginalPositionLiquidatable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "SplittingUnapprovedPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "StrikeIsSettled",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "penaltyRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFeeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFeeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLiquidationFee",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionToken.PartialCollateralParameters",
        name: "partialCollateralParams",
        type: "tuple",
      },
    ],
    name: "PartialCollateralParamsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum OptionToken.PositionUpdatedType",
        name: "updatedType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct OptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PositionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "URI",
        type: "string",
      },
    ],
    name: "URISet",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountCollateral",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [
      {
        internalType: "enum OptionMarket.OptionType",
        name: "optionType",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "enum OptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct SynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct OptionMarket.TradeParameters",
        name: "trade",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setCollateralTo",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isOpen",
        type: "bool",
      },
    ],
    name: "adjustPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "pendingCollateral",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition",
        name: "position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    name: "canLiquidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gwavPremium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userPositionCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "convertedMinLiquidationFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "insolvencyMultiplier",
        type: "uint256",
      },
    ],
    name: "getLiquidationFees",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "returnCollateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpPremiums",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "insolventAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OptionToken.LiquidationFees",
        name: "liquidationFees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "getOptionPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "getOptionPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "getOwnerPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPartialCollatParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "penaltyRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFeeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFeeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLiquidationFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionToken.PartialCollateralParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "getPositionState",
    outputs: [
      {
        internalType: "enum OptionToken.PositionState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "getPositionWithOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct OptionToken.PositionWithOwner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "getPositionsWithOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct OptionToken.PositionWithOwner[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "_optionMarket",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "_greekCache",
        type: "address",
      },
      {
        internalType: "address",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "enum OptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct SynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct OptionMarket.TradeParameters",
        name: "trade",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "returnCollateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpPremiums",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "insolventAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OptionToken.LiquidationFees",
        name: "liquidationFees",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "merge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partialCollatParams",
    outputs: [
      {
        internalType: "uint256",
        name: "penaltyRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidatorFeeRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "smFeeRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minLiquidationFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "enum OptionMarket.OptionType",
        name: "optionType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        internalType: "enum OptionToken.PositionState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "penaltyRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFeeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFeeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLiquidationFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionToken.PartialCollateralParameters",
        name: "_partialCollatParams",
        type: "tuple",
      },
    ],
    name: "setPartialCollateralParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "settlePositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newCollateral",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "split",
    outputs: [
      {
        internalType: "uint256",
        name: "newPositionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805460ff60a01b191681556012553480156200002157600080fd5b5060405162005af738038062005af7833981016040819052620000449162000244565b600080546001600160a01b031916339081178255604080519283526020830191909152839183917fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160016002558151620000b0906003906020850190620000d1565b508051620000c6906004906020840190620000d1565b5050505050620002eb565b828054620000df90620002ae565b90600052602060002090601f0160209004810192826200010357600085556200014e565b82601f106200011e57805160ff19168380011785556200014e565b828001600101855582156200014e579182015b828111156200014e57825182559160200191906001019062000131565b506200015c92915062000160565b5090565b5b808211156200015c576000815560010162000161565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019f57600080fd5b81516001600160401b0380821115620001bc57620001bc62000177565b604051601f8301601f19908116603f01168101908282118183101715620001e757620001e762000177565b816040528381526020925086838588010111156200020457600080fd5b600091505b8382101562000228578582018301518183018401529082019062000209565b838211156200023a5760008385830101525b9695505050505050565b600080604083850312156200025857600080fd5b82516001600160401b03808211156200027057600080fd5b6200027e868387016200018d565b935060208501519150808211156200029557600080fd5b50620002a4858286016200018d565b9150509250929050565b600181811c90821680620002c357607f821691505b60208210811415620002e557634e487b7160e01b600052602260045260246000fd5b50919050565b6157fc80620002fb6000396000f3fe608060405234801561001057600080fd5b50600436106102de5760003560e01c806370a0823111610186578063a22cb465116100e3578063ce1b378811610097578063e985e9c511610071578063e985e9c5146106ce578063eb29dc5e1461070a578063f22d8d9a1461073d57600080fd5b8063ce1b378814610695578063de62d842146106a8578063dfa13261146106bb57600080fd5b8063b757fd94116100c8578063b757fd941461064f578063b88d4fde1461066f578063c87b56dd1461068257600080fd5b8063a22cb4651461061c578063a8f35adf1461062f57600080fd5b80638e28fc9e1161013a57806395d89b411161011f57806395d89b411461059257806399fbab881461059a5780639b76157a146105f457600080fd5b80638e28fc9e1461056c578063945c760f1461057f57600080fd5b8063845e12591161016b578063845e125914610533578063886c3e10146105465780638da5cb5b1461055957600080fd5b806370a082311461051857806379ba50971461052b57600080fd5b806323b872dd1161023f57806352f11fbf116101f357806361b8ce8c116101cd57806361b8ce8c146104f45780636352211e146104fd5780636c0360eb1461051057600080fd5b806352f11fbf1461049657806353a47bb7146104ab5780635e2e6cbe146104be57600080fd5b80632f745c59116102245780632f745c591461045d57806342842e0e146104705780634f6ccce71461048357600080fd5b806323b872dd1461042a57806323d354771461043d57600080fd5b8063095ea7b31161029657806313ddc4011161027b57806313ddc401146103e55780631627540c1461040557806318160ddd1461041857600080fd5b8063095ea7b3146103735780630a302b201461038657600080fd5b806306552ff3116102c757806306552ff31461032057806306fdde0314610333578063081812fc1461034857600080fd5b806301ffc9a7146102e357806302fe53051461030b575b600080fd5b6102f66102f13660046145c0565b61075d565b60405190151581526020015b60405180910390f35b61031e61031936600461471e565b6107b9565b005b61031e61032e36600461477c565b610810565b61033b61091b565b604051610302919061484e565b61035b610356366004614861565b6109ad565b6040516001600160a01b039091168152602001610302565b61031e61038136600461487a565b610a53565b610399610394366004614a46565b610b85565b6040516103029190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b6103f86103f3366004614861565b610ec8565b6040516103029190614b18565b61031e610413366004614b26565b610f7b565b600b545b604051908152602001610302565b61031e610438366004614b43565b610fe9565b61045061044b366004614b84565b611070565b6040516103029190614c2a565b61041c61046b36600461487a565b6111d7565b61031e61047e366004614b43565b61127f565b61041c610491366004614861565b61129a565b61049e61133e565b6040516103029190614c78565b60015461035b906001600160a01b031681565b6013546014546015546016546104d49392919084565b604080519485526020850193909352918301526060820152608001610302565b61041c60125481565b61035b61050b366004614861565b611396565b61033b611421565b61041c610526366004614b26565b6114af565b61031e611549565b610450610541366004614b26565b611632565b6102f6610554366004614ca3565b61178b565b60005461035b906001600160a01b031681565b61031e61057a366004614b84565b611887565b61039961058d366004614d37565b611a27565b61033b611b5d565b6105e26105a8366004614861565b6011602052600090815260409020805460018201546002830154600384015460048501546005909501549394929360ff9283169391921686565b60405161030296959493929190614d69565b610607610602366004614da8565b611b6c565b60408051928352602083019190915201610302565b61031e61062a366004614e1c565b612202565b61064261063d366004614e51565b612211565b6040516103029190614e73565b61066261065d366004614b84565b6123df565b6040516103029190614edd565b61031e61067d366004614f1f565b612496565b61033b610690366004614861565b612524565b61041c6106a3366004614f9f565b61260c565b61031e6106b6366004614b84565b612bbc565b61031e6106c9366004614fd5565b61322e565b6102f66106dc36600461503b565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b610730610718366004614861565b60009081526011602052604090206005015460ff1690565b6040516103029190615074565b61075061074b366004614861565b61330d565b6040516103029190615082565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f780e9d630000000000000000000000000000000000000000000000000000000014806107b357506107b38261331e565b92915050565b6107c1613401565b80516107d4906017906020840190614444565b507fde63cc2d19581e57e158d078c2df83f9ab70addd6257f7f12bfecb21c06c9128601760405161080591906150e4565b60405180910390a150565b610818613401565b60015474010000000000000000000000000000000000000000900460ff1615610874576040517f161b906f0000000000000000000000000000000000000000000000000000000081523060048201526024015b60405180910390fd5b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055600d80546001600160a01b039586167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600e805494861694821694909417909355600f80549285169284169290921790915560108054919093169116179055565b60606003805461092a90615090565b80601f016020809104026020016040519081016040528092919081815260200182805461095690615090565b80156109a35780601f10610978576101008083540402835291602001916109a3565b820191906000526020600020905b81548152906001019060200180831161098657829003601f168201915b5050505050905090565b6000818152600560205260408120546001600160a01b0316610a375760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606482015260840161086b565b506000908152600760205260409020546001600160a01b031690565b6000610a5e82611396565b9050806001600160a01b0316836001600160a01b03161415610ae85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015260840161086b565b336001600160a01b0382161480610b045750610b0481336106dc565b610b765760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161086b565b610b808383613462565b505050565b610bbe6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600d546001600160a01b03163314610c1d57600d546040517f96a1986a0000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b03909116604482015260640161086b565b600084815260116020908152604091829020825160c0810184528154815260018201549281019290925260028101549092610cdc9291849183019060ff166004811115610c6c57610c6c614a7e565b6004811115610c7d57610c7d614a7e565b8152600382015460208201526004820154604082015260058083015460609092019160ff1690811115610cb257610cb2614a7e565b6005811115610cc357610cc3614a7e565b90525060a086015160c08701516101008801515161178b565b610d1e57610100840151516040517f1f0319a900000000000000000000000000000000000000000000000000000000815261086b9130918491906004016151f2565b6016546000610d2f6012600a61536d565b9050600286606001516004811115610d4957610d49614a7e565b1415610e3e57601054610100870151604080517ffb585b11000000000000000000000000000000000000000000000000000000008152825160048201526020830151602482015290820151604482015260608201516064820152608090910151608482015260a481018790526001600160a01b039091169063fb585b119060c40160206040518083038186803b158015610de257600080fd5b505afa158015610df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1a9190615379565b61010087015151601654919650610e3191906134e8565b6101008701515190925090505b60058301805460ff191660031790558254600890610e5b90611396565b6001600160a01b031684600001547ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c934668642604051610e9a929190615392565b60405180910390a4610eab8761350b565b610ebb8584600401548484611a27565b93505050505b9392505050565b610ed06144c4565b600082815260116020908152604091829020825160c081018452815481526001820154928101929092526002810154919290919083019060ff166004811115610f1b57610f1b614a7e565b6004811115610f2c57610f2c614a7e565b8152600382015460208201526004820154604082015260058083015460609092019160ff1690811115610f6157610f61614a7e565b6005811115610f7257610f72614a7e565b90525092915050565b610f83613401565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2290602001610805565b610ff333826135ca565b6110655760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161086b565b610b808383836136ce565b805160609060008167ffffffffffffffff811115611090576110906145dd565b6040519080825280602002602001820160405280156110c957816020015b6110b66144c4565b8152602001906001900390816110ae5790505b50905060005b828110156111cf57601160008683815181106110ed576110ed6153ad565b602002602001015181526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16600481111561114657611146614a7e565b600481111561115757611157614a7e565b8152600382015460208201526004820154604082015260058083015460609092019160ff169081111561118c5761118c614a7e565b600581111561119d5761119d614a7e565b815250508282815181106111b3576111b36153ad565b6020026020010181905250806111c8906153dc565b90506110cf565b509392505050565b60006111e2836114af565b82106112565760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161086b565b506001600160a01b03919091166000908152600960209081526040808320938352929052205490565b610b8083838360405180602001604052806000815250612496565b60006112a5600b5490565b82106113195760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161086b565b600b828154811061132c5761132c6153ad565b90600052602060002001549050919050565b6113696040518060800160405280600081526020016000815260200160008152602001600081525090565b50604080516080810182526013548152601454602082015260155491810191909152601654606082015290565b6000818152600560205260408120546001600160a01b0316806107b35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161086b565b6017805461142e90615090565b80601f016020809104026020016040519081016040528092919081815260200182805461145a90615090565b80156114a75780601f1061147c576101008083540402835291602001916114a7565b820191906000526020600020905b81548152906001019060200180831161148a57829003601f168201915b505050505081565b60006001600160a01b03821661152d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161086b565b506001600160a01b031660009081526006602052604090205490565b6001546001600160a01b031633146115a8576001546040517f96cf9ed80000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b03909116604482015260640161086b565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b03841617909155169055565b6060600061163f836114af565b905060008167ffffffffffffffff81111561165c5761165c6145dd565b60405190808252806020026020018201604052801561169557816020015b6116826144c4565b81526020019060019003908161167a5790505b50905060005b828110156111cf57601160006116b187846111d7565b81526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16600481111561170257611702614a7e565b600481111561171357611713614a7e565b8152600382015460208201526004820154604082015260058083015460609092019160ff169081111561174857611748614a7e565b600581111561175957611759614a7e565b8152505082828151811061176f5761176f6153ad565b602002602001018190525080611784906153dc565b905061169b565b600061179a85604001516138be565b6117a65750600061187f565b60018560a0015160058111156117be576117be614a7e565b146117cb5750600061187f565b600e54604080870151606088015191517fa57ce6820000000000000000000000000000000000000000000000000000000081526000936001600160a01b03169263a57ce6829261182592909189918b918a91600401615415565b60206040518083038186803b15801561183d57600080fd5b505afa158015611851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118759190615379565b6080870151109150505b949350505050565b600f546001600160a01b031633146118e657600f546040517fa939eef20000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b03909116604482015260640161086b565b805160005b81811015610b805760046011600085848151811061190b5761190b6153ad565b6020026020010151815260200190815260200160002060050160006101000a81548160ff0219169083600581111561194557611945614a7e565b0217905550600761196e848381518110611961576119616153ad565b6020026020010151611396565b6001600160a01b0316848381518110611989576119896153ad565b60200260200101517ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c93466601160008887815181106119c8576119c86153ad565b60200260200101518152602001908152602001600020426040516119ed929190615392565b60405180910390a4611a17838281518110611a0a57611a0a6153ad565b602002602001015161350b565b611a20816153dc565b90506118eb565b611a606040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000611a6c8487615445565b90506000818610611ab4576000611a83888861545d565b601354909150611a949082906138e9565b915085821015611aa2578591505b611aac828261545d565b845250611af1565b60008352848610611adf575083611ad584611acf888561545d565b906138e9565b60a0840152611af1565b5084611aeb87856138e9565b60a08401525b601554611aff9082906138e9565b6080840152601454611b129082906138e9565b606084018190526080840151611b289190615445565b611b32908261545d565b60408401528251611b43828861545d565b611b4d919061545d565b6020840152509095945050505050565b60606004805461092a90615090565b600d5460009081906001600160a01b03163314611bd057600d546040517f96a1986a0000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b03909116604482015260640161086b565b60008087611ccf5784611c11576040517f30386bed00000000000000000000000000000000000000000000000000000000815230600482015260240161086b565b60808b0151611c4e576040517f4965aa7100000000000000000000000000000000000000000000000000000000815230600482015260240161086b565b60128054906000611c5e836153dc565b919050559750611c6e8989613901565b600088815260116020526040902088815560018082018c905560608d01516002830180549395509092909160ff1990911690836004811115611cb257611cb2614a7e565b02179055505060058101805460ff19166001908117909155611ce0565b600088815260116020526040902091505b81541580611d075750600160058084015460ff1690811115611d0457611d04614a7e565b14155b80611d16575089826001015414155b80611d4e57508a606001516004811115611d3257611d32614a7e565b600283015460ff166004811115611d4b57611d4b614a7e565b14155b15611e125781543090899015600160058087015460ff1690811115611d7557611d75614a7e565b14158d866001015414158f606001516004811115611d9557611d95614a7e565b600288015460ff166004811115611dae57611dae614a7e565b6040517f5f854e4b0000000000000000000000000000000000000000000000000000000081526001600160a01b03909716600488015260248701959095529215156044860152901515606485015215156084840152141560a482015260c40161086b565b8154611e1d90611396565b6001600160a01b0316896001600160a01b031614611e9b5730888a611e458560000154611396565b6040517fc744afae0000000000000000000000000000000000000000000000000000000081526001600160a01b03948516600482015260248101939093529083166044830152909116606482015260840161086b565b8415611ec4578a60800151826003016000828254611eb99190615445565b90915550611ee29050565b8a60800151826003016000828254611edc919061545d565b90915550505b6003820154612016578515611f365781546040517fa6b45de000000000000000000000000000000000000000000000000000000000815230600482015260248101919091526044810187905260640161086b565b611f438260040154613a67565b611f4c90615474565b925060038b606001516004811115611f6657611f66614a7e565b1480611f87575060048b606001516004811115611f8557611f85614a7e565b145b15611fa257611f9587613a67565b611f9f90846154ad565b92505b6000600483015560058201805460ff191660021790558154611fc39061350b565b6002896001600160a01b031683600001547ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c934668542604051612005929190615392565b60405180910390a4505491506121f6565b6120238b606001516138be565b1561218957600482015460028c60600151600481111561204557612045614a7e565b1461206e5785156120615761205a8882615445565b905061206e565b61206b888261545d565b90505b61207781613a67565b61208088613a67565b61208a9190615521565b60048085018990556040805160c08101825286548152600187015460208201526002870154939750612144939092879284019160ff16908111156120d0576120d0614a7e565b60048111156120e1576120e1614a7e565b8152600382015460208201526004820154604082015260058083015460609092019160ff169081111561211657612116614a7e565b600581111561212757612127614a7e565b815250508d60a001518e60c001518f61010001516000015161178b565b15612187576101008c0151516040517f1996462c00000000000000000000000000000000000000000000000000000000815261086b9130918691906004016151f2565b505b80612195576001612198565b60005b60098111156121a9576121a9614a7e565b896001600160a01b031683600001547ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c9346685426040516121e9929190615392565b60405180910390a4505491505b97509795505050505050565b61220d338383613b03565b5050565b600d546000906001600160a01b0316331461227357600d546040517f96a1986a0000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b03909116604482015260640161086b565b6000838152601160205260409020805415806122a85750600160058083015460ff16908111156122a5576122a5614a7e565b14155b806122c1575060028101546122bf9060ff166138be565b155b156123585780543090859015600160058086015460ff16908111156122e8576122e8614a7e565b6002860154911415906122fd9060ff166138be565b6040517fc81ff16c0000000000000000000000000000000000000000000000000000000081526001600160a01b039095166004860152602485019390935290151560448401521515606483015215608482015260a40161086b565b6123658160010154613bd2565b828160040160008282546123799190615445565b909155506001905061238a85611396565b6001600160a01b031682600001547ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c9346684426040516123c9929190615392565b60405180910390a46002015460ff169392505050565b805160609060008167ffffffffffffffff8111156123ff576123ff6145dd565b60405190808252806020026020018201604052801561243857816020015b61242561451b565b81526020019060019003908161241d5790505b50905060005b828110156111cf5761246885828151811061245b5761245b6153ad565b6020026020010151613cad565b82828151811061247a5761247a6153ad565b60200260200101819052508061248f906153dc565b905061243e565b6124a033836135ca565b6125125760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161086b565b61251e84848484613ddd565b50505050565b6000818152600560205260409020546060906001600160a01b03166125b15760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161086b565b60006125bb613e66565b905060008151116125db5760405180602001604052806000815250610ec1565b806125e584613e75565b6040516020016125f6929190615595565b6040516020818303038152906040529392505050565b60006002805414156126605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161086b565b60028055601054600d546040517f41627ea70000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529116906341627ea79060240160006040518083038186803b1580156126c457600080fd5b505afa1580156126d8573d6000803e3d6000fd5b505050600086815260116020526040902080549091506126f99033906135ca565b6127415780546040517f812d69ef000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481019190915260640161086b565b61274e8160010154613bd2565b80600301548510158061275f575084155b156127ac5760038101546040517fc2e0340400000000000000000000000000000000000000000000000000000000815230600482015260248101919091526044810186905260640161086b565b848160030160008282546127c0919061545d565b9091555050601280549060006127d5836153dc565b9190505591506127e58383613901565b60008281526011602052604090208281556003810186905560018083015481830155600280840154908301805460ff90921692909160ff19169083600481111561283157612831614a7e565b021790555060058101805460ff1916600117905560028201546128569060ff166138be565b15612b11578482600401600082825461286f919061545d565b90915550506004818101869055600d5460018401546040517fcf6bcba00000000000000000000000000000000000000000000000000000000081529283015260009182916001600160a01b03169063cf6bcba090602401604080518083038186803b1580156128dd57600080fd5b505afa1580156128f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291591906155c4565b601054600d546040517f7dbae6480000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152939550919350600092911690637dbae6489060240160206040518083038186803b15801561297e57600080fd5b505afa158015612992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b69190615379565b6040805160c08101825287548152600188015460208201526002880154929350612a5892909188919083019060ff1660048111156129f6576129f6614a7e565b6004811115612a0757612a07614a7e565b8152600382015460208201526004820154604082015260058083015460609092019160ff1690811115612a3c57612a3c614a7e565b6005811115612a4d57612a4d614a7e565b90525083858461178b565b15612a95573085826040517f5faadd9a00000000000000000000000000000000000000000000000000000000815260040161086b939291906151f2565b6040805160c08101825285548152600186015460208201526002860154612ad09287919083019060ff1660048111156129f6576129f6614a7e565b15612b0d573084826040517f3bc711db00000000000000000000000000000000000000000000000000000000815260040161086b939291906151f2565b5050505b6004846001600160a01b031682600001547ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c934668442604051612b53929190615392565b60405180910390a46003612b6688611396565b6001600160a01b031683600001547ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c934668542604051612ba5929190615392565b60405180910390a450506001600255949350505050565b600280541415612c0e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161086b565b60028055601054600d546040517f41627ea70000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529116906341627ea79060240160006040518083038186803b158015612c7257600080fd5b505afa158015612c86573d6000803e3d6000fd5b505082519150506002811015612cca576040517fc833617e00000000000000000000000000000000000000000000000000000000815230600482015260240161086b565b60006011600084600081518110612ce357612ce36153ad565b602002602001015181526020019081526020016000209050612d093382600001546135ca565b612d515780546040517fdd4ccdeb000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481019190915260640161086b565b612d5e8160010154613bd2565b6000612d6d8260000154611396565b9050600060015b84811015612ffb5760116000878381518110612d9257612d926153ad565b602002602001015181526020019081526020016000209150612db83383600001546135ca565b612e005781546040517fdd4ccdeb000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481019190915260640161086b565b8154612e0b90611396565b6001600160a01b0316836001600160a01b0316141580612e3357508160010154846001015414155b80612e6e5750600282015460ff166004811115612e5257612e52614a7e565b600285015460ff166004811115612e6b57612e6b614a7e565b14155b80612e7a575081548454145b15612f2f57308483612e8f8560000154611396565b6001600160a01b0316866001600160a01b031614158560010154886001015414158660020160009054906101000a900460ff166004811115612ed357612ed3614a7e565b60028a015460ff166004811115612eec57612eec614a7e565b88548b546040517f43a352a300000000000000000000000000000000000000000000000000000000815261086b99989796959490931415929114906004016155e8565b8160030154846003016000828254612f479190615445565b925050819055508160040154846004016000828254612f669190615445565b909155505060006004830181905560038301556005808301805460ff19166001830217905550612fa1868281518110611a0a57611a0a6153ad565b6005836001600160a01b031683600001547ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c934668542604051612fe3929190615392565b60405180910390a4612ff4816153dc565b9050612d74565b50600283015461300d9060ff166138be565b156131d857600d5460018401546040517fcf6bcba000000000000000000000000000000000000000000000000000000000815260009283926001600160a01b039091169163cf6bcba0916130679160040190815260200190565b604080518083038186803b15801561307e57600080fd5b505afa158015613092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130b691906155c4565b601054600d546040517f7dbae6480000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152939550919350600092911690637dbae6489060240160206040518083038186803b15801561311f57600080fd5b505afa158015613133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131579190615379565b6040805160c0810182528854815260018901546020820152600289015492935061319792909189919083019060ff1660048111156129f6576129f6614a7e565b156131d4573086826040517f3bc711db00000000000000000000000000000000000000000000000000000000815260040161086b939291906151f2565b5050505b6006826001600160a01b031684600001547ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c93466864260405161321a929190615392565b60405180910390a450506001600255505050565b613236613401565b6132426012600a61536d565b8151118061326d57506132576012600a61536d565b8160400151826020015161326b9190615445565b115b156132a85730816040517ffdc302ce00000000000000000000000000000000000000000000000000000000815260040161086b92919061563e565b80516013819055602080830151601481905560408085015160158190556060808701516016819055835196875294860193909352908401528201527f90f02ac22ccf1f84513e14ace0ef9298bbe0af68ac0bd145efcf2e3447b88dbc90608001610805565b61331561451b565b6107b382613cad565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806133b157507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806107b357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146107b3565b6000546001600160a01b03163314613460576000546040517f1abc2f980000000000000000000000000000000000000000000000000000000081523060048201523360248201526001600160a01b03909116604482015260640161086b565b565b600081815260076020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03841690811790915581906134af82611396565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000816134f76012600a61536d565b613501908561567c565b610ec191906156e8565b600061351682611396565b905061352481600084613fa7565b61352f600083613462565b6001600160a01b038116600090815260066020526040812080546001929061355890849061545d565b909155505060008281526005602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000818152600560205260408120546001600160a01b03166136545760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606482015260840161086b565b600061365f83611396565b9050806001600160a01b0316846001600160a01b0316148061369a5750836001600160a01b031661368f846109ad565b6001600160a01b0316145b8061187f57506001600160a01b0380821660009081526008602090815260408083209388168352929052205460ff1661187f565b826001600160a01b03166136e182611396565b6001600160a01b03161461375d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606482015260840161086b565b6001600160a01b0382166137d85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161086b565b6137e3838383613fa7565b6137ee600082613462565b6001600160a01b038316600090815260066020526040812080546001929061381790849061545d565b90915550506001600160a01b0382166000908152600660205260408120805460019290613845908490615445565b909155505060008181526005602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600060028260048111156138d4576138d4614a7e565b10156138e15760006107b3565b600192915050565b60006138f76012600a61536d565b613501838561567c565b6001600160a01b0382166139575760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161086b565b6000818152600560205260409020546001600160a01b0316156139bc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161086b565b6139c860008383613fa7565b6001600160a01b03821660009081526006602052604081208054600192906139f1908490615445565b909155505060008181526005602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115613aff5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160448201527f6e20696e74323536000000000000000000000000000000000000000000000000606482015260840161086b565b5090565b816001600160a01b0316836001600160a01b03161415613b655760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161086b565b6001600160a01b03838116600081815260086020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600d546040517f1fdb6cbd000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b031690631fdb6cbd9060240160606040518083038186803b158015613c3057600080fd5b505afa158015613c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c6891906156fc565b50915050801561220d576040517f6ba3e71a0000000000000000000000000000000000000000000000000000000081523060048201526024810183905260440161086b565b613cb561451b565b6000828152601160209081526040808320815160c081018352815481526001820154938101939093526002810154909183019060ff166004811115613cfc57613cfc614a7e565b6004811115613d0d57613d0d614a7e565b8152600382015460208201526004820154604082015260058083015460609092019160ff1690811115613d4257613d42614a7e565b6005811115613d5357613d53614a7e565b8152505090506040518060e00160405280826000015181526020018260200151815260200182604001516004811115613d8e57613d8e614a7e565b815260200182606001518152602001826080015181526020018260a001516005811115613dbd57613dbd614a7e565b8152602001613dcb85611396565b6001600160a01b031690529392505050565b613de88484846136ce565b613df484848484614034565b61251e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161086b565b60606017805461092a90615090565b606081613eb557505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613edf5780613ec9816153dc565b9150613ed89050600a836156e8565b9150613eb9565b60008167ffffffffffffffff811115613efa57613efa6145dd565b6040519080825280601f01601f191660200182016040528015613f24576020820181803683370190505b5090505b841561187f57613f3960018361545d565b9150613f46600a8661572a565b613f51906030615445565b60f81b818381518110613f6657613f666153ad565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613fa0600a866156e8565b9450613f28565b613fb28383836141fc565b6001600160a01b03831615801590613fd257506001600160a01b03821615155b15610b80576009826001600160a01b0316827ff9b31acb62d492321b0251319b98e9ec85be9c8d6ac5ff592a574c6d09c934666011600086815260200190815260200160002042604051614027929190615392565b60405180910390a4505050565b60006001600160a01b0384163b156141f4576040517f150b7a020000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063150b7a029061409190339089908890889060040161573e565b602060405180830381600087803b1580156140ab57600080fd5b505af19250505080156140f9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526140f69181019061577a565b60015b6141a9573d808015614127576040519150601f19603f3d011682016040523d82523d6000602084013e61412c565b606091505b5080516141a15760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161086b565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014905061187f565b50600161187f565b6001600160a01b0383166142575761425281600b80546000838152600c60205260408120829055600182018355919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90155565b61427a565b816001600160a01b0316836001600160a01b03161461427a5761427a83826142b4565b6001600160a01b03821661429157610b8081614351565b826001600160a01b0316826001600160a01b031614610b8057610b808282614400565b600060016142c1846114af565b6142cb919061545d565b6000838152600a602052604090205490915080821461431e576001600160a01b03841660009081526009602090815260408083208584528252808320548484528184208190558352600a90915290208190555b506000918252600a602090815260408084208490556001600160a01b039094168352600981528383209183525290812055565b600b546000906143639060019061545d565b6000838152600c6020526040812054600b805493945090928490811061438b5761438b6153ad565b9060005260206000200154905080600b83815481106143ac576143ac6153ad565b6000918252602080832090910192909255828152600c9091526040808220849055858252812055600b8054806143e4576143e4615797565b6001900381819060005260206000200160009055905550505050565b600061440b836114af565b6001600160a01b0390931660009081526009602090815260408083208684528252808320859055938252600a9052919091209190915550565b82805461445090615090565b90600052602060002090601f01602090048101928261447257600085556144b8565b82601f1061448b57805160ff19168380011785556144b8565b828001600101855582156144b8579182015b828111156144b857825182559160200191906001019061449d565b50613aff92915061457a565b6040518060c001604052806000815260200160008152602001600060048111156144f0576144f0614a7e565b815260200160008152602001600081526020016000600581111561451657614516614a7e565b905290565b6040518060e0016040528060008152602001600081526020016000600481111561454757614547614a7e565b815260200160008152602001600081526020016000600581111561456d5761456d614a7e565b8152600060209091015290565b5b80821115613aff576000815560010161457b565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146145bd57600080fd5b50565b6000602082840312156145d257600080fd5b8135610ec18161458f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561462f5761462f6145dd565b60405290565b604051610120810167ffffffffffffffff8111828210171561462f5761462f6145dd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156146a0576146a06145dd565b604052919050565b600067ffffffffffffffff8311156146c2576146c26145dd565b6146f360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601614659565b905082815283838301111561470757600080fd5b828260208301376000602084830101529392505050565b60006020828403121561473057600080fd5b813567ffffffffffffffff81111561474757600080fd5b8201601f8101841361475857600080fd5b61187f848235602084016146a8565b6001600160a01b03811681146145bd57600080fd5b6000806000806080858703121561479257600080fd5b843561479d81614767565b935060208501356147ad81614767565b925060408501356147bd81614767565b915060608501356147cd81614767565b939692955090935050565b60005b838110156147f35781810151838201526020016147db565b8381111561251e5750506000910152565b6000815180845261481c8160208601602086016147d8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610ec16020830184614804565b60006020828403121561487357600080fd5b5035919050565b6000806040838503121561488d57600080fd5b823561489881614767565b946020939093013593505050565b803580151581146148b657600080fd5b919050565b8035600381106148b657600080fd5b8035600581106148b657600080fd5b600060c082840312156148eb57600080fd5b6148f361460c565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b600060a0828403121561494357600080fd5b60405160a0810181811067ffffffffffffffff82111715614966576149666145dd565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600061024082840312156149b457600080fd5b6149bc614635565b90506149c7826148a6565b81526149d5602083016148a6565b60208201526149e6604083016148bb565b60408201526149f7606083016148ca565b60608201526080820135608082015260a082013560a082015260c082013560c0820152614a278360e084016148d9565b60e0820152614a3a836101a08401614931565b61010082015292915050565b60008060006102808486031215614a5c57600080fd5b83359250614a6d85602086016149a1565b915061026084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110614abd57614abd614a7e565b9052565b60068110614abd57614abd614a7e565b80518252602081015160208301526040810151614af16040840182614aad565b50606081015160608301526080810151608083015260a0810151610b8060a0840182614ac1565b60c081016107b38284614ad1565b600060208284031215614b3857600080fd5b8135610ec181614767565b600080600060608486031215614b5857600080fd5b8335614b6381614767565b92506020840135614b7381614767565b929592945050506040919091013590565b60006020808385031215614b9757600080fd5b823567ffffffffffffffff80821115614baf57600080fd5b818501915085601f830112614bc357600080fd5b813581811115614bd557614bd56145dd565b8060051b9150614be6848301614659565b8181529183018401918481019088841115614c0057600080fd5b938501935b83851015614c1e57843582529385019390850190614c05565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015614c6c57614c59838551614ad1565b9284019260c09290920191600101614c46565b50909695505050505050565b81518152602080830151908201526040808301519082015260608083015190820152608081016107b3565b600080600080848603610120811215614cbb57600080fd5b60c0811215614cc957600080fd5b50614cd261460c565b8535815260208601356020820152614cec604087016148ca565b6040820152606086013560608201526080860135608082015260a086013560068110614d1757600080fd5b60a08201529660c0860135965060e0860135956101000135945092505050565b60008060008060808587031215614d4d57600080fd5b5050823594602084013594506040840135936060013592509050565b8681526020810186905260c08101614d846040830187614aad565b846060830152836080830152614d9d60a0830184614ac1565b979650505050505050565b6000806000806000806000610300888a031215614dc457600080fd5b614dce89896149a1565b96506102408801359550610260880135614de781614767565b945061028088013593506102a088013592506102c08801359150614e0e6102e089016148a6565b905092959891949750929550565b60008060408385031215614e2f57600080fd5b8235614e3a81614767565b9150614e48602084016148a6565b90509250929050565b60008060408385031215614e6457600080fd5b50508035926020909101359150565b602081016107b38284614aad565b80518252602081015160208301526040810151614ea16040840182614aad565b50606081015160608301526080810151608083015260a0810151614ec860a0840182614ac1565b5060c0908101516001600160a01b0316910152565b6020808252825182820181905260009190848201906040850190845b81811015614c6c57614f0c838551614e81565b9284019260e09290920191600101614ef9565b60008060008060808587031215614f3557600080fd5b8435614f4081614767565b93506020850135614f5081614767565b925060408501359150606085013567ffffffffffffffff811115614f7357600080fd5b8501601f81018713614f8457600080fd5b614f93878235602084016146a8565b91505092959194509250565b60008060008060808587031215614fb557600080fd5b84359350602085013592506040850135915060608501356147cd81614767565b600060808284031215614fe757600080fd5b6040516080810181811067ffffffffffffffff8211171561500a5761500a6145dd565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b6000806040838503121561504e57600080fd5b823561505981614767565b9150602083013561506981614767565b809150509250929050565b602081016107b38284614ac1565b60e081016107b38284614e81565b600181811c908216806150a457607f821691505b602082108114156150de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208083526000845481600182811c91508083168061510657607f831692505b85831081141561513d577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b87860183815260200181801561515a576001811461516b57615196565b60ff19861682528782019650615196565b60008b81526020902060005b8681101561519057815484820152908501908901615177565b83019750505b50949998505050505050505050565b805482526001810154602083015260ff6002820154166151c86040840182614aad565b50600381015460608301526004810154608083015260ff600582015416610b8060a0840182614ac1565b6001600160a01b0384168152610100810161521060208301856151a5565b8260e0830152949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b808511156152a657817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561528c5761528c61521e565b8085161561529957918102915b93841c9390800290615252565b509250929050565b6000826152bd575060016107b3565b816152ca575060006107b3565b81600181146152e057600281146152ea57615306565b60019150506107b3565b60ff8411156152fb576152fb61521e565b50506001821b6107b3565b5060208310610133831016604e8410600b8410161715615329575081810a6107b3565b615333838361524d565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156153655761536561521e565b029392505050565b6000610ec183836152ae565b60006020828403121561538b57600080fd5b5051919050565b60e081016153a082856151a5565b8260c08301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561540e5761540e61521e565b5060010190565b60a081016154238288614aad565b8560208301528460408301528360608301528260808301529695505050505050565b600082198211156154585761545861521e565b500190565b60008282101561546f5761546f61521e565b500390565b60007f80000000000000000000000000000000000000000000000000000000000000008214156154a6576154a661521e565b5060000390565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038413811516156154e7576154e761521e565b827f800000000000000000000000000000000000000000000000000000000000000003841281161561551b5761551b61521e565b50500190565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561555b5761555b61521e565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561558f5761558f61521e565b50500390565b600083516155a78184602088016147d8565b8351908301906155bb8183602088016147d8565b01949350505050565b600080604083850312156155d757600080fd5b505080516020909101519092909150565b6001600160a01b0388168152610220810161560660208301896151a5565b61561360e08301886151a5565b9415156101a08201529215156101c08401529015156101e08301521515610200909101529392505050565b6001600160a01b038316815260a08101610ec16020830184805182526020810151602083015260408101516040830152606081015160608301525050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156156b4576156b461521e565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826156f7576156f76156b9565b500490565b60008060006060848603121561571157600080fd5b8351925060208401519150604084015190509250925092565b600082615739576157396156b9565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526157706080830184614804565b9695505050505050565b60006020828403121561578c57600080fd5b8151610ec18161458f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212202a6504c07fa92ae48d9559a2a9850f970fa02d690ca5e8e3a4f4cb13ecd567b364736f6c63430008090033";

type OptionTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionToken__factory extends ContractFactory {
  constructor(...args: OptionTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptionToken> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<OptionToken>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): OptionToken {
    return super.attach(address) as OptionToken;
  }
  override connect(signer: Signer): OptionToken__factory {
    return super.connect(signer) as OptionToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionTokenInterface {
    return new utils.Interface(_abi) as OptionTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionToken {
    return new Contract(address, _abi, signerOrProvider) as OptionToken;
  }
}
